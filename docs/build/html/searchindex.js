Search.setIndex({"docnames": ["apidocs/index", "apidocs/pynodes/pynodes", "apidocs/pynodes/pynodes.addon", "apidocs/pynodes/pynodes.colors", "apidocs/pynodes/pynodes.core", "apidocs/pynodes/pynodes.datasocks", "apidocs/pynodes/pynodes.geosocks", "apidocs/pynodes/pynodes.nodes", "apidocs/pynodes/pynodes.scene", "gallery/gallery", "gallery/geometry_nodes", "gallery/geometry_nodes/arrow_modeling", "gallery/geometry_nodes/atom_links", "gallery/geometry_nodes/clone_to_mesh_faces", "gallery/geometry_nodes/fractals_geometry", "gallery/geometry_nodes/geometry_morph", "gallery/geometry_nodes/mesh_faces_to_maze", "gallery/geometry_nodes/mobius_band", "gallery/geometry_nodes/n_th_bezier", "gallery/geometry_nodes/polar_coord_illustrating", "gallery/geometry_nodes/small_demos", "gallery/geometry_nodes/text_examples", "gallery/geometry_nodes/tiling_paterns", "gallery/geometry_nodes/torus_knot", "gallery/geometry_nodes/water_wave", "gallery/shader_nodes", "gallery/shader_nodes/osl_shader", "gallery/shader_nodes/toon_shader", "gallery/shader_nodes/world_shader", "index", "quick_start", "socket_types"], "filenames": ["apidocs\\index.rst", "apidocs\\pynodes\\pynodes.rst", "apidocs\\pynodes\\pynodes.addon.rst", "apidocs\\pynodes\\pynodes.colors.rst", "apidocs\\pynodes\\pynodes.core.rst", "apidocs\\pynodes\\pynodes.datasocks.rst", "apidocs\\pynodes\\pynodes.geosocks.rst", "apidocs\\pynodes\\pynodes.nodes.rst", "apidocs\\pynodes\\pynodes.scene.rst", "gallery\\gallery.rst", "gallery\\geometry_nodes.rst", "gallery\\geometry_nodes\\arrow_modeling.rst", "gallery\\geometry_nodes\\atom_links.rst", "gallery\\geometry_nodes\\clone_to_mesh_faces.rst", "gallery\\geometry_nodes\\fractals_geometry.rst", "gallery\\geometry_nodes\\geometry_morph.rst", "gallery\\geometry_nodes\\mesh_faces_to_maze.rst", "gallery\\geometry_nodes\\mobius_band.rst", "gallery\\geometry_nodes\\n_th_bezier.rst", "gallery\\geometry_nodes\\polar_coord_illustrating.rst", "gallery\\geometry_nodes\\small_demos.rst", "gallery\\geometry_nodes\\text_examples.rst", "gallery\\geometry_nodes\\tiling_paterns.rst", "gallery\\geometry_nodes\\torus_knot.rst", "gallery\\geometry_nodes\\water_wave.rst", "gallery\\shader_nodes.rst", "gallery\\shader_nodes\\osl_shader.rst", "gallery\\shader_nodes\\toon_shader.rst", "gallery\\shader_nodes\\world_shader.rst", "index.md", "quick_start.rst", "socket_types.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.addon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.colors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.datasocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.geosocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.nodes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.scene</span></code>", "Gallery", "Geometry Nodes", "Arrow modeling", "Atom Links", "Clone to Mesh Faces", "Fractals Geometry", "Mesh Transition", "Mesh Surface to Maze", "M\u00f6bius Band", "N-th B\u00e9zier", "Polar Coordinate Illustrating", "Small Demos", "Text Examples", "Tiling Paterns", "Torus Knot", "Water Wave", "Shader Nodes", "OSL Shader", "Toon Shader", "World Shader", "Home", "Quick Start", "Available Socket Types"], "terms": {"thi": [0, 5, 6, 9, 11, 12, 13, 14, 23, 26, 27, 28, 30], "page": [0, 6], "contain": [0, 5, 6, 9], "auto": [0, 5, 6, 7], "gener": [0, 5, 6, 7, 23, 30], "document": [0, 4, 5, 9, 29], "1": [0, 3, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 30], "pynod": [0, 9, 11, 14, 15, 17, 18, 19, 22, 23, 24, 26, 28, 30, 31], "addon": [0, 1, 29], "color": [0, 1, 4, 5, 6, 7, 9, 20, 21, 22, 23, 25, 28, 29, 30, 31], "core": [0, 1, 5, 6, 29, 30], "datasock": [0, 1, 4, 6, 29, 31], "geosock": [0, 1, 4, 9, 29, 31], "node": [0, 1, 2, 4, 5, 6, 8, 9, 14, 20, 23, 26, 29], "scene": [0, 1, 4, 5, 6, 20, 26, 27, 29], "creat": [0, 4, 5, 6, 23, 26, 29, 30], "sphinx": 0, "autodoc2": 0, "regist": [1, 2], "unregist": [1, 2], "bl_info": 1, "none": [1, 2, 4, 5, 6, 7, 8, 11, 14, 18, 19], "pynodes_pt_main": 2, "pynodes_ot_arrang": 2, "arrang": [2, 30], "all": [2, 5, 6, 7, 9, 23, 26, 29, 30], "deepest": 2, "frame": [2, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30], "first": [2, 5, 6, 17, 18], "column": [2, 5, 6], "from": [2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 20, 22, 23, 24, 26, 28, 29], "left": [2, 5, 6, 7], "right": [2, 5, 6, 7, 14], "pynodes_ot_purg": 2, "clear": 2, "orphan": 2, "data": [2, 5, 6, 8, 19, 26, 27, 28, 29, 30], "block": [2, 5, 26], "without": [2, 5, 6], "ani": [2, 5, 6], "user": [2, 5, 26], "file": [2, 5, 9, 25, 28], "repres": [2, 4, 6, 29, 30], "blender": [2, 6, 13, 26, 28, 29], "editor": [2, 5, 6, 26, 27, 29, 30], "get_active_tre": 2, "is_fram": 2, "is_linked_output": 2, "is_linked_input": 2, "match_frame_nod": 2, "arrange_tre": 2, "base": [2, 3, 4, 5, 6, 8, 18, 23, 26, 29, 30, 31], "bpy": [2, 4, 5, 6, 7, 8, 19, 26, 27, 28], "type": [2, 4, 5, 6, 7, 8, 29, 30], "panel": [2, 27], "bl_label": 2, "bl_space_typ": 2, "node_editor": 2, "bl_region_typ": 2, "ui": [2, 30], "bl_categori": 2, "draw": 2, "context": [2, 5, 6, 26, 27], "oper": [2, 5, 6, 7, 23, 29, 30], "bl_idnam": [2, 4, 5, 6], "pynodes_arrang": 2, "execut": [2, 5, 30], "invok": 2, "valu": [2, 4, 5, 6, 7, 18, 23, 26], "classmethod": [2, 4, 5], "poll": 2, "outlin": 2, "orphans_purge_recurs": 2, "purg": 2, "initi": [2, 4, 5, 6, 8], "properti": [2, 4, 26, 27], "height_with_offset": 2, "nodetre": [2, 4], "frame_child_nod": 2, "list": [2, 4, 5, 6, 8, 14], "self": [2, 4, 5], "btree": [2, 4], "margin_x": 2, "40": 2, "margin_i": 2, "20": [2, 7, 11, 16, 19, 22, 24], "frame_margin_x": 2, "10": [2, 5, 6, 7, 11, 14, 16, 24, 26], "frame_margin_i": 2, "node_center1": 2, "true": [2, 4, 5, 6, 7, 8, 12, 14, 16, 19, 24, 26, 27, 28], "node_center2": 2, "only_selected_fram": 2, "fals": [2, 5, 6, 7, 12, 15, 16, 17, 18, 24], "reverse_single_link_sequ": 2, "hex_color_to_rgb": 3, "hex_color_to_rgba": 3, "convert_srgb_to_linear_rgb": 3, "convert": [3, 5, 6, 30], "srgb": 3, "linear": [3, 5, 7, 18], "rgb": [3, 5, 7, 27], "wikipedia": 3, "rgba": [3, 5, 7], "color_tupl": 3, "white": [3, 5], "black": [3, 19, 26], "light_grai": 3, "grai": [3, 5], "dark_grai": 3, "silver": 3, "light_r": 3, "mid_r": 3, "dark_r": 3, "red": [3, 5, 7], "light_orang": 3, "mid_orang": 3, "dark_orang": 3, "orang": 3, "light_yellow": 3, "mid_yellow": 3, "dark_yellow": 3, "yellow": 3, "light_ol": 3, "mid_ol": 3, "dark_ol": 3, "oliv": 3, "light_lim": 3, "mid_lim": 3, "dark_lim": 3, "lime": 3, "light_green": 3, "mid_green": 3, "dark_green": 3, "green": [3, 5, 6, 7, 19], "light_cyan": 3, "mid_cyan": 3, "dark_cyan": 3, "cyan": 3, "light_azur": 3, "mid_azur": 3, "dark_azur": 3, "azur": 3, "light_blu": 3, "mid_blu": 3, "dark_blu": 3, "blue": [3, 5, 7], "light_violet": 3, "mid_violet": 3, "dark_violet": 3, "violet": 3, "light_magenta": 3, "mid_magenta": 3, "dark_magenta": 3, "magenta": 3, "light_ros": 3, "mid_ros": 3, "dark_ros": 3, "rose": 3, "color_palett": 3, "hex_color": 3, "str": [3, 4, 5, 6, 8], "srgb_color_compon": 3, "float": [3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 30, 31], "ffffff": [3, 26], "000000": [3, 19, 26], "7f5f5f": 3, "7f3f3f": 3, "7f1f1f": 3, "bfbfbf": 3, "ffbfbf": 3, "ff7f7f": 3, "ff3f3f": 3, "ff0000": 3, "7f6f5f": 3, "7f5f3f": 3, "7f4f1f": 3, "7f3f00": 3, "ffffbf": 3, "ffff7f": 3, "ffff3f": 3, "ffff00": 3, "6f7f5f": 3, "5f7f3f": 3, "4f7f1f": 3, "3f7f00": 3, "bfffbf": 3, "7fff7f": 3, "3fff3f": 3, "00ff00": 3, "5f7f6f": 3, "3f7f5f": 3, "1f7f4f": 3, "007f3f": 3, "bfffff": 3, "7fffff": 3, "3fffff": 3, "00ffff": 3, "5f6f7f": 3, "3f5f7f": 3, "1f4f7f": 3, "003f7f": 3, "bfbfff": 3, "7f7fff": 3, "3f3fff": 3, "0000ff": 3, "6f5f7f": 3, "5f3f7f": 3, "4f1f7f": 3, "3f007f": 3, "ffbfff": 3, "ff7fff": 3, "ff3fff": 3, "ff00ff": 3, "7f5f6f": 3, "7f3f5f": 3, "7f1f4f": 3, "7f003f": 3, "69d2e7": 3, "a7dbd8": 3, "e0e4cc": 3, "f38630": 3, "fa6900": 3, "fe4365": 3, "fc9d9a": 3, "f9cdad": 3, "c8c8a9": 3, "r": [3, 5, 11, 14, 19, 23, 30], "0": [3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30], "g": [3, 5, 29], "b": [3, 5, 7, 14], "tupl": [3, 4, 5, 18, 30], "nodewrap": 4, "socketwrap": 4, "socket": [4, 5, 6, 14, 23, 26, 29, 30], "an": [4, 5, 6, 25, 26, 29, 30], "output": [4, 9, 22, 23, 26, 29, 30], "tree": [4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "group": [4, 5, 6, 12, 29, 30], "simulationinput": 4, "simulationoutput": 4, "simulationzon": 4, "script": [4, 5, 7, 26, 29, 30], "new_nod": 4, "new_link": 4, "update_modifi": 4, "convert_param_nam": 4, "get_param_nam": 4, "dispath_tre": 4, "decor": [4, 9, 22, 23, 25, 29, 30], "make": [4, 5, 6, 30], "simul": 4, "reload": 4, "param": 4, "rt": 4, "bnode": 4, "input": [4, 5, 6, 12, 13, 16, 20, 26, 30], "label": [4, 14, 20, 23, 30], "plug_input": 4, "inputs_al": 4, "__setitem__": 4, "kei": [4, 6, 8], "bsocket": [4, 5, 6], "nodesocket": [4, 5, 6], "default_valu": 4, "__call__": 4, "name": [4, 5, 6, 7, 8, 11, 23, 26, 30], "link_tree_output": 4, "index": [4, 5, 6, 7, 16, 17, 18, 19, 20, 24], "int": [4, 5, 6, 7, 8], "func_ret_to_tree_output": 4, "linked_to_group_output": 4, "default": [4, 5, 6, 11, 12, 23, 28], "min": [4, 5, 6, 7, 11, 12, 20, 23, 30], "max": [4, 5, 6, 7, 11, 12, 20, 23, 30], "descript": 4, "angl": [4, 5, 6, 7, 9, 10, 11, 14, 22, 31], "distanc": [4, 5, 6, 7, 14, 17, 26, 31], "factor": [4, 5, 6, 7, 15, 17, 18, 19, 20, 23, 26, 27, 30, 31], "percentag": [4, 5, 31], "floattim": [4, 5, 31], "floattimeabsolut": [4, 5, 31], "unsign": [4, 5, 31], "integ": [4, 5, 6, 7, 11, 13, 17, 19, 20, 22, 23, 24, 26, 30, 31], "intfactor": [4, 5, 31], "intpercentag": [4, 5, 31], "intunsign": [4, 5, 31], "boolean": [4, 5, 6, 7, 14, 15, 16, 24, 31], "vector": [4, 5, 6, 7, 14, 18, 23, 26, 30, 31], "vectoracceler": [4, 5, 31], "vectordirect": [4, 5, 31], "vectoreul": [4, 5, 31], "vectortransl": [4, 5, 31], "vectorveloc": [4, 5, 31], "vectorxyz": [4, 5, 31], "geometri": [4, 5, 6, 7, 9, 23, 27, 29, 30, 31], "mesh": [4, 5, 6, 7, 8, 9, 10, 12, 14, 17, 19, 20, 22, 23, 24, 29, 31], "point": [4, 5, 6, 7, 11, 14, 18, 19, 20, 21, 27, 30, 31], "volum": [4, 5, 6, 7, 9, 10, 20, 31], "instanc": [4, 5, 6, 7, 14, 19, 20, 31], "curv": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 19, 21, 22, 31], "string": [4, 5, 7, 19, 31], "object": [4, 5, 6, 7, 8, 11, 13, 25, 26, 30, 31], "collect": [4, 5, 6, 7, 9, 31], "textur": [4, 5, 7, 31], "materi": [4, 5, 6, 7, 9, 10, 25, 26, 29, 31], "imag": [4, 5, 7, 9, 28, 29, 31], "shader": [4, 5, 7, 9, 11, 23, 29, 30, 31], "node_tre": 4, "group_input_nod": 4, "remove_orphan_input_nod": 4, "group_output_nod": 4, "tree_output_nod": 4, "is_embed": 4, "i": [4, 5, 6, 7, 11, 13, 14, 18, 19, 20, 22, 23, 26, 27, 28, 29, 30], "cur_fram": 4, "get": [4, 5, 12, 13, 19, 20, 30], "current": [4, 5, 6, 29, 30], "layout": 4, "newli": 4, "new_group_nod": 4, "bsocket_from": 4, "bsocket_to": 4, "new_input": 4, "nodesocketgeometri": [4, 6], "new_output": 4, "input_socket": 4, "kwarg": [4, 5], "__getitem__": [4, 6, 8], "nodefram": 4, "geometrynodesimulationinput": 4, "delta_tim": 4, "geometrynodesimulationoutput": 4, "link_from": 4, "input_nod": 4, "output_nod": 4, "to_ouput": 4, "shadernodescript": [4, 7], "fac": [4, 5, 7, 23, 26, 27, 30], "height": [4, 5, 6, 7, 24, 26], "nodesocketinterfac": 4, "inspect": 4, "paramet": [4, 5, 6, 17, 18, 23, 26, 29], "func": 4, "callabl": 4, "The": [4, 5, 6, 9, 10, 11, 18, 22, 23, 25, 26, 27], "docstr": [4, 25], "defin": [4, 5, 6, 9, 12, 18, 23, 25, 30], "exampl": [4, 5, 6, 9, 10, 11, 13, 18, 29], "def": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30], "node_group_nam": 4, "A": [4, 5, 6, 18, 22, 25, 29], "foo": 4, "froup": 4, "In": [4, 6, 22], "doc": 4, "mat_nam": 4, "mat": [4, 8], "world_nam": 4, "world": [4, 5, 7, 9, 25, 29], "light_nam": 4, "light": [4, 5], "scene_nam": 4, "compositor": 4, "number": [5, 6, 18], "inf": 5, "3d": [5, 6, 7, 9, 10], "arrai": [5, 30], "3": [5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 30], "item": [5, 6], "mathutil": [5, 27], "euler": [5, 6, 7], "rotat": [5, 6, 7, 11, 13, 14, 19, 22, 30], "100": [5, 6, 7, 12, 19, 26], "4": [3, 5, 6, 7, 13, 14, 17, 19, 26, 27], "bsdf": [5, 7, 11, 19, 23, 26, 27, 30], "inputbool": 5, "provid": [5, 6, 29], "inputcolor": 5, "chosen": [5, 6], "picker": 5, "widget": 5, "inputrgb": 5, "inputimag": 5, "access": [5, 6], "which": [5, 6, 18, 26, 29, 30], "allow": [5, 6], "you": [5, 6, 11, 30], "conveni": 5, "enter": 5, "switch": [5, 6, 7, 14, 17, 24, 26], "multipl": [5, 6], "inputinteg": 5, "inputmateri": 5, "singl": [5, 6], "It": [5, 6, 18, 26, 30], "can": [5, 6, 11, 22, 25, 26, 30], "connect": [5, 6, 7, 22, 23, 30], "other": [5, 6], "us": [5, 6, 18, 22, 23, 26, 30], "same": [5, 6, 26], "place": [5, 6, 22], "more": [5, 6, 30], "inputstr": [5, 19], "attribut": [5, 6, 7, 23, 30], "stringtocurv": [5, 21], "each": [5, 6, 22, 26], "uniqu": 5, "charact": 5, "onc": 5, "further": 5, "ar": [5, 6, 9, 18, 22, 25, 29, 30], "inputvalu": 5, "simpl": [5, 6, 18], "numer": 5, "inputfloat": 5, "inputvector": 5, "collectioninfo": 5, "info": 5, "inform": [5, 6, 22], "control": [5, 6, 18], "extern": [5, 7, 26], "imageinfo": 5, "anim": [5, 14, 20], "arbitrari": [5, 6], "either": 5, "specif": [5, 6, 30], "isviewport": 5, "viewport": [5, 6], "when": [5, 6, 22, 23, 30], "evalu": [5, 6, 7, 18], "For": [5, 6, 9, 13, 18, 29, 30], "final": [5, 6], "render": [5, 6, 9, 25, 27], "objectinfo": 5, "directli": [5, 26], "its": [5, 6, 29, 30], "via": 5, "transform": [5, 6, 11, 14, 19, 22, 26, 27], "selfobject": 5, "modifi": [5, 6, 30], "being": [5, 30], "retriev": [5, 6], "origin": [5, 6, 7, 9, 10, 22], "geometrynodeview": [5, 7], "viewer": 5, "view": [5, 26, 27], "insid": [5, 6, 7, 30], "spreadsheet": [5, 6], "viewfloat": 5, "viewvector": 5, "viewinteg": 5, "viewcolor": 5, "viewboolean": 5, "bricktextur": 5, "brick": 5, "add": [5, 6, 7, 26, 27, 30], "procedur": [5, 6], "produc": [5, 6], "checkertextur": 5, "checker": [5, 26], "checkerboard": 5, "gradienttextur": [5, 23, 30], "gradient": 5, "interpol": [5, 6, 7, 18, 26, 27], "intens": 5, "imagetexturegeo": 5, "sampl": [5, 6, 7, 23, 30], "alpha": [5, 7, 19], "magictextur": 5, "magic": 5, "psychedel": 5, "musgravetextur": 5, "musgrav": 5, "fractal": [5, 9, 10, 29], "perlin": 5, "nois": [5, 21, 26], "coordin": [5, 6, 9, 10, 23, 29, 30], "unlik": 5, "also": [5, 6, 14, 26, 30], "greater": 5, "over": 5, "how": [5, 6, 29], "octav": 5, "combin": [5, 18], "noisetextur": [5, 20, 21, 26], "voronoitextur": 5, "voronoi": 5, "worlei": 5, "wavetextur": 5, "wave": [5, 9, 10, 29], "band": [5, 7, 9, 10, 29], "ring": [5, 6, 7], "distort": [5, 7], "wavetextureband": 5, "whitenoisetextur": 5, "return": [5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30], "random": [5, 6, 7], "seed": [5, 6, 7, 20, 22], "2d": [5, 6, 7], "4d": [5, 7, 20, 21], "depend": [5, 6, 30], "dimens": [5, 6, 7], "rang": [5, 6, 7, 14, 18, 19, 20, 27], "between": [5, 6, 18, 25], "zero": [5, 6], "one": [5, 6, 16, 17, 18, 26, 30], "colorramp": 5, "ramp": 5, "map": [5, 6, 7, 26, 27], "combinecolor": 5, "composit": 5, "channel": 5, "model": [5, 9, 10, 29], "mode": [5, 6, 7, 26], "mixfloat": 5, "mix": [5, 7, 14, 15, 18, 23, 26, 27, 30], "amount": [5, 6, 7], "ha": [5, 6, 22, 29, 30], "addit": [5, 6], "blend": [5, 7, 19, 26], "mixvector": 5, "work": [5, 6, 26, 30], "individu": [5, 6, 7], "correspond": [5, 6, 9, 26, 29, 30], "pixel": 5, "two": [5, 6, 18, 22], "call": [5, 12, 23, 29, 30], "mixcolor": 5, "shadernodergbcurv": [5, 7], "correct": [5, 11], "level": [5, 6, 7, 13, 15], "adjust": [5, 6], "separatecolor": 5, "separ": [5, 6, 19], "split": [5, 6, 22], "combinexyz": [5, 14, 19, 23, 24, 30], "xyz": [5, 6], "compon": [5, 6, 7, 30], "floatmath": 5, "math": [5, 6, 7, 11, 14, 15, 16, 17, 19, 22, 23, 24, 30], "perform": [5, 6], "vectormath": 5, "select": [5, 6, 7, 14, 22, 24, 27], "booleanmath": 5, "basic": [5, 6], "logic": [5, 29], "compar": [5, 7, 11, 26], "take": [5, 18], "doe": [5, 6], "determin": [5, 6, 18], "whether": [5, 6, 30], "thei": [5, 6, 22], "similar": [5, 6], "complex": [5, 6], "comparison": 5, "help": 5, "reduc": 5, "necessari": [5, 6], "readabl": 5, "condit": [5, 6], "onli": [5, 6, 26, 29, 30], "pass": [5, 6, 23, 30], "through": [5, 6], "comput": [5, 6, 18], "randomfloat": [5, 16, 20], "like": [5, 6, 30], "field": [5, 6, 18], "randominteg": [5, 22], "randomvector": 5, "randomboolean": [5, 20], "inputposit": [5, 11], "posit": [5, 6, 7, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 27, 30], "inputindex": 5, "give": [5, 6], "indic": [5, 6, 30], "element": [5, 6, 7, 30], "start": [5, 6, 7, 9, 11, 16, 18, 29], "intern": [5, 6, 7, 26], "order": [5, 6], "necessarili": [5, 6], "visibl": [5, 6], "howev": [5, 6], "most": [5, 6], "scenetim": [5, 14, 17, 20, 21, 24], "time": [5, 6, 18, 19, 20, 26, 30], "": [5, 6, 11, 22, 29], "unit": [5, 6], "second": [5, 7, 14, 17, 20, 21, 22, 24], "ambientocclus": 5, "ambient": 5, "occlus": 5, "much": [5, 6], "hemispher": 5, "abov": [5, 12, 23, 30], "shade": [5, 6, 23, 26, 30], "occlud": 5, "weather": 5, "effect": [5, 6, 16, 30], "corner": [5, 6, 7], "environmenttextur": [5, 28], "environment": 5, "your": [5, 9, 26, 30], "environ": 5, "ies_textur": 5, "match": 5, "real": [5, 6, 30], "store": [5, 6, 23, 26, 30], "direct": [5, 6, 7], "distribut": [5, 6, 7, 26], "sourc": [5, 6], "imagetextur": 5, "pointdens": 5, "densiti": [5, 6, 7], "volumetr": 5, "particl": 5, "vertex": [5, 6, 16, 20], "anoth": [5, 6, 25], "skytextur": 5, "sky": 5, "brightcontrast": 5, "shadernodebrightcontrast": [5, 7], "colorgamma": 5, "appli": [5, 6], "gamma": [5, 7], "huesatur": 5, "hue": [5, 7], "satur": [5, 7], "hsv": [5, 7], "lightfalloff": 5, "cycl": [5, 7, 26], "shadernodebump": [5, 7], "bump": 5, "perturb": 5, "normal": [5, 6, 7, 13, 21, 23, 26, 30], "nearbi": 5, "surfac": [5, 6, 7, 9, 10, 23, 29, 30], "local": [5, 6, 7], "shadernodedisplac": [5, 7], "displac": [5, 7, 26], "along": [5, 6, 21, 22], "detail": [5, 6, 7, 30], "both": [5, 6], "bake": 5, "shadernodenorm": [5, 7], "dot": [5, 7, 9, 10, 26], "product": 5, "shadernodenormalmap": [5, 7], "usual": 5, "chain": [5, 29, 30], "specifi": [5, 6, 26], "tangent": [5, 6, 7, 14], "space": [5, 6, 7], "uv": [5, 6, 7, 26, 27], "must": 5, "should": [5, 6, 11], "set": [5, 6, 9, 11, 17, 18, 19, 20, 23, 25, 30], "non": [5, 6], "result": [5, 6, 7, 9, 10, 18, 30], "shadernodevectordisplac": [5, 7], "regular": [5, 6, 18], "shadernodevectortransform": [5, 7], "camera": [5, 7], "shadernodeblackbodi": [5, 7], "blackbodi": 5, "temperatur": [5, 7], "emit": 5, "natur": 5, "occur": 5, "frequenc": 5, "shadernodecombinecolor": [5, 7], "shadernodergbtobw": [5, 7], "bw": 5, "scale": [5, 6, 7, 13, 14, 17, 19, 20, 26], "lumin": 5, "shadernodeseparatecolor": [5, 7], "shadernodewavelength": [5, 7], "wavelength": [5, 7], "achiev": [5, 30], "spectrum": 5, "texturecoord": [5, 26, 27], "commonli": 5, "typic": [5, 6], "shadernodemap": [5, 7], "translat": [5, 6, 7], "shadergeometri": 5, "geometr": 5, "about": [5, 6], "incom": [5, 7], "avail": [5, 29, 30], "mixshad": [5, 26], "togeth": [5, 6, 9], "layer": 5, "where": [5, 6, 18], "mai": [5, 6, 30], "weight": [5, 6, 7], "shaderscript": [5, 26], "possibl": [5, 6, 22, 26, 30], "own": [5, 26], "open": [5, 26], "languag": [5, 26, 29], "osl": [5, 9, 25, 29], "These": [5, 6, 9, 26], "cpu": [5, 26], "optix": [5, 26], "backend": [5, 26], "wa": [5, 26], "design": [5, 22, 26], "setup": [5, 26, 29], "To": [5, 26, 27], "link": [5, 6, 9, 10, 18, 26, 29, 30], "text": [5, 7, 9, 10, 26, 29], "click": [5, 26], "updat": [5, 6, 26], "button": [5, 26], "few": [5, 26], "differ": [5, 6, 7, 9, 25, 26, 29], "wai": [5, 6, 26], "With": [5, 26], "oso": [5, 26], "bytecod": [5, 26], "itself": [5, 6, 26, 29], "everyth": [5, 26], "pack": [5, 6, 26], "drive": [5, 26], "automat": [5, 6, 26, 30], "compil": [5, 26], "directori": [5, 26], "done": [5, 26], "manual": [5, 6, 26], "third": [5, 26], "option": [5, 6, 11, 23, 26, 29, 30], "just": [5, 6, 26, 30], "look": [5, 6, 26], "up": [5, 6, 26], "search": [5, 26], "nodesocketfloat": 5, "true_float": 5, "util": [5, 6, 26], "factor_float": [5, 7], "5": [5, 6, 7, 11, 14, 18, 19, 20, 21, 22, 26, 27, 28, 30], "b_float": [5, 7], "clamp_factor": [5, 7], "result_float": [5, 7], "color_ramp_uniform": [5, 27], "hex": 5, "color_ramp_with_posit": [5, 26, 27], "to_norm": [5, 26], "invert": [5, 6, 7], "strength": [5, 7, 26], "to_str": [5, 19], "decim": [5, 7, 8, 19], "represent": [3, 5], "clamp": [5, 6, 7], "clamp_typ": [5, 7], "minmax": [5, 7], "minimum": [5, 6, 7, 30], "maximum": [5, 7, 30], "float_curv": [5, 19, 27], "posx": 5, "posi": 5, "handle_typ": [5, 6, 7], "auto_clamp": 5, "05": [5, 6, 7, 17, 19], "03": [5, 7, 17, 19, 20, 26], "to_integ": [5, 20], "rounding_mod": [5, 7], "round": [5, 6, 7], "choic": 5, "method": [5, 6, 7, 29, 30], "floor": [5, 7], "ceil": [5, 7], "truncat": [5, 6, 7], "map_rang": [5, 14, 17], "from_min": [5, 7], "from_max": [5, 7], "to_min": [5, 7], "to_max": [5, 7], "interpolation_typ": [5, 7], "step": [5, 7, 30], "remap": 5, "target": [5, 6, 7, 11], "smoothstep": [5, 7], "smootherstep": [5, 7], "value_001": [5, 7], "value_002": [5, 7], "use_clamp": [5, 7], "subtract": [5, 6, 7], "multipli": [5, 7], "divid": [5, 6, 7], "multiply_add": [5, 7], "power": [5, 7], "logarithm": [5, 7], "sqrt": [5, 7, 13], "inverse_sqrt": [5, 7], "absolut": [5, 7], "expon": [5, 7], "less_than": [5, 7, 26, 27], "greater_than": [5, 7], "sign": [5, 7], "smooth_min": [5, 7], "smooth_max": [5, 7], "trunc": [5, 7], "fract": [5, 7], "modulo": [5, 7], "wrap": [5, 7], "snap": [5, 7], "pingpong": [5, 7], "sine": [5, 7], "cosin": [5, 7], "arcsin": [5, 7], "arccosin": [5, 7], "arctang": [5, 7], "arctan2": [5, 7], "sinh": [5, 7], "cosh": [5, 7], "tanh": [5, 7], "radian": [5, 6, 7, 11], "degre": [5, 7, 18], "__neg__": 5, "__add__": [5, 6], "__radd__": 5, "__sub__": 5, "__rsub__": 5, "__mul__": 5, "__rmul__": 5, "__truediv__": 5, "__rtruediv__": 5, "__eq__": [5, 8], "__ne__": 5, "__ge__": 5, "__gt__": 5, "__le__": 5, "__lt__": 5, "addend": 5, "sum": [5, 6, 7], "rais": 5, "__pow__": 5, "log": 5, "log2": 5, "2": [5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 30], "ln": 5, "square_root": 5, "squar": [5, 6, 14, 22], "root": [5, 6], "One": 5, "equival": [5, 6, 27], "built": [5, 6, 29], "ab": 5, "read": [5, 6], "regard": 5, "turn": [3, 5, 6], "neg": 5, "__abs__": 5, "smallest": 5, "largest": 5, "threshold": [5, 6, 7], "smaller": [5, 6], "than": [5, 6, 30], "otherwis": [5, 6], "larger": [5, 6, 23, 30], "extract": 5, "And": 5, "epsilon": [5, 7], "less": 5, "equal": [5, 6, 7], "smooth_minimum": 5, "smooth": [5, 6, 7, 8, 15, 18, 23, 30], "smooth_maximum": 5, "nearest": [5, 6, 7], "__round__": 5, "down": 5, "__floor__": 5, "__ceil__": 5, "part": [5, 6, 11], "__trunc__": 5, "fraction": [5, 7, 18], "remaind": [5, 7], "__mod__": 5, "increment": 5, "move": [5, 6], "sin": [5, 7, 14, 17, 19, 23, 24, 30], "co": [5, 11, 14, 19, 23, 30], "tan": [5, 11], "arcco": 5, "arctan": 5, "invers": 5, "measur": 5, "hyperbolic_sin": 5, "hyperbol": 5, "hyperbolic_cosin": 5, "hyperbolic_tang": 5, "to_eul": 5, "axi": [5, 6, 7, 9, 10, 13, 30], "nodesocketfloatangl": 5, "nodesocketfloatdist": 5, "nodesocketfloatfactor": 5, "nodesocketfloatpercentag": 5, "nodesocketfloattim": 5, "nodesocketfloattimeabsolut": 5, "nodesocketfloatunsign": 5, "nodesocketvector": 5, "x": [5, 7, 14, 19, 23, 24, 30], "y": [5, 7, 14, 19, 23, 24, 27, 30], "z": [5, 6, 7, 11, 13, 23, 24, 30], "line_to": [5, 14], "end": [5, 6, 7, 16, 17, 18, 19, 23, 30], "line": [5, 6, 7, 9, 10, 12, 14, 20, 23, 27, 30], "poli": [5, 6, 7], "spline": [5, 6, 7], "primit": [5, 6, 23, 30], "line_toward": 5, "length": [3, 5, 6, 7, 11, 14, 19, 24], "true_vector": 5, "b_vector": [5, 7], "factor_vector": [5, 7], "factor_mod": [5, 7], "uniform": [5, 6, 7], "result_vector": [5, 7], "separate_xyz": 5, "vector_curv": 5, "curvemap": 5, "rotation_typ": [5, 7], "axis_angl": [5, 7], "center": [5, 6, 7, 14, 19, 21], "abil": 5, "around": [5, 6, 30], "pivot": 5, "x_axi": [5, 7], "y_axi": [5, 7], "z_axi": [5, 7, 14], "euler_xyz": [5, 7], "rotate_around_axi": 5, "rotate_around_x_axi": 5, "rotate_around_y_axi": 5, "rotate_around_z_axi": 5, "rotate_around_euler_xyz": 5, "rotate_object_eul": 5, "rotate_bi": [5, 7], "rotate_local_eul": 5, "rotate_object_around_axis_by_angl": 5, "rotate_local_around_axis_by_angl": 5, "vector_001": [5, 7], "vector_002": [5, 7], "cross_product": [5, 7], "project": [5, 7, 9], "reflect": [5, 7], "refract": [5, 7], "faceforward": [5, 7], "dot_product": [5, 7], "scalar": 5, "entrywis": 5, "divis": 5, "cross": 5, "onto": [5, 6], "need": [5, 6, 26, 30], "ior": [5, 7], "given": [5, 6, 30], "incid": 5, "ratio": 5, "c": [5, 7, 14, 19, 28], "orient": [5, 22], "awai": 5, "a_x": 5, "b_x": 5, "a_i": 5, "b_y": 5, "a_z": 5, "b_z": 5, "If": [5, 6, 30], "well": [5, 29], "align_euler_to_vector": [5, 11, 13], "pivot_axi": [5, 7], "align": [5, 6, 7, 23, 30], "vector_typ": [5, 7], "locat": [5, 6, 7, 11, 27, 30], "nodesocketvectoracceler": 5, "nodesocketvectordirect": 5, "nodesocketvectoreul": 5, "nodesocketvectortransl": 5, "nodesocketvectorveloc": 5, "nodesocketvectorxyz": 5, "nodesocketint": 5, "nodesocketintfactor": 5, "nodesocketintpercentag": 5, "nodesocketintunsign": 5, "nodesocketbool": 5, "true_bool": 5, "output_002": [5, 7], "AND": [5, 7], "boolean_001": [5, 7], "OR": [5, 7], "NOT": [5, 7], "nand": [5, 7], "nor": [5, 7], "xnor": [5, 7], "xor": [5, 7], "impli": [5, 7], "nimpli": [5, 7], "math_and": 5, "__and__": 5, "math_or": 5, "least": 5, "__or__": 5, "opposit": 5, "unari": 5, "e": [5, 6, 23, 29, 30], "someobject": 5, "__invert__": 5, "not_and": 5, "known": 5, "exclus": [5, 7], "unless": 5, "not_impli": 5, "substract": 5, "nodesocketstr": 5, "join": [5, 6, 14, 17, 18, 19, 20, 22], "delimit": [5, 7], "vertic": [5, 6, 7, 9, 10, 11, 14], "multi": 5, "replac": [5, 6, 7, 30], "find": [5, 6, 7], "segment": [5, 6, 7], "slice": [5, 9, 10, 24], "special_charact": 5, "special": 5, "t": [5, 6, 17, 18], "keyboard": 5, "line_break": [5, 7], "tab": [5, 7], "to_curv": [5, 6, 12, 16, 19, 23, 30], "align_x": [5, 7, 19, 21], "align_i": [5, 7], "top_baselin": [5, 7], "overflow": [5, 7], "pivot_mod": [5, 7], "bottom_left": [5, 7], "font": [5, 7, 19], "size": [5, 6, 7, 11, 19, 24], "character_spac": [5, 7], "word_spac": [5, 7], "line_spac": [5, 7], "text_box_width": [5, 7], "text_box_height": [5, 7], "justifi": [5, 7], "flush": [5, 7], "top": [5, 6, 7, 11, 17], "middl": [5, 6, 7], "bottom_baselin": [5, 7], "bottom": [5, 6, 7, 11], "scale_to_fit": [5, 7], "midpoint": [5, 7, 22], "top_left": [5, 7], "top_cent": [5, 7], "top_right": [5, 7], "bottom_cent": [5, 7], "bottom_right": [5, 7], "curve_inst": [5, 7, 19, 21], "pivot_point": [5, 6, 7], "nodesocketcolor": 5, "b_color": [5, 7], "blend_typ": [5, 7], "clamp_result": [5, 7], "darken": [5, 7], "burn": [5, 7], "lighten": [5, 7], "screen": [5, 7], "dodg": [5, 7], "overlai": [5, 7], "soft_light": [5, 7], "linear_light": [5, 7], "result_color": [5, 7], "rgb_curv": 5, "seper": [5, 19], "hsl": [5, 7], "bright_contrast": 5, "bright": [5, 7], "contrast": [5, 7, 22], "hue_satur": 5, "normal_map": 5, "uv_map": [5, 6, 7], "blender_object": [5, 7], "blender_world": [5, 7], "to_background": 5, "background": [5, 6, 7, 26], "emiss": [5, 7, 27], "nodesocketshad": 5, "static": [5, 6], "attribute_typ": [5, 7], "attach": [5, 6], "view_lay": [5, 7], "bevel": [5, 6, 8], "radiu": [5, 6, 7, 11, 12, 14, 19, 20, 21, 22, 23, 30], "camera_data": 5, "rel": [5, 6, 7, 11, 30], "could": [5, 6], "chang": [5, 6], "custom": [5, 6], "fog": [5, 6], "view_vector": [5, 7], "view_z_depth": [5, 7], "view_dist": [5, 7], "fresnel": [5, 7], "45": [5, 7], "dielectr": 5, "off": 5, "rest": 5, "true_norm": [5, 7], "parametr": [5, 7, 18], "6": [5, 6, 7, 14], "backfac": [5, 7, 27], "7": [5, 6, 7, 23, 30], "pointi": [5, 7], "8": [5, 6, 7, 17, 19, 27], "random_per_island": [5, 7], "hair_info": 5, "hair": 5, "is_strand": [5, 7], "intercept": [5, 7], "thick": [5, 7], "tangent_norm": [5, 7], "layer_weight": 5, "face": [5, 6, 7, 9, 10, 17, 29], "light_path": 5, "out": [5, 6], "kind": [5, 29], "rai": [5, 6], "particularli": 5, "physic": 5, "trick": 5, "mean": [5, 6, 7, 29, 30], "is_camera_rai": [5, 7], "is_shadow_rai": [5, 7], "is_diffuse_rai": [5, 7], "is_glossy_rai": [5, 7], "is_singular_rai": [5, 7], "is_reflection_rai": [5, 7], "is_transmission_rai": [5, 7], "ray_length": [5, 6, 7], "ray_depth": [5, 7], "9": [5, 6, 7], "diffuse_depth": [5, 7], "glossy_depth": [5, 7], "11": [5, 6, 7], "transparent_depth": [5, 7], "12": [5, 6, 7, 11, 20], "transmission_depth": [5, 7], "object_info": [5, 11], "some": 5, "variat": 5, "assign": [5, 6, 23, 25, 30], "randomli": [5, 6], "pick": 5, "object_index": [5, 7], "material_index": [5, 6, 7], "particle_info": 5, "ag": [5, 7], "lifetim": [5, 7], "veloc": [5, 7], "angular_veloc": [5, 7], "point_info": 5, "tangent_radi": 5, "anisotrop": [5, 7, 26], "tangent_uv_map": 5, "texture_coord": [], "from_instanc": [5, 7], "window": [5, 7, 19, 30], "activ": 5, "belong": 5, "color_attribut": [5, 7], "layer_nam": [5, 7], "volume_info": 5, "smoke": 5, "domain": [5, 6, 7], "flame": [5, 7], "wire_fram": 5, "use_pixel_s": [5, 7], "01": [5, 6, 7, 16, 19, 21], "wirefram": 5, "edg": [5, 6, 7, 12, 16], "appear": [5, 30], "As": [5, 30], "triangul": [5, 6], "befor": 5, "process": [5, 6], "topologi": [5, 6], "alwai": [5, 6], "add_shad": 5, "shader_001": [5, 7], "lambertian": 5, "holdout": [5, 7], "hole": 5, "transpar": [5, 7, 26, 27], "see": [5, 6, 30], "volumeprincipl": 5, "density_attribut": [5, 7], "anisotropi": [5, 7, 26], "absorption_color": [5, 7], "emission_strength": [5, 7], "emission_color": [5, 7], "blackbody_intens": [5, 7], "blackbody_tint": [5, 7], "1000": [5, 7], "temperature_attribut": [5, 7], "principl": [5, 11, 19, 23, 27, 30], "easi": 5, "fire": 5, "includ": [5, 6, 29], "scatter": 5, "absorpt": [5, 7], "subsurfacescatt": 5, "falloff": [5, 7], "random_walk": [5, 7], "subsurfac": [5, 7], "skin": 5, "wax": 5, "marbl": 5, "milk": 5, "rather": 5, "penetr": 5, "bounc": 5, "absorb": 5, "leav": 5, "burlei": [5, 7], "random_walk_fixed_radiu": [5, 7], "bssrdf": [5, 7], "volumeabsorpt": 5, "usag": [5, 6, 29], "would": [5, 6], "water": [5, 9, 10, 29], "glass": 5, "volumescatt": 5, "to_rgb": [5, 27], "eeve": [5, 7], "ggx": [5, 7], "subsurface_method": [5, 7], "base_color": [5, 7, 11, 19, 27], "subsurface_radiu": [5, 7], "subsurface_color": [5, 7], "subsurface_ior": [5, 7], "subsurface_anisotropi": [5, 7], "metal": [5, 7], "specular": [5, 7], "specular_tint": [5, 7], "rough": [5, 7, 26], "anisotropic_rot": [5, 7], "sheen": [5, 7], "sheen_tint": [5, 7], "clearcoat": [5, 7], "clearcoat_rough": [5, 7], "transmiss": [5, 7], "transmission_rough": [5, 7], "clearcoat_norm": [5, 7], "disnei": 5, "pbr": 5, "compat": 5, "softwar": 5, "pixar": 5, "renderman": 5, "unreal": 5, "engin": [5, 9, 25], "paint": 5, "substanc": 5, "painter": 5, "multi_ggx": [5, 7], "hairprincipl": 5, "018": [5, 7], "006": [5, 7], "002": [5, 7], "melanin": [5, 7], "melanin_red": [5, 7], "tint": [5, 7], "absorption_coeffici": [5, 7], "246": [5, 7], "52": [5, 7, 19], "365": [5, 7], "radial_rough": [5, 7], "coat": [5, 7], "55": [5, 7, 27], "offset": [5, 6, 7, 11, 18, 20, 21], "random_color": [5, 7], "random_rough": [5, 7], "beckmann": [5, 7, 26], "ashikhmin_shirlei": [5, 7], "diffus": [5, 7, 26, 27], "oren": 5, "nayar": 5, "graze": 5, "pure": 5, "tend": 5, "caus": [5, 6], "due": [5, 22], "caustic": 5, "sinc": 5, "trace": 5, "integr": 5, "veri": [5, 6, 30], "good": [5, 29], "shadow": 5, "here": [5, 30], "sharp": [5, 7], "glossi": [5, 7, 26], "microfacet": 5, "mirror": [5, 7], "roughnessu": [5, 7], "roughnessv": [5, 7], "transmit": 5, "best": [5, 9], "consid": [5, 6], "build": 5, "quit": 5, "dark": 5, "emissive_color": [5, 7], "clear_coat": [5, 7], "clear_coat_rough": [5, 7], "clear_coat_norm": [5, 7], "ambient_occlus": [5, 7], "toon": [5, 9, 25, 29], "transluc": 5, "straight": 5, "were": [5, 6], "affect": [5, 6, 30], "somewhat": 5, "note": 5, "complet": [5, 6, 29], "velvet": 5, "sigma": [5, 7], "nodesocketobject": 5, "transform_spac": [5, 7], "as_inst": [5, 7], "nodesocketcollect": 5, "nodesockettextur": 5, "nodesocketmateri": 5, "support": [5, 9, 25, 29, 30], "material_select": 5, "implicitli": [5, 6], "everi": [5, 6], "nodesocketimag": 5, "constant": [5, 6, 7, 27], "separate_children": [5, 7], "reset_children": [5, 7], "width": [5, 6, 7, 19], "has_alpha": [5, 7], "frame_count": [5, 7], "fp": [5, 7], "is_viewport": [5, 7], "self_object": [5, 7], "data_typ": [5, 6, 7], "value_003": [5, 7], "value_004": [5, 7], "float_vector": [5, 6, 7], "float_color": [5, 6, 7], "offset_frequ": [5, 7], "squash": [5, 7], "squash_frequ": [5, 7], "texture_map": [5, 7], "color1": [5, 7], "color2": [5, 7], "mortar": [5, 7], "mortar_s": [5, 7], "02": [5, 7, 16, 19, 21], "mortar_smooth": [5, 7], "bia": [5, 7], "brick_width": [5, 7], "row_height": [5, 7], "25": [5, 6, 7, 26, 27], "gradient_typ": [5, 7], "quadrat": [5, 6, 7], "eas": [5, 7], "diagon": [5, 7, 22], "spheric": [5, 6, 7], "quadratic_spher": [5, 7], "radial": [5, 7, 19], "extens": [5, 7], "repeat": [5, 7], "extend": [5, 7], "clip": [5, 6, 7, 27], "closest": [5, 6, 7], "cubic": [5, 7], "color_map": [5, 7], "turbulence_depth": [5, 7], "musgrave_dimens": [5, 7], "musgrave_typ": [5, 7], "fbm": [5, 7], "w": [5, 7, 20, 21], "lacunar": [5, 7], "gain": [5, 7], "1d": [5, 7], "multifract": [5, 7], "ridged_multifract": [5, 7], "hybrid_multifract": [5, 7], "hetero_terrain": [5, 7], "noise_dimens": [5, 7], "voronoi_dimens": [5, 7], "featur": [5, 7, 30], "f1": [5, 7], "euclidean": [5, 7], "f2": [5, 7], "smooth_f1": [5, 7], "distance_to_edg": [5, 7], "n_sphere_radiu": [5, 7], "manhattan": [5, 7], "chebychev": [5, 7], "minkowski": [5, 7], "wave_typ": [5, 7], "bands_direct": [5, 7], "rings_direct": [5, 7], "wave_profil": [5, 7], "detail_scal": [5, 7], "detail_rough": [5, 7], "phase_offset": [5, 7], "saw": [5, 7], "tri": [5, 7], "a_float": [5, 7], "a_vector": [5, 7], "a_color": [5, 7], "a_int": [5, 7], "b_int": [5, 7], "a_vec3": [5, 7], "b_vec3": [5, 7], "a_col": [5, 7], "b_col": [5, 7], "a_str": [5, 7], "b_str": [5, 7], "001": [5, 6, 7, 11, 19], "averag": [5, 6, 7], "less_equ": [5, 7], "greater_equ": [5, 7], "not_equ": [5, 7], "input_typ": [5, 7], "switch_001": [5, 7], "false_001": [5, 7], "true_001": [5, 7], "false_002": [5, 7], "true_002": [5, 7], "false_003": [5, 7], "true_003": [5, 7], "false_004": [5, 7], "true_004": [5, 7], "false_005": [5, 7], "true_005": [5, 7], "false_006": [5, 7], "true_006": [5, 7], "false_007": [5, 7], "true_007": [5, 7], "false_008": [5, 7], "true_008": [5, 7], "false_009": [5, 7], "true_009": [5, 7], "false_010": [5, 7], "true_010": [5, 7], "false_011": [5, 7], "true_011": [5, 7], "output_001": [5, 7], "output_003": [5, 7], "output_004": [5, 7], "output_005": [5, 7], "output_006": [5, 6, 7], "output_007": [5, 7], "output_008": [5, 7], "output_009": [5, 7], "output_010": [5, 7], "output_011": [5, 7], "id": [5, 6, 7, 29, 30], "probabl": [5, 7, 20], "only_loc": [5, 7], "16": [5, 6, 7, 26], "ao": [5, 7], "equirectangular": [5, 7], "image_us": [5, 7], "smart": [5, 7], "mirror_bal": [5, 7], "filepath": [5, 7], "flat": [5, 6, 7], "projection_blend": [5, 7], "box": [5, 6, 7, 30], "sphere": [5, 6, 7, 8, 12, 14, 20], "tube": [5, 7], "particle_color_sourc": [5, 7], "particle_ag": [5, 7], "point_sourc": [5, 7], "particle_system": [5, 7], "vertex_color_sourc": [5, 7], "vertex_color": [5, 7], "resolut": [5, 6, 7, 17, 22, 23, 30], "vertex_attribute_nam": [5, 7], "particle_spe": [5, 7], "particle_veloc": [5, 7], "vertex_weight": [5, 7], "vertex_norm": [5, 7], "sky_typ": [5, 7], "nishita": [5, 7], "air_dens": [5, 7], "altitud": [5, 7], "dust_dens": [5, 7], "ground_albedo": [5, 7], "ozone_dens": [5, 7], "sun_direct": [5, 7], "sun_disc": [5, 7], "sun_elev": [5, 7], "15": [5, 6, 7, 17], "sun_intens": [5, 7], "sun_rot": [5, 7], "sun_siz": [5, 7], "545": [5, 7], "turbid": [5, 7], "preetham": [5, 7], "hosek_wilki": [5, 7], "midlevel": [5, 7], "convert_from": [5, 7], "convert_to": [5, 7], "1500": [5, 7], "val": [5, 7], "500": [5, 7], "shader1": [5, 27], "shader2": [5, 27], "shading_system": [5, 26], "cloud": 6, "ouput": [6, 14], "curvearc": [6, 22], "arc": [6, 22], "curvearcpoint": 6, "bezierseg": 6, "b\u00e9zier": [6, 9, 10, 29], "handl": 6, "curvecircl": [6, 12, 14, 17, 18, 19, 22, 23, 30], "circl": [6, 8, 9, 10, 11, 14, 22, 23, 30], "curvecirclepoint": 6, "curvelin": [6, 18, 19, 20], "curvespir": [6, 19], "spiral": [6, 9, 10], "shape": 6, "spring": 6, "By": [6, 30], "twist": [6, 7], "clockwis": 6, "fashion": 6, "curvequadraticbezi": 6, "parabola": 6, "rectangl": [6, 7, 16, 17, 19], "quadrilater": 6, "polygon": 6, "four": [6, 22], "parallelogram": [6, 7], "trapezoid": [6, 7], "kite": [6, 7], "quadrangl": [6, 14], "curvestar": 6, "star": 6, "pattern": [6, 22], "altern": 6, "inner": [6, 11, 27], "so": [6, 9, 23, 30], "lie": 6, "outer": [6, 11], "meshcon": [6, 13, 14], "cone": [6, 8, 13, 14], "meshcub": [6, 14, 15, 16], "cube": [6, 8, 13, 14, 30], "cuboid": 6, "variabl": 6, "side": [6, 7, 11, 14, 17, 22], "subdivis": [6, 7, 8, 12, 14, 15, 16, 20, 24], "still": [6, 30], "hollow": 6, "meshcylind": 6, "cylind": [6, 14], "meshgrid": [6, 16, 20, 22, 24], "grid": [6, 7, 22, 24], "planar": [6, 7], "xy": 6, "plane": [6, 8, 19, 22], "meshicospher": [6, 12, 14, 15, 16, 20], "icospher": 6, "consist": 6, "triangl": [6, 7, 9, 10, 22], "meshcircl": [6, 11], "circular": 6, "fill": 6, "meshlin": 6, "them": [6, 9, 30], "meshlineendpoint": 6, "meshuvspher": 6, "mostli": 6, "quad": 6, "except": [6, 19], "inputpoint": [6, 19], "radii": 6, "volumecub": 6, "scratch": 6, "voxel": 6, "rectangular": 6, "prism": 6, "merg": [6, 16], "splineparamet": 6, "far": 6, "total": [6, 7], "becaus": 6, "might": 6, "float_statistic_on_point": [6, 20], "statist": 6, "entir": 6, "median": [6, 7], "standard_devi": [6, 7], "varianc": [6, 7], "float_statistic_on_edg": 6, "float_statistic_on_fac": 6, "float_statistic_on_corn": 6, "float_statistic_on_curv": 6, "float_statistic_on_inst": 6, "integer_statistic_on_point": 6, "integer_statistic_on_edg": 6, "integer_statistic_on_fac": 6, "integer_statistic_on_corn": 6, "integer_statistic_on_curv": 6, "integer_statistic_on_inst": 6, "vector_statistic_on_point": 6, "13": [6, 7], "14": [6, 7], "vector_statistic_on_edg": 6, "vector_statistic_on_fac": 6, "vector_statistic_on_corn": 6, "vector_statistic_on_curv": 6, "vector_statistic_on_inst": 6, "domain_s": [6, 18], "pointcloud": [6, 7], "point_count": [6, 7, 18], "edge_count": [6, 7], "face_count": [6, 7], "face_corner_count": [6, 7], "spline_count": [6, 7], "instance_count": [6, 7], "blur_float_attribut": 6, "value_float": [6, 7], "iter": [6, 7, 14, 18], "blur": 6, "neighbor": 6, "blur_integer_attribut": 6, "value_int": [6, 7], "blur_vector_attribut": 6, "value_vector": [6, 7], "blur_color_attribut": 6, "value_color": [6, 7], "true_geometri": 6, "capture_vector_on_point": [6, 15], "captur": [6, 13], "capture_vector_on_edg": 6, "capture_vector_on_fac": [6, 13], "capture_vector_on_corn": 6, "capture_vector_on_curv": 6, "capture_vector_on_inst": 6, "capture_float_on_point": 6, "capture_float_on_edg": 6, "capture_float_on_fac": [6, 13], "capture_float_on_corn": 6, "capture_float_on_curv": 6, "capture_float_on_inst": 6, "capture_color_on_point": 6, "capture_color_on_edg": 6, "capture_color_on_fac": 6, "capture_color_on_corn": 6, "capture_color_on_curv": 6, "capture_color_on_inst": 6, "capture_boolean_on_point": 6, "value_bool": [6, 7], "capture_boolean_on_edg": 6, "capture_boolean_on_fac": 6, "capture_boolean_on_corn": 6, "capture_boolean_on_curv": 6, "capture_boolean_on_inst": 6, "capture_integer_on_point": 6, "capture_integer_on_edg": 6, "capture_integer_on_fac": 6, "capture_integer_on_corn": 6, "capture_integer_on_curv": 6, "capture_integer_on_inst": 6, "remove_attribut": 6, "remov": 6, "delet": [6, 18], "certain": 6, "exist": [6, 7], "propag": 6, "expens": 6, "optim": 6, "even": 6, "lower": 6, "memori": 6, "_store_named_attribut": 6, "store_named_attribut": [6, 23, 30], "alreadi": 6, "keep": 6, "mind": 6, "cannot": [6, 25, 30], "byte_color": [6, 7], "float2": [6, 7], "stabl": 6, "identifi": 6, "named_attribute_vector": 6, "attribute_vector": [6, 7], "named_attribute_float": 6, "attribute_float": [6, 7], "named_attribute_color": 6, "attribute_color": [6, 7], "named_attribute_boolean": 6, "attribute_bool": [6, 7], "named_attribute_integ": 6, "attribute_int": [6, 7], "thing": 6, "displai": 6, "set_id": 6, "yet": 6, "write": [6, 30], "set_posit": [6, 15, 18, 20, 21, 22, 23, 24, 30], "proxim": 6, "target_el": [6, 7], "source_posit": [6, 7], "raycast_vector": 6, "ray_direct": [6, 7], "raycast": 6, "intersect": [6, 7], "hit": 6, "is_hit": [6, 7], "hit_posit": [6, 7], "hit_norm": [6, 7], "hit_dist": [6, 7], "raycast_float": 6, "attribute_001": [6, 7], "raycast_color": 6, "attribute_002": [6, 7], "raycast_boolean": 6, "attribute_003": [6, 7], "raycast_integ": 6, "attribute_004": [6, 7], "sample_index": 6, "sample_float_at_index": 6, "sample_integer_at_index": 6, "sample_vector_at_index": [6, 15, 18, 20], "sample_color_at_index": 6, "sample_boolean_at_index": 6, "sample_nearest": [6, 15], "sample_posit": [6, 7], "instead": [6, 30], "bound_box": 6, "bound": 6, "encapsul": 6, "bounding_box": [6, 7], "convex_hul": [6, 7], "convex": 6, "hull": 6, "enclos": 6, "behav": 6, "similarli": 6, "tool": 6, "edit": 6, "edge_fac": [6, 7], "only_fac": [6, 7], "delete_point": 6, "delete_edg": 6, "delete_fac": 6, "delete_curv": 6, "delete_inst": 6, "duplicate_el": 6, "duplic": 6, "new": [6, 7, 15, 19], "exact": 6, "duplicate_index": [6, 7], "merge_by_dist": [6, 16, 17, 23, 30], "within": [6, 22], "surround": 6, "weld": 6, "per": 6, "separate_compon": 6, "point_cloud": [6, 7], "separate_edg": 6, "separate_fac": [6, 20], "separate_curv": 6, "separate_inst": 6, "select_point": 6, "select_edg": 6, "select_fac": 6, "select_curv": 6, "select_inst": 6, "join_to_inst": 6, "visual": [6, 22], "isn": 6, "actual": [6, 23, 30], "on_point": [6, 12, 13, 14, 19, 20, 22], "pick_inst": [6, 7], "instance_index": [6, 7], "refer": [6, 9, 29], "present": 6, "fast": 6, "mani": 6, "underli": 6, "replace_materi": 6, "old": [6, 7, 15], "swap": 6, "effici": 6, "set_materi": [6, 11, 19, 23, 30], "reus": 6, "set_material_index": 6, "accumulate_float_on_point": 6, "group_index": [6, 7], "accumul": 6, "count": [6, 7, 19, 20], "run": [6, 29], "essenti": 6, "leading_float": [6, 7], "trailing_float": [6, 7], "total_float": [6, 7], "accumulate_float_on_edg": 6, "accumulate_float_on_fac": 6, "accumulate_float_on_corn": 6, "accumulate_float_on_curv": 6, "accumulate_float_on_inst": 6, "accumulate_integer_on_point": 6, "leading_integ": 6, "trailing_integ": 6, "total_integ": 6, "accumulate_integer_on_edg": 6, "accumulate_integer_on_fac": 6, "accumulate_integer_on_corn": 6, "accumulate_integer_on_curv": 6, "accumulate_integer_on_inst": 6, "accumulate_vector_on_point": 6, "leading_vector": [6, 7], "trailing_vector": [6, 7], "total_vector": [6, 7], "accumulate_vector_on_edg": 6, "accumulate_vector_on_fac": 6, "accumulate_vector_on_corn": 6, "accumulate_vector_on_curv": 6, "accumulate_vector_on_inst": 6, "evaluate_float_at_index_on_point": 6, "main": 6, "requir": 6, "evaluate_float_at_index_on_edg": 6, "evaluate_float_at_index_on_fac": 6, "evaluate_float_at_index_on_corn": 6, "evaluate_float_at_index_on_curv": 6, "evaluate_float_at_index_on_inst": 6, "evaluate_integer_at_index_on_point": 6, "evaluate_integer_at_index_on_edg": 6, "evaluate_integer_at_index_on_fac": 6, "evaluate_integer_at_index_on_corn": 6, "evaluate_integer_at_index_on_curv": 6, "evaluate_integer_at_index_on_inst": 6, "evaluate_vector_at_index_on_point": 6, "evaluate_vector_at_index_on_edg": 6, "evaluate_vector_at_index_on_fac": 6, "evaluate_vector_at_index_on_corn": 6, "evaluate_vector_at_index_on_curv": 6, "evaluate_vector_at_index_on_inst": 6, "evaluate_color_at_index_on_point": 6, "evaluate_color_at_index_on_edg": 6, "evaluate_color_at_index_on_fac": 6, "evaluate_color_at_index_on_corn": 6, "evaluate_color_at_index_on_curv": 6, "evaluate_color_at_index_on_inst": 6, "evaluate_boolean_at_index_on_point": 6, "evaluate_boolean_at_index_on_edg": 6, "evaluate_boolean_at_index_on_fac": 6, "evaluate_boolean_at_index_on_corn": 6, "evaluate_boolean_at_index_on_curv": 6, "evaluate_boolean_at_index_on_inst": 6, "evaluate_float_on_point": 6, "evaluate_float_on_edg": 6, "evaluate_float_on_fac": 6, "evaluate_float_on_corn": 6, "evaluate_float_on_curv": 6, "evaluate_float_on_inst": 6, "evaluate_integer_on_point": 6, "evaluate_integer_on_edg": 6, "evaluate_integer_on_fac": 6, "evaluate_integer_on_corn": 6, "evaluate_integer_on_curv": 6, "evaluate_integer_on_inst": 6, "evaluate_vector_on_point": 6, "evaluate_vector_on_edg": 6, "evaluate_vector_on_fac": 6, "evaluate_vector_on_corn": 6, "evaluate_vector_on_curv": 6, "evaluate_vector_on_inst": 6, "evaluate_color_on_point": 6, "evaluate_color_on_edg": 6, "evaluate_color_on_fac": 6, "evaluate_color_on_corn": 6, "evaluate_color_on_curv": 6, "evaluate_color_on_inst": 6, "evaluate_boolean_on_point": 6, "evaluate_boolean_on_edg": 6, "evaluate_boolean_on_fac": 6, "evaluate_boolean_on_corn": 6, "evaluate_boolean_on_curv": 6, "evaluate_boolean_on_inst": 6, "realize_inst": [6, 19, 21], "legacy_behavior": [6, 7], "realiz": 6, "wherea": 6, "becom": 6, "wors": 6, "fundament": 6, "limit": [6, 30], "index_of_nearest": 6, "group_id": [6, 7], "close": 6, "analyz": 6, "has_neighbor": [6, 7], "handle_posit": 6, "curve_length": 6, "ad": 6, "spline_length": 6, "revers": [6, 7, 12, 18], "tilt": [6, 7, 17], "nurb": [6, 7], "endpoint_select": 6, "start_siz": [6, 7], "end_siz": [6, 7], "endpoint": [6, 23, 30], "handle_type_select": 6, "free": [6, 7, 9], "is_cycl": 6, "cyclic": [6, 7], "form": [6, 22], "Its": 6, "sample_curv": 6, "use_all_curv": [6, 7], "curve_index": [6, 7], "calcul": [6, 11, 14], "linearli": 6, "sample_float": 6, "sample_integ": 6, "sample_vector": 6, "sample_color": 6, "sample_boolean": 6, "set_norm": 6, "minimum_twist": [6, 7], "z_up": [6, 7], "set_radiu": [6, 18], "005": [6, 7, 26], "profil": [6, 12, 17, 23, 30], "set_tilt": [6, 17], "That": 6, "set_handle_posit": 6, "alter": 6, "set_handle_typ": 6, "set_cycl": [6, 18], "loop": [6, 27], "back": 6, "But": [6, 29, 30], "made": 6, "last": [6, 18], "set_resolut": 6, "resampl": [6, 18, 20], "set_spline_typ": [6, 19], "spline_typ": [6, 7], "catmull_rom": [6, 7, 19], "bezier": [6, 7], "set_spline_type_poli": 6, "set_spline_type_catmull_rom": 6, "set_spline_type_bezi": 6, "set_spline_type_nurb": 6, "to_mesh": [6, 12, 14, 16, 17, 19, 21, 23, 30], "fill_cap": [6, 7], "to_point": [6, 12, 13, 14, 18], "deform_on_surfac": 6, "deform": 6, "purpos": 6, "fill_curv": [6, 22], "constrain": 6, "delaunai": 6, "algorithm": 6, "boundari": 6, "ngon": [6, 7, 11], "filled_mesh": [6, 19], "filled_ngon": [6, 14, 19], "fillet_curv": 6, "limit_radiu": [6, 7], "fillet": [6, 16], "portion": 6, "fillet_bezi": [6, 16], "fillet_poli": 6, "interpolate_curv": 6, "guide_up": [6, 7], "guide_group_id": [6, 7], "point_up": [6, 7], "point_group_id": [6, 7], "max_neighbor": [6, 7], "have": [6, 29, 30], "easier": 6, "faster": 6, "while": [6, 29], "high": [6, 26], "closest_index": [6, 7], "closest_weight": [6, 7], "resample_length": [6, 21], "resample_evalu": 6, "subdivid": [6, 9, 10], "cut": [6, 7], "trim_factor": [6, 16, 17, 19, 20, 23, 30], "trim": [6, 19, 23, 30], "shorten": 6, "section": 6, "trim_length": [6, 12], "curve_of_point": 6, "point_index": [6, 7], "conceptu": 6, "index_in_curv": [6, 7], "offset_point_in_curv": 6, "walk": 6, "toward": 6, "is_valid_offset": [6, 7], "points_of_curv": 6, "sort_index": [6, 7], "edge_angl": 6, "meet": 6, "unsigned_angl": [6, 7], "signed_angl": [6, 7], "edge_neighbor": 6, "relat": [6, 18], "edge_vertic": 6, "vertex_index_1": [6, 7], "vertex_index_2": [6, 7], "position_1": [6, 7], "position_2": [6, 7], "edges_to_face_group": 6, "boundary_edg": [6, 7], "region": 6, "face_group_id": [6, 7], "face_area": [6, 13], "area": [6, 7, 13], "matter": 6, "system": 6, "meter": 6, "face_neighbor": 6, "vertex_count": [6, 7], "faceset_boundari": 6, "face_set": [6, 7], "mark": [6, 25], "seam": [6, 7], "unwrap": 6, "face_is_planar": 6, "n": [6, 9, 10, 14, 22, 23, 24, 29, 30], "gon": [6, 18], "word": 6, "is_shade_smooth": 6, "mesh_island": 6, "island": 6, "whenev": 6, "island_index": [6, 7], "island_count": [6, 7], "shortest_edge_path": [6, 16], "end_vertex": [6, 7, 16], "edge_cost": [6, 7], "shortest": 6, "cost": 6, "anyth": 6, "next_vertex_index": [6, 7, 16], "total_cost": [6, 7], "vertex_neighbor": 6, "nearest_surfac": 6, "across": [6, 9], "nearest_surface_float": 6, "nearest_surface_integ": 6, "nearest_surface_vector": 6, "nearest_surface_color": 6, "nearest_surface_boolean": 6, "sample_uv_surface_float": 6, "source_uv_map": [6, 7], "sample_uv": [6, 7], "lookup": 6, "is_valid": [6, 7], "sample_uv_surface_integ": 6, "sample_uv_surface_vector": 6, "sample_uv_surface_color": 6, "sample_uv_surface_boolean": 6, "set_shade_smooth": [6, 12, 15, 16, 17, 23, 24, 30], "shade_smooth": [6, 7, 15, 16], "dual_mesh": [6, 7], "keep_boundari": [6, 7], "dual": 6, "transfer": 6, "edge_paths_to_curv": [6, 16], "start_vertic": [6, 7], "follow": [6, 16, 27], "edge_paths_to_select": 6, "visit": 6, "extrud": [6, 11, 14, 17], "offset_scal": [6, 7, 11], "extrude_fac": 6, "extrude_vertic": 6, "extrude_edg": [6, 11], "flip_fac": 6, "flip": 6, "common": [3, 6, 22], "mesh_union": 6, "self_intersect": [6, 7], "hole_toler": [6, 7], "offer": 6, "intersecting_edg": [6, 7], "mesh_intersect": 6, "mesh_differ": 6, "break": [6, 23, 30], "continu": [6, 18], "desir": 6, "import": [6, 9, 11, 14, 15, 17, 18, 19, 22, 23, 24, 26, 28, 30], "to_volum": [6, 20, 21], "resolution_mod": [6, 7], "voxel_amount": [6, 7], "voxel_s": [6, 7, 21], "64": [6, 7, 17, 19], "exterior_band_width": [6, 7], "interior_band_width": [6, 7], "fill_volum": [6, 7], "scale_el": [6, 14, 17], "scale_mod": [6, 7], "share": 6, "case": [6, 30], "single_axi": [6, 7], "split_edg": [6, 20], "those": 6, "subdivide_mesh": [6, 20], "subdivision_surfac": [6, 13, 15], "uv_smooth": [6, 7], "preserve_boundari": [6, 7], "boundary_smooth": [6, 7], "edge_creas": [6, 7], "vertex_creas": [6, 7], "catmul": 6, "clark": 6, "preserve_corn": [6, 7], "preserve_corners_and_junct": [6, 7], "preserve_corners_junctions_and_concav": [6, 7], "smooth_al": [6, 7], "ngon_method": [6, 7], "beauti": [6, 7], "quad_method": [6, 7], "shortest_diagon": [6, 7], "minimum_vertic": [6, 7], "triangular": 6, "fix": [6, 7], "fixed_altern": [6, 7], "longest_diagon": [6, 7], "corners_of_fac": 6, "face_index": [6, 7], "corner_index": [6, 7], "corners_of_vertex": 6, "vertex_index": [6, 7], "gather": 6, "sort": 6, "edges_of_corn": 6, "next_edge_index": [6, 7], "previous_edge_index": [6, 7], "edges_of_vertex": 6, "sever": 6, "edge_index": [6, 7], "face_of_corn": 6, "index_in_fac": [6, 7], "offset_corner_in_fac": 6, "vertex_of_corn": 6, "pack_uv_island": 6, "margin": [6, 7], "uv_unwrap": 6, "angle_bas": [6, 7], "fill_hol": [6, 7], "upon": 6, "conform": [6, 7], "distribute_points_on_fac": [6, 20], "distribute_method": [6, 7], "use_legacy_norm": [6, 7], "distance_min": [6, 7], "density_max": [6, 7], "density_factor": [6, 7], "addition": 6, "poisson": [6, 7], "to_vertic": 6, "rotate_inst": 6, "local_spac": [6, 7], "global": [6, 18], "scale_inst": [6, 20], "translate_inst": 6, "distribute_points_random": 6, "distribute_points_grid": [6, 20], "adapt": [6, 7], "start_angl": [6, 7], "sweep_angl": [6, 7, 22], "315": [6, 7], "connect_cent": [6, 7], "invert_arc": [6, 7], "offset_angl": [6, 7], "start_handl": [6, 7], "end_handl": [6, 7], "32": [6, 7, 18, 27], "point_1": [6, 7], "point_2": [6, 7], "point_3": [6, 7], "start_radiu": [6, 7], "end_radiu": [6, 7], "bottom_width": [6, 7], "top_width": [6, 7], "bottom_height": [6, 7], "top_height": [6, 7], "point_4": [6, 7], "inner_radiu": [6, 7], "outer_radiu": [6, 7], "outer_point": [6, 7], "fill_typ": [6, 7, 11], "side_seg": [6, 7], "fill_seg": [6, 7], "radius_top": [6, 7], "radius_bottom": [6, 7], "depth": [6, 7, 14], "triangle_fan": [6, 7], "vertices_x": [6, 7], "vertices_i": [6, 7], "vertices_z": [6, 7], "size_x": [6, 7], "size_i": [6, 7], "start_loc": [6, 7], "end_loc": 6, "count_mod": [6, 7], "resolution_x": [6, 7], "resolution_i": [6, 7], "resolution_z": [6, 7], "geometrynodeattributestatist": 7, "geometrynodeattributedomains": 7, "geometrynodeblurattribut": 7, "geometrynodecaptureattribut": 7, "geometrynoderemoveattribut": 7, "geometrynodestorenamedattribut": 7, "functionnodeinputbool": 7, "functionnodeinputcolor": 7, "geometrynodeinputimag": 7, "functionnodeinputint": 7, "geometrynodeinputmateri": 7, "functionnodeinputstr": 7, "shadernodevalu": 7, "functionnodeinputvector": 7, "geometrynodecollectioninfo": 7, "geometrynodeimageinfo": 7, "geometrynodeisviewport": 7, "geometrynodeobjectinfo": 7, "geometrynodeselfobject": 7, "geometrynodeinputid": 7, "geometrynodeinputindex": 7, "geometrynodeinputnamedattribut": 7, "geometrynodeinputnorm": 7, "geometrynodeinputposit": 7, "geometrynodeinputradiu": 7, "geometrynodesetid": 7, "geometrynodesetposit": 7, "geometrynodeproxim": 7, "geometrynoderaycast": 7, "geometrynodesampleindex": 7, "geometrynodesamplenearest": 7, "geometrynodeboundbox": 7, "geometrynodeconvexhul": 7, "geometrynodedeletegeometri": 7, "geometrynodeduplicateel": 7, "geometrynodemergebydist": 7, "geometrynodetransform": 7, "geometrynodeseparatecompon": 7, "geometrynodeseparategeometri": 7, "geometrynodejoingeometri": 7, "geometrynodegeometrytoinst": 7, "geometrynodeinputcurvehandleposit": 7, "geometrynodecurvelength": 7, "geometrynodeinputtang": 7, "geometrynodeinputcurvetilt": 7, "geometrynodecurveendpointselect": 7, "geometrynodecurvehandletypeselect": 7, "geometrynodeinputsplinecycl": 7, "geometrynodesplinelength": 7, "geometrynodesplineparamet": 7, "geometrynodeinputsplineresolut": 7, "geometrynodesamplecurv": 7, "geometrynodesetcurvenorm": 7, "geometrynodesetcurveradiu": 7, "geometrynodesetcurvetilt": 7, "geometrynodesetcurvehandleposit": 7, "geometrynodecurvesethandl": 7, "geometrynodesetsplinecycl": 7, "geometrynodesetsplineresolut": 7, "geometrynodecurvesplinetyp": 7, "geometrynodecurvetomesh": 7, "profile_curv": 7, "geometrynodecurvetopoint": 7, "geometrynodedeformcurvesonsurfac": 7, "geometrynodefillcurv": 7, "geometrynodefilletcurv": 7, "geometrynodeinterpolatecurv": 7, "guide_curv": 7, "geometrynoderesamplecurv": 7, "geometrynodereversecurv": 7, "geometrynodesubdividecurv": 7, "geometrynodetrimcurv": 7, "geometrynodecurvearc": 7, "geometrynodecurveprimitivebezierseg": 7, "geometrynodecurveprimitivecircl": 7, "geometrynodecurveprimitivelin": 7, "geometrynodecurvespir": 7, "geometrynodecurvequadraticbezi": 7, "geometrynodecurveprimitivequadrilater": 7, "geometrynodecurvestar": 7, "geometrynodecurveofpoint": 7, "geometrynodeoffsetpointincurv": 7, "geometrynodepointsofcurv": 7, "geometrynodeinstanceonpoint": 7, "geometrynodeinstancestopoint": 7, "geometrynoderotateinst": 7, "geometrynodescaleinst": 7, "geometrynodetranslateinst": 7, "geometrynoderealizeinst": 7, "geometrynodeinputinstancerot": 7, "geometrynodeinputinstancescal": 7, "geometrynodeinputmeshedgeangl": 7, "geometrynodeinputmeshedgeneighbor": 7, "geometrynodeinputmeshedgevertic": 7, "geometrynodeedgestofacegroup": 7, "geometrynodeinputmeshfacearea": 7, "geometrynodeinputmeshfaceneighbor": 7, "geometrynodemeshfacesetboundari": 7, "geometrynodeinputmeshfaceisplanar": 7, "geometrynodeinputshadesmooth": 7, "geometrynodeinputmeshisland": 7, "geometrynodeinputshortestedgepath": 7, "geometrynodeinputmeshvertexneighbor": 7, "geometrynodesamplenearestsurfac": 7, "geometrynodesampleuvsurfac": 7, "geometrynodesetshadesmooth": 7, "geometrynodedualmesh": 7, "geometrynodeedgepathstocurv": 7, "geometrynodeedgepathstoselect": 7, "geometrynodeextrudemesh": 7, "geometrynodeflipfac": 7, "geometrynodemeshboolean": 7, "union": 7, "geometrynodemeshtocurv": 7, "geometrynodemeshtopoint": 7, "geometrynodemeshtovolum": 7, "geometrynodescaleel": 7, "geometrynodesplitedg": 7, "geometrynodesubdividemesh": 7, "geometrynodesubdivisionsurfac": 7, "geometrynodetriangul": 7, "geometrynodemeshcon": 7, "geometrynodemeshcub": 7, "geometrynodemeshcylind": 7, "geometrynodemeshgrid": 7, "geometrynodemeshicospher": 7, "geometrynodemeshcircl": 7, "geometrynodemeshlin": 7, "end_point": 7, "geometrynodemeshuvspher": 7, "geometrynodecornersoffac": 7, "geometrynodecornersofvertex": 7, "geometrynodeedgesofcorn": 7, "geometrynodeedgesofvertex": 7, "geometrynodefaceofcorn": 7, "geometrynodeoffsetcornerinfac": 7, "geometrynodevertexofcorn": 7, "geometrynodeuvpackisland": 7, "geometrynodeuvunwrap": 7, "geometrynodedistributepointsinvolum": 7, "density_random": 7, "density_grid": 7, "geometrynodedistributepointsonfac": 7, "geometrynodepoint": 7, "geometrynodepointstovertic": 7, "geometrynodepointstovolum": 7, "geometrynodesetpointradiu": 7, "geometrynodevolumecub": 7, "geometrynodevolumetomesh": 7, "geometrynodereplacemateri": 7, "geometrynodeinputmaterialindex": 7, "geometrynodematerialselect": 7, "geometrynodesetmateri": 7, "geometrynodesetmaterialindex": 7, "shadernodetexbrick": 7, "shadernodetexcheck": 7, "shadernodetexgradi": 7, "geometrynodeimagetextur": 7, "shadernodetexmag": 7, "shadernodetexmusgrav": 7, "shadernodetexnois": 7, "shadernodetexvoronoi": 7, "shadernodetexwav": 7, "shadernodetexwhitenois": 7, "shadernodevaltorgb": 7, "functionnodecombinecolor": 7, "shadernodemix": 7, "non_uniform": 7, "functionnodeseparatecolor": 7, "geometrynodestringjoin": 7, "functionnodereplacestr": 7, "functionnodeslicestr": 7, "functionnodeinputspecialcharact": 7, "functionnodestringlength": 7, "geometrynodestringtocurv": 7, "functionnodevaluetostr": 7, "shadernodecombinexyz": 7, "shadernodeseparatexyz": 7, "shadernodevectorcurv": 7, "shadernodevectormath": 7, "shadernodevectorrot": 7, "geometrynodeaccumulatefield": 7, "geometrynodefieldatindex": 7, "geometrynodefieldondomain": 7, "functionnodebooleanmath": 7, "shadernodeclamp": 7, "functionnodecompar": 7, "shadernodefloatcurv": 7, "functionnodefloattoint": 7, "shadernodemaprang": 7, "shadernodemath": 7, "functionnodealigneulertovector": 7, "functionnoderotateeul": 7, "functionnoderandomvalu": 7, "geometrynodeswitch": 7, "shadernodeambientocclus": 7, "shadernodeattribut": 7, "shadernodebevel": 7, "shadernodecameradata": 7, "shadernodefresnel": 7, "shadernodenewgeometri": 7, "shadernodehairinfo": 7, "shadernodelayerweight": 7, "shadernodelightpath": 7, "shadernodeobjectinfo": 7, "shadernodeparticleinfo": 7, "shadernodepointinfo": 7, "shadernodergb": 7, "shadernodetang": 7, "direction_typ": 7, "shadernodetexcoord": 7, "shadernodeuvmap": 7, "shadernodevertexcolor": 7, "shadernodevolumeinfo": 7, "shadernodewirefram": 7, "shadernodeoutputaov": 7, "shadernodeoutputmateri": 7, "shadernodeoutputlight": 7, "shadernodeoutputworld": 7, "shadernodeaddshad": 7, "shadernodebsdfanisotrop": 7, "shadernodebackground": 7, "shadernodebsdfdiffus": 7, "shadernodeemiss": 7, "shadernodebsdfglass": 7, "shadernodebsdfglossi": 7, "shadernodebsdfhair": 7, "shadernodeholdout": 7, "shadernodemixshad": 7, "shadernodebsdfprincipl": 7, "shadernodebsdfhairprincipl": 7, "shadernodevolumeprincipl": 7, "shadernodebsdfrefract": 7, "shadernodeeeveespecular": 7, "shadernodesubsurfacescatt": 7, "shadernodebsdftoon": 7, "shadernodebsdftransluc": 7, "shadernodebsdftranspar": 7, "shadernodebsdfvelvet": 7, "shadernodevolumeabsorpt": 7, "shadernodevolumescatt": 7, "shadernodetexenviron": 7, "shadernodetexi": 7, "shadernodeteximag": 7, "shadernodetexpointdens": 7, "shadernodetexski": 7, "shadernodegamma": 7, "shadernodehuesatur": 7, "shadernodeinvert": 7, "shadernodelightfalloff": 7, "shadernodeshadertorgb": 7, "geometrynodeinputscenetim": 7, "geometrynodeindexofnearest": 7, "mean_001": 7, "median_001": 7, "sum_001": 7, "min_001": 7, "max_001": 7, "range_001": 7, "standard_deviation_001": 7, "variance_001": 7, "target_geometri": 7, "start_001": 7, "end_001": 7, "mesh_1": 7, "mesh_2": 7, "color_ramp": [5, 7], "leading_int": 7, "trailing_int": 7, "total_int": 7, "from_min_float3": 7, "from_max_float3": 7, "to_min_float3": 7, "to_max_float3": 7, "steps_float3": 7, "min_002": 7, "max_002": 7, "17": 7, "18": 7, "19": 7, "21": 7, "22": 7, "23": 7, "24": 7, "attribute_nam": 7, "is_active_output": 7, "objtyp": 8, "o": [8, 26, 30], "mod": [8, 30], "enum": 8, "__matmul__": 8, "op": 8, "primitive_plane_add": 8, "primitive_cube_add": 8, "ico_spher": 8, "primitive_ico_sphere_add": 8, "monkei": 8, "primitive_monkey_add": 8, "nurbs_path": 8, "bezier_curv": [8, 18], "primitive_bezier_curve_add": 8, "empty_spher": 8, "empty_add": 8, "geometry_nod": [8, 30], "subsurf": 8, "slot": 8, "__o": 8, "bool": 8, "__hash__": 8, "dict": 8, "load": [8, 9, 19, 25, 28, 30], "clear_anim": 8, "parse_modifi": 8, "k": [8, 11], "v": [8, 27, 29], "obj": 8, "parse_mat_slot": 8, "material_nam": 8, "deriv": [11, 29], "geonod": [11, 29], "l": [11, 14, 24, 30], "head": 11, "\u03b1": 11, "89": 11, "999": 11, "recess": 11, "99": 11, "rh": 11, "tg": 11, "hh": 11, "z0": 11, "h": [11, 24], "d": [11, 24], "z1": 11, "z2": 11, "f": [11, 14, 18, 20, 26], "pi": [11, 14, 19, 22, 23, 30], "corrected_po": 11, "shaft": 11, "loc": 11, "rot_track": 11, "arrow_head": 11, "3ac463": 11, "arrow_shaft": 11, "2c6397": 11, "trim_radiu": 12, "comment": [12, 30], "sweep": [12, 23, 30], "function": [9, 12, 18, 23, 25, 29, 30], "subdivision_level": 13, "norm": 13, "iterate_sierpinski": 14, "sierp": 14, "sierpinski_fract": 14, "iterate_meng": 14, "menger_init_point": 14, "menger_spong": 14, "v3": 14, "inscribed_circl": 14, "v1": 14, "v2": 14, "inscrib": 14, "perimet": 14, "2r": 14, "renam": 14, "ok": 14, "iterate_pythagora": 14, "v4": 14, "v5": 14, "rect": 14, "sphere_transform": 14, "iterate_n": 14, "append": [14, 18, 19, 27], "mesh_transit": 15, "mesh1": [15, 20], "mesh2": [15, 20], "old_po": 15, "new_po": 15, "mesh_transition_test": 15, "choos": 16, "test": 16, "Or": 16, "next": 16, "path": [16, 26, 30], "At": [17, 30], "namespac": 17, "extrude_amount": 17, "tau": [17, 19, 24], "sweeped_mesh": 17, "extruded_mesh": 17, "graphic": [18, 22], "discret": 18, "polynomi": 18, "minu": 18, "intermedi": 18, "lerp": 18, "halfwai": 18, "sample_points_posit": 18, "p": [18, 20, 23, 30], "points_to_curv": 18, "lerp_1": 18, "p0": 18, "p1": 18, "33": [18, 19], "lerp_2": 18, "p2": 18, "m0": 18, "m1": 18, "lerp_3": 18, "p3": 18, "lerp_4": 18, "p4": 18, "points_lerp": 18, "change_points_posit": 18, "points_posit": 18, "enumer": [18, 29], "bezier_curve_illustr": 18, "points_lerped_list": 18, "_": 18, "lerp_": 18, "band_width": 19, "clone": [9, 10, 19, 20, 29], "cerulean": 19, "50": [19, 27], "08": 19, "53": 19, "ceris": 19, "roman": 19, "bold": 19, "timesbd": 19, "ttf": 19, "check_exist": [19, 28], "get_posit": 19, "\u03b8": [19, 24], "po": [19, 23, 24, 26, 30], "string_r": 19, "string_\u03b8": 19, "length_r": 19, "length_\u03b8": 19, "text1": 19, "text2": 19, "text3": 19, "dot1": 19, "dot2": 19, "0070a8": 19, "blend_method": [19, 27], "ce009": 19, "158c00": 19, "link_vertic": 20, "trim_end": 20, "new_se": 20, "text_volume_mesh": 21, "expand": 21, "vol": 21, "04": 21, "\u03c9": 24, "2000": 24, "selection1": 24, "20000": 24, "selection2": 24, "200": 24, "phase": 24, "sel1": 24, "sel2": 24, "practic": 9, "code": [9, 29], "snippet": 9, "video": 9, "illustr": [9, 10, 29], "librari": 9, "under": [9, 30], "mit": 9, "licens": 9, "feel": 9, "copi": [9, 27], "past": 9, "enjoi": 9, "tast": 9, "full": 9, "api": [9, 29], "arrow": [9, 10, 29], "atom": [9, 10, 29], "sierpinski": [9, 10], "menger": [9, 10], "spong": [9, 10], "pythagora": [9, 10], "transit": [9, 10, 29], "maze": [9, 10, 29], "m\u00f6biu": [9, 10, 29], "th": [9, 10, 29], "theori": [9, 10], "implement": [9, 10, 29], "polar": [9, 10, 29], "concentr": [9, 10], "coord": [9, 10], "small": [9, 10, 29], "demo": [9, 10, 29], "fly": [9, 10], "dust": [9, 10], "recurs": [9, 10], "toru": [9, 10, 29], "knot": [9, 10, 29], "torus_knot_coord": [23, 30], "\u03c6": [23, 30], "q": [23, 30], "treat": [23, 30], "torus_knot_curv": [23, 30], "smoother": [23, 30], "128": [23, 30], "obtain": [23, 30], "deal": [23, 30], "problem": [23, 30], "scope": [23, 30], "statement": [23, 30], "embed": [23, 25, 30], "begin": [23, 30], "later": [23, 30], "torus_knot_mesh": [23, 30], "256": [23, 30], "torus_knot": [23, 30], "117f0f": [23, 30], "python": [27, 29, 30], "sciprt": 29, "although": 29, "almost": 29, "seri": 29, "decror": 29, "port": [29, 30], "flow": 29, "strict": [29, 30], "check": [29, 30], "what": 29, "expos": 29, "involv": 29, "offici": 29, "quick": 29, "instal": 29, "vscode": [27, 29], "galleri": 29, "submodul": [29, 30], "packag": 29, "enabl": [9, 25, 26, 30], "Then": [27, 30], "modul": [26, 30, 31], "sidebar": 30, "recommand": 30, "tutori": 30, "cg": 30, "mac": 30, "linux": 30, "wind": 30, "interior": 30, "symmetri": 30, "prime": 30, "we": 30, "phi": 30, "underscor": 30, "camel": 30, "__docstring__": 30, "hint": 30, "signatur": 30, "omit": 30, "program": [28, 30], "dispens": 30, "do": 30, "reli": 30, "valid": 30, "subclass": 30, "after": 30, "realli": 30, "bodi": 30, "beginn": 30, "confus": 30, "know": 30, "steal": 30, "beam": 30, "pillar": 30, "rotten": 30, "timber": 30, "perpetr": 30, "fraud": 30, "creation": 30, "advantag": 30, "let": 30, "Not": 30, "insensit": 30, "besid": 30, "node_group": 30, "230": 30, "keyfram": 30, "construct": 30, "moment": 30, "sub": 31, "http": [], "en": [], "org": [], "wiki": [], "truchet_til": 22, "rotation": 22, "symmetr": 22, "vari": 22, "associ": 22, "create_til": 22, "51": [22, 26], "arc2": 22, "angle_offset": 22, "tile": [9, 10, 29], "patern": [9, 10, 29], "truchet": [9, 10], "studi": 22, "smith": 22, "1987": 22, "quarter": 22, "adjac": 22, "start_color": 5, "end_color": 5, "respect": 25, "manag": [26, 27], "view_set": [26, 27], "view_transform": [26, 27], "standard": [26, 27], "config": 27, "json": 27, "hole_i": 27, "85": 27, "245": 27, "120": 27, "193": 27, "ramp_step": 27, "els": 27, "upper": 27, "76": 27, "58": 27, "106": 27, "48": 27, "82": 27, "146": 27, "69": 27, "114": 27, "175": 27, "84": 27, "137": 27, "199": [26, 27], "96": 27, "156": 27, "220": 27, "107": 27, "173": 27, "238": 27, "117": 27, "188": 27, "255": 27, "125": 27, "201": 27, "63": 27, "b_spline": [26, 27], "inner_faces_shad": [9, 25], "inner_faces_shader_with_hol": [9, 25], "ramped_diffuse_color": [9, 25], "grandient_color": [9, 25], "toon_gradi": [9, 25], "toon_inn": [9, 25], "formatonsav": 27, "defaultcolordecor": 27, "ol": [9, 25], "found": 26, "examl": 26, "folder": 26, "repo": 26, "load_text": 26, "getcwd": 26, "castironcov": 26, "colornam": 26, "colorrang": 26, "diamondpl": 26, "droplet": 26, "castiron": 26, "cover": 26, "06": 26, "1b7cb4": 26, "low": 26, "diamond": [], "plate": [], "color_nam": 26, "file_path": 26, "xml": 26, "simple_nois": 26, "diamond_pl": 26, "disp": 26, "063": 26, "613b35": 26, "643": 26, "316": 26, "droplet_wrapp": 26, "end_tim": 26, "spread": 26, "water_droplet": 26, "0001": 26, "droplets_wrapp": 26, "drop": 26, "foundat": 28, "datafil": 28, "studiolight": 28, "forest": 28, "exr": 28}, "objects": {"": [[1, 0, 0, "-", "pynodes"]], "pynodes": [[2, 0, 0, "-", "addon"], [1, 6, 1, "", "bl_info"], [3, 0, 0, "-", "colors"], [4, 0, 0, "-", "core"], [5, 0, 0, "-", "datasocks"], [6, 0, 0, "-", "geosocks"], [7, 0, 0, "-", "nodes"], [1, 5, 1, "", "register"], [8, 0, 0, "-", "scene"], [1, 5, 1, "", "unregister"]], "pynodes.addon": [[2, 1, 1, "", "Column"], [2, 1, 1, "", "PYNODES_OT_ARRANGE"], [2, 1, 1, "", "PYNODES_OT_PURGE"], [2, 1, 1, "", "PYNODES_PT_MAIN"], [2, 5, 1, "", "arrange"], [2, 5, 1, "", "arrange_tree"], [2, 5, 1, "", "get_active_tree"], [2, 5, 1, "", "is_frame"], [2, 5, 1, "", "is_linked_input"], [2, 5, 1, "", "is_linked_output"], [2, 5, 1, "", "match_frame_node"], [2, 5, 1, "", "register"], [2, 5, 1, "", "unregister"]], "pynodes.addon.Column": [[2, 2, 1, "", "height_with_offset"]], "pynodes.addon.PYNODES_OT_ARRANGE": [[2, 3, 1, "", "bl_idname"], [2, 3, 1, "", "bl_label"], [2, 4, 1, "", "execute"], [2, 4, 1, "", "invoke"], [2, 4, 1, "", "poll"]], "pynodes.addon.PYNODES_OT_PURGE": [[2, 3, 1, "", "bl_idname"], [2, 3, 1, "", "bl_label"], [2, 4, 1, "", "execute"]], "pynodes.addon.PYNODES_PT_MAIN": [[2, 3, 1, "", "bl_category"], [2, 3, 1, "", "bl_label"], [2, 3, 1, "", "bl_region_type"], [2, 3, 1, "", "bl_space_type"], [2, 4, 1, "", "draw"]], "pynodes.colors": [[3, 6, 1, "", "azure"], [3, 6, 1, "", "black"], [3, 6, 1, "", "blue"], [3, 6, 1, "", "color_palettes"], [3, 5, 1, "", "color_tuple"], [3, 5, 1, "", "convert_srgb_to_linear_rgb"], [3, 6, 1, "", "cyan"], [3, 6, 1, "", "dark_azure"], [3, 6, 1, "", "dark_blue"], [3, 6, 1, "", "dark_cyan"], [3, 6, 1, "", "dark_gray"], [3, 6, 1, "", "dark_green"], [3, 6, 1, "", "dark_lime"], [3, 6, 1, "", "dark_magenta"], [3, 6, 1, "", "dark_olive"], [3, 6, 1, "", "dark_orange"], [3, 6, 1, "", "dark_red"], [3, 6, 1, "", "dark_rose"], [3, 6, 1, "", "dark_violet"], [3, 6, 1, "", "dark_yellow"], [3, 6, 1, "", "gray"], [3, 6, 1, "", "green"], [3, 5, 1, "", "hex_color_to_rgb"], [3, 5, 1, "", "hex_color_to_rgba"], [3, 6, 1, "", "light_azure"], [3, 6, 1, "", "light_blue"], [3, 6, 1, "", "light_cyan"], [3, 6, 1, "", "light_gray"], [3, 6, 1, "", "light_green"], [3, 6, 1, "", "light_lime"], [3, 6, 1, "", "light_magenta"], [3, 6, 1, "", "light_olive"], [3, 6, 1, "", "light_orange"], [3, 6, 1, "", "light_red"], [3, 6, 1, "", "light_rose"], [3, 6, 1, "", "light_violet"], [3, 6, 1, "", "light_yellow"], [3, 6, 1, "", "lime"], [3, 6, 1, "", "magenta"], [3, 6, 1, "", "mid_azure"], [3, 6, 1, "", "mid_blue"], [3, 6, 1, "", "mid_cyan"], [3, 6, 1, "", "mid_green"], [3, 6, 1, "", "mid_lime"], [3, 6, 1, "", "mid_magenta"], [3, 6, 1, "", "mid_olive"], [3, 6, 1, "", "mid_orange"], [3, 6, 1, "", "mid_red"], [3, 6, 1, "", "mid_rose"], [3, 6, 1, "", "mid_violet"], [3, 6, 1, "", "mid_yellow"], [3, 6, 1, "", "olive"], [3, 6, 1, "", "orange"], [3, 6, 1, "", "red"], [3, 5, 1, "", "rgb"], [3, 5, 1, "", "rgba"], [3, 6, 1, "", "rose"], [3, 6, 1, "", "silver"], [3, 6, 1, "", "violet"], [3, 6, 1, "", "white"], [3, 6, 1, "", "yellow"]], "pynodes.core": [[4, 1, 1, "", "Frame"], [4, 1, 1, "", "Group"], [4, 1, 1, "", "NodeWraper"], [4, 6, 1, "", "Param"], [4, 6, 1, "", "RT"], [4, 1, 1, "", "Script"], [4, 1, 1, "", "SimulationInput"], [4, 1, 1, "", "SimulationOutput"], [4, 1, 1, "", "SimulationZone"], [4, 1, 1, "", "Socket"], [4, 1, 1, "", "SocketWraper"], [4, 1, 1, "", "Tree"], [4, 5, 1, "", "convert_param_name"], [4, 5, 1, "", "dispath_tree"], [4, 5, 1, "", "frame"], [4, 5, 1, "", "get_param_name"], [4, 5, 1, "", "new_link"], [4, 5, 1, "", "new_node"], [4, 5, 1, "", "reload"], [4, 5, 1, "", "simulate"], [4, 5, 1, "", "tree"], [4, 5, 1, "", "update_modifier"]], "pynodes.core.Frame": [[4, 3, 1, "", "bl_idname"]], "pynodes.core.Group": [[4, 4, 1, "", "__call__"], [4, 4, 1, "", "__getitem__"], [4, 4, 1, "", "__setitem__"]], "pynodes.core.NodeWraper": [[4, 4, 1, "", "__setitem__"], [4, 2, 1, "", "color"], [4, 2, 1, "", "inputs"], [4, 2, 1, "", "label"], [4, 2, 1, "", "outputs"], [4, 4, 1, "", "plug_inputs"]], "pynodes.core.Script": [[4, 4, 1, "", "__getitem__"], [4, 4, 1, "", "__setitem__"], [4, 3, 1, "", "bl_idname"], [4, 2, 1, "", "color"], [4, 2, 1, "", "fac"], [4, 2, 1, "", "height"], [4, 2, 1, "", "vector"]], "pynodes.core.SimulationInput": [[4, 3, 1, "", "bl_idname"], [4, 2, 1, "", "delta_time"]], "pynodes.core.SimulationOutput": [[4, 3, 1, "", "bl_idname"], [4, 4, 1, "", "link_from"]], "pynodes.core.SimulationZone": [[4, 2, 1, "", "delta_time"], [4, 4, 1, "", "to_ouput"], [4, 4, 1, "", "to_ouputs"]], "pynodes.core.Socket": [[4, 2, 1, "", "Angle"], [4, 2, 1, "", "Boolean"], [4, 2, 1, "", "Collection"], [4, 2, 1, "", "Color"], [4, 2, 1, "", "Curve"], [4, 2, 1, "", "Distance"], [4, 2, 1, "", "Factor"], [4, 2, 1, "", "Float"], [4, 2, 1, "", "FloatTime"], [4, 2, 1, "", "FloatTimeAbsolute"], [4, 2, 1, "", "Geometry"], [4, 2, 1, "", "Image"], [4, 4, 1, "", "Input"], [4, 2, 1, "", "Instances"], [4, 2, 1, "", "IntFactor"], [4, 2, 1, "", "IntPercentage"], [4, 2, 1, "", "IntUnsigned"], [4, 2, 1, "", "Integer"], [4, 2, 1, "", "Material"], [4, 2, 1, "", "Mesh"], [4, 2, 1, "", "Object"], [4, 2, 1, "", "Percentage"], [4, 2, 1, "", "Points"], [4, 2, 1, "", "Shader"], [4, 2, 1, "", "String"], [4, 2, 1, "", "Texture"], [4, 2, 1, "", "Unsigned"], [4, 2, 1, "", "Vector"], [4, 2, 1, "", "VectorAcceleration"], [4, 2, 1, "", "VectorDirection"], [4, 2, 1, "", "VectorEuler"], [4, 2, 1, "", "VectorTranslation"], [4, 2, 1, "", "VectorVelocity"], [4, 2, 1, "", "VectorXYZ"], [4, 2, 1, "", "Volume"], [4, 4, 1, "", "__call__"], [4, 4, 1, "", "__setitem__"], [4, 3, 1, "", "bl_idname"], [4, 4, 1, "", "func_ret_to_tree_output"], [4, 4, 1, "", "link_tree_output"], [4, 2, 1, "", "linked_to_group_output"], [4, 2, 1, "", "name"], [4, 2, 1, "", "node"]], "pynodes.core.SocketWraper": [[4, 2, 1, "", "default_value"]], "pynodes.core.Tree": [[4, 2, 1, "", "cur_frame"], [4, 4, 1, "", "frame"], [4, 2, 1, "", "group_input_node"], [4, 2, 1, "", "group_output_node"], [4, 2, 1, "", "is_embedded"], [4, 4, 1, "", "new_group_node"], [4, 4, 1, "", "new_input"], [4, 4, 1, "", "new_link"], [4, 4, 1, "", "new_node"], [4, 4, 1, "", "new_output"], [4, 4, 1, "", "remove_orphan_input_node"], [4, 4, 1, "", "simulate"], [4, 3, 1, "", "tree"], [4, 2, 1, "", "tree_output_node"]], "pynodes.datasocks": [[5, 5, 1, "", "AmbientOcclusion"], [5, 1, 1, "", "Angle"], [5, 1, 1, "", "BSDF"], [5, 1, 1, "", "Boolean"], [5, 5, 1, "", "BooleanMath"], [5, 5, 1, "", "BrickTexture"], [5, 5, 1, "", "BrightContrast"], [5, 5, 1, "", "CheckerTexture"], [5, 1, 1, "", "Collection"], [5, 5, 1, "", "CollectionInfo"], [5, 1, 1, "", "Color"], [5, 5, 1, "", "ColorGamma"], [5, 5, 1, "", "ColorRamp"], [5, 5, 1, "", "CombineColor"], [5, 5, 1, "", "CombineXYZ"], [5, 5, 1, "", "Compare"], [5, 1, 1, "", "Distance"], [5, 5, 1, "", "EnvironmentTexture"], [5, 1, 1, "", "Factor"], [5, 1, 1, "", "Float"], [5, 5, 1, "", "FloatMath"], [5, 1, 1, "", "FloatTime"], [5, 1, 1, "", "FloatTimeAbsolute"], [5, 5, 1, "", "GeometryNodeViewer"], [5, 5, 1, "", "GradientTexture"], [5, 5, 1, "", "HueSaturation"], [5, 5, 1, "", "IES_Texture"], [5, 1, 1, "", "Image"], [5, 5, 1, "", "ImageInfo"], [5, 5, 1, "", "ImageTexture"], [5, 5, 1, "", "ImageTextureGeo"], [5, 5, 1, "", "InputBool"], [5, 5, 1, "", "InputColor"], [5, 5, 1, "", "InputFloat"], [5, 5, 1, "", "InputImage"], [5, 5, 1, "", "InputIndex"], [5, 5, 1, "", "InputInteger"], [5, 5, 1, "", "InputMaterial"], [5, 5, 1, "", "InputPosition"], [5, 5, 1, "", "InputRGB"], [5, 5, 1, "", "InputString"], [5, 5, 1, "", "InputValue"], [5, 5, 1, "", "InputVector"], [5, 1, 1, "", "IntFactor"], [5, 1, 1, "", "IntPercentage"], [5, 1, 1, "", "IntUnsigned"], [5, 1, 1, "", "Integer"], [5, 5, 1, "", "IsViewport"], [5, 5, 1, "", "LightFalloff"], [5, 5, 1, "", "MagicTexture"], [5, 1, 1, "", "Material"], [5, 5, 1, "", "MixColor"], [5, 5, 1, "", "MixFloat"], [5, 5, 1, "", "MixShader"], [5, 5, 1, "", "MixVector"], [5, 5, 1, "", "MusgraveTexture"], [5, 5, 1, "", "NoiseTexture"], [5, 1, 1, "", "Object"], [5, 5, 1, "", "ObjectInfo"], [5, 1, 1, "", "Percentage"], [5, 5, 1, "", "PointDensity"], [5, 5, 1, "", "RandomBoolean"], [5, 5, 1, "", "RandomFloat"], [5, 5, 1, "", "RandomInteger"], [5, 5, 1, "", "RandomVector"], [5, 5, 1, "", "SceneTime"], [5, 5, 1, "", "SelfObject"], [5, 5, 1, "", "SeparateColor"], [5, 1, 1, "", "Shader"], [5, 5, 1, "", "ShaderGeometry"], [5, 5, 1, "", "ShaderNodeBlackbody"], [5, 5, 1, "", "ShaderNodeBump"], [5, 5, 1, "", "ShaderNodeCombineColor"], [5, 5, 1, "", "ShaderNodeDisplacement"], [5, 5, 1, "", "ShaderNodeMapping"], [5, 5, 1, "", "ShaderNodeNormal"], [5, 5, 1, "", "ShaderNodeNormalMap"], [5, 5, 1, "", "ShaderNodeRGBCurve"], [5, 5, 1, "", "ShaderNodeRGBToBW"], [5, 5, 1, "", "ShaderNodeSeparateColor"], [5, 5, 1, "", "ShaderNodeVectorDisplacement"], [5, 5, 1, "", "ShaderNodeVectorTransform"], [5, 5, 1, "", "ShaderNodeWavelength"], [5, 5, 1, "", "ShaderScript"], [5, 5, 1, "", "SkyTexture"], [5, 1, 1, "", "String"], [5, 5, 1, "", "StringToCurves"], [5, 5, 1, "", "Switch"], [5, 1, 1, "", "Texture"], [5, 5, 1, "", "TextureCoord"], [5, 1, 1, "", "Unsigned"], [5, 1, 1, "", "Vector"], [5, 1, 1, "", "VectorAcceleration"], [5, 1, 1, "", "VectorDirection"], [5, 1, 1, "", "VectorEuler"], [5, 5, 1, "", "VectorMath"], [5, 1, 1, "", "VectorTranslation"], [5, 1, 1, "", "VectorVelocity"], [5, 1, 1, "", "VectorXYZ"], [5, 5, 1, "", "ViewBoolean"], [5, 5, 1, "", "ViewColor"], [5, 5, 1, "", "ViewFloat"], [5, 5, 1, "", "ViewInteger"], [5, 5, 1, "", "ViewVector"], [5, 5, 1, "", "VoronoiTexture"], [5, 5, 1, "", "WaveTexture"], [5, 5, 1, "", "WaveTextureBands"], [5, 5, 1, "", "WaveTextureRings"], [5, 5, 1, "", "WhiteNoiseTexture"]], "pynodes.datasocks.Angle": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.BSDF": [[5, 4, 1, "", "Anisotropic"], [5, 4, 1, "", "Diffuse"], [5, 4, 1, "", "Glass"], [5, 4, 1, "", "Glossy"], [5, 4, 1, "", "Hair"], [5, 4, 1, "", "HairPrincipled"], [5, 4, 1, "", "Principled"], [5, 4, 1, "", "Refraction"], [5, 4, 1, "", "Specular"], [5, 4, 1, "", "Toon"], [5, 4, 1, "", "Translucent"], [5, 4, 1, "", "Transparent"], [5, 4, 1, "", "Velvet"]], "pynodes.datasocks.Boolean": [[5, 4, 1, "", "__add__"], [5, 4, 1, "", "__and__"], [5, 4, 1, "", "__invert__"], [5, 4, 1, "", "__mul__"], [5, 4, 1, "", "__neg__"], [5, 4, 1, "", "__or__"], [5, 3, 1, "", "bl_idname"], [5, 2, 1, "", "false"], [5, 4, 1, "", "imply"], [5, 2, 1, "", "invert"], [5, 4, 1, "", "math"], [5, 4, 1, "", "math_and"], [5, 4, 1, "", "math_or"], [5, 4, 1, "", "nor"], [5, 4, 1, "", "not_and"], [5, 4, 1, "", "not_imply"], [5, 4, 1, "", "substract"], [5, 4, 1, "", "switch"], [5, 2, 1, "", "true"], [5, 4, 1, "", "xnor"], [5, 4, 1, "", "xor"]], "pynodes.datasocks.Collection": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Color": [[5, 3, 1, "", "bl_idname"], [5, 4, 1, "", "bright_contrast"], [5, 4, 1, "", "gamma"], [5, 4, 1, "", "hue_saturation"], [5, 4, 1, "", "invert"], [5, 4, 1, "", "mix"], [5, 4, 1, "", "normal_map"], [5, 4, 1, "", "rgb_curve"], [5, 4, 1, "", "seperate"], [5, 4, 1, "", "to_background"]], "pynodes.datasocks.Distance": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Factor": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Float": [[5, 4, 1, "", "__abs__"], [5, 4, 1, "", "__add__"], [5, 4, 1, "", "__ceil__"], [5, 4, 1, "", "__eq__"], [5, 4, 1, "", "__floor__"], [5, 4, 1, "", "__ge__"], [5, 4, 1, "", "__gt__"], [5, 4, 1, "", "__le__"], [5, 4, 1, "", "__lt__"], [5, 4, 1, "", "__mod__"], [5, 4, 1, "", "__mul__"], [5, 4, 1, "", "__ne__"], [5, 4, 1, "", "__neg__"], [5, 4, 1, "", "__pow__"], [5, 4, 1, "", "__radd__"], [5, 4, 1, "", "__rmul__"], [5, 4, 1, "", "__round__"], [5, 4, 1, "", "__rsub__"], [5, 4, 1, "", "__rtruediv__"], [5, 4, 1, "", "__sub__"], [5, 4, 1, "", "__truediv__"], [5, 4, 1, "", "__trunc__"], [5, 2, 1, "", "absolute"], [5, 4, 1, "", "arccos"], [5, 2, 1, "", "arccosine"], [5, 4, 1, "", "arcsin"], [5, 2, 1, "", "arcsine"], [5, 4, 1, "", "arctan"], [5, 4, 1, "", "arctan2"], [5, 2, 1, "", "arctangent"], [5, 3, 1, "", "bl_idname"], [5, 2, 1, "", "ceil"], [5, 4, 1, "", "clamp"], [5, 4, 1, "", "color_ramp"], [5, 4, 1, "", "color_ramp_uniform"], [5, 4, 1, "", "color_ramp_with_position"], [5, 4, 1, "", "compare"], [5, 4, 1, "", "cos"], [5, 4, 1, "", "cosh"], [5, 2, 1, "", "cosine"], [5, 4, 1, "", "curve"], [5, 2, 1, "", "degrees"], [5, 2, 1, "", "exponent"], [5, 4, 1, "", "float_curve"], [5, 2, 1, "", "floor"], [5, 2, 1, "", "fract"], [5, 4, 1, "", "greater_than"], [5, 2, 1, "", "hyperbolic_cosine"], [5, 2, 1, "", "hyperbolic_sine"], [5, 2, 1, "", "hyperbolic_tangent"], [5, 2, 1, "", "inverse_sqrt"], [5, 4, 1, "", "less_than"], [5, 2, 1, "", "ln"], [5, 4, 1, "", "log"], [5, 2, 1, "", "log2"], [5, 4, 1, "", "map_range"], [5, 4, 1, "", "math"], [5, 4, 1, "", "maximum"], [5, 4, 1, "", "minimum"], [5, 4, 1, "", "mix"], [5, 4, 1, "", "modulo"], [5, 4, 1, "", "multiply_add"], [5, 4, 1, "", "pingpong"], [5, 4, 1, "", "power"], [5, 2, 1, "", "radians"], [5, 2, 1, "", "round"], [5, 2, 1, "", "sign"], [5, 4, 1, "", "sin"], [5, 2, 1, "", "sine"], [5, 4, 1, "", "sinh"], [5, 4, 1, "", "smooth_maximum"], [5, 4, 1, "", "smooth_minimum"], [5, 4, 1, "", "snap"], [5, 4, 1, "", "sqrt"], [5, 2, 1, "", "square_root"], [5, 4, 1, "", "switch"], [5, 4, 1, "", "tan"], [5, 2, 1, "", "tangent"], [5, 4, 1, "", "tanh"], [5, 4, 1, "", "to_euler"], [5, 4, 1, "", "to_integer"], [5, 4, 1, "", "to_normal"], [5, 4, 1, "", "to_string"], [5, 2, 1, "", "trunc"], [5, 4, 1, "", "wrap"]], "pynodes.datasocks.FloatTime": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.FloatTimeAbsolute": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Image": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.IntFactor": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.IntPercentage": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.IntUnsigned": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Integer": [[5, 4, 1, "", "__eq__"], [5, 4, 1, "", "__ge__"], [5, 4, 1, "", "__gt__"], [5, 4, 1, "", "__le__"], [5, 4, 1, "", "__lt__"], [5, 4, 1, "", "__ne__"], [5, 3, 1, "", "bl_idname"], [5, 4, 1, "", "switch"]], "pynodes.datasocks.Material": [[5, 3, 1, "", "bl_idname"], [5, 2, 1, "", "index"], [5, 4, 1, "", "material_selection"]], "pynodes.datasocks.Object": [[5, 3, 1, "", "bl_idname"], [5, 2, 1, "", "geometry"], [5, 2, 1, "", "location"], [5, 4, 1, "", "object_info"], [5, 2, 1, "", "rotation"], [5, 2, 1, "", "scale"]], "pynodes.datasocks.Percentage": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Shader": [[5, 4, 1, "", "Background"], [5, 4, 1, "", "Emission"], [5, 4, 1, "", "Holdout"], [5, 4, 1, "", "SubsurfaceScattering"], [5, 4, 1, "", "VolumeAbsorption"], [5, 4, 1, "", "VolumePrincipled"], [5, 4, 1, "", "VolumeScatter"], [5, 4, 1, "", "__add__"], [5, 4, 1, "", "add_shader"], [5, 4, 1, "", "attribute"], [5, 4, 1, "", "bevel"], [5, 3, 1, "", "bl_idname"], [5, 2, 1, "", "camera_data"], [5, 4, 1, "", "color_attribute"], [5, 4, 1, "", "fresnel"], [5, 2, 1, "", "geometry"], [5, 2, 1, "", "hair_info"], [5, 4, 1, "", "layer_weight"], [5, 2, 1, "", "light_path"], [5, 4, 1, "", "mix"], [5, 2, 1, "", "object_info"], [5, 2, 1, "", "particle_info"], [5, 2, 1, "", "point_info"], [5, 4, 1, "", "tangent_radial"], [5, 4, 1, "", "tangent_uv_map"], [5, 4, 1, "", "to_rgb"], [5, 4, 1, "", "uv_map"], [5, 2, 1, "", "volume_info"], [5, 4, 1, "", "wire_frame"]], "pynodes.datasocks.String": [[5, 3, 1, "", "bl_idname"], [5, 4, 1, "", "join"], [5, 2, 1, "", "length"], [5, 4, 1, "", "replace"], [5, 4, 1, "", "slice"], [5, 2, 1, "", "special_characters"], [5, 4, 1, "", "to_curve"], [5, 4, 1, "", "to_curves"]], "pynodes.datasocks.Texture": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Unsigned": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.Vector": [[5, 4, 1, "", "__abs__"], [5, 4, 1, "", "__add__"], [5, 4, 1, "", "__ceil__"], [5, 4, 1, "", "__floor__"], [5, 4, 1, "", "__mod__"], [5, 4, 1, "", "__mul__"], [5, 4, 1, "", "__neg__"], [5, 4, 1, "", "__radd__"], [5, 4, 1, "", "__rsub__"], [5, 4, 1, "", "__sub__"], [5, 4, 1, "", "__truediv__"], [5, 4, 1, "", "absolute"], [5, 4, 1, "", "align_euler_to_vector"], [5, 3, 1, "", "bl_idname"], [5, 4, 1, "", "ceil"], [5, 4, 1, "", "cos"], [5, 4, 1, "", "cross"], [5, 4, 1, "", "distance"], [5, 4, 1, "", "dot"], [5, 4, 1, "", "faceforward"], [5, 4, 1, "", "floor"], [5, 4, 1, "", "fraction"], [5, 2, 1, "", "length"], [5, 4, 1, "", "line_to"], [5, 4, 1, "", "line_towards"], [5, 4, 1, "", "map_range"], [5, 4, 1, "", "mapping"], [5, 4, 1, "", "math"], [5, 4, 1, "", "maximum"], [5, 4, 1, "", "minimum"], [5, 4, 1, "", "mix"], [5, 4, 1, "", "modulo"], [5, 4, 1, "", "multiply_add"], [5, 2, 1, "", "normalize"], [5, 4, 1, "", "project"], [5, 4, 1, "", "reflect"], [5, 4, 1, "", "refract"], [5, 4, 1, "", "rotate"], [5, 4, 1, "", "rotate_around_axis"], [5, 4, 1, "", "rotate_around_euler_xyz"], [5, 4, 1, "", "rotate_around_x_axis"], [5, 4, 1, "", "rotate_around_y_axis"], [5, 4, 1, "", "rotate_around_z_axis"], [5, 4, 1, "", "rotate_local_around_axis_by_angle"], [5, 4, 1, "", "rotate_local_euler"], [5, 4, 1, "", "rotate_object_around_axis_by_angle"], [5, 4, 1, "", "rotate_object_euler"], [5, 4, 1, "", "scale"], [5, 4, 1, "", "separate_xyz"], [5, 4, 1, "", "sin"], [5, 4, 1, "", "snap"], [5, 4, 1, "", "switch"], [5, 4, 1, "", "tangent"], [5, 4, 1, "", "vector_curve"], [5, 4, 1, "", "wrap"], [5, 2, 1, "", "x"], [5, 2, 1, "", "y"], [5, 2, 1, "", "z"]], "pynodes.datasocks.VectorAcceleration": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.VectorDirection": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.VectorEuler": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.VectorTranslation": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.VectorVelocity": [[5, 3, 1, "", "bl_idname"]], "pynodes.datasocks.VectorXYZ": [[5, 3, 1, "", "bl_idname"]], "pynodes.geosocks": [[6, 5, 1, "", "BezierSegment"], [6, 1, 1, "", "Curve"], [6, 5, 1, "", "CurveArc"], [6, 5, 1, "", "CurveArcPoints"], [6, 5, 1, "", "CurveCircle"], [6, 5, 1, "", "CurveCirclePoints"], [6, 5, 1, "", "CurveLine"], [6, 5, 1, "", "CurveQuadraticBezier"], [6, 5, 1, "", "CurveSpiral"], [6, 5, 1, "", "CurveStar"], [6, 1, 1, "", "Geometry"], [6, 5, 1, "", "InputPoints"], [6, 1, 1, "", "Instances"], [6, 5, 1, "", "Kite"], [6, 1, 1, "", "Mesh"], [6, 5, 1, "", "MeshCircle"], [6, 5, 1, "", "MeshCone"], [6, 5, 1, "", "MeshCube"], [6, 5, 1, "", "MeshCylinder"], [6, 5, 1, "", "MeshGrid"], [6, 5, 1, "", "MeshIcoSphere"], [6, 5, 1, "", "MeshLine"], [6, 5, 1, "", "MeshLineEndPoints"], [6, 5, 1, "", "MeshUVSphere"], [6, 5, 1, "", "Parallelogram"], [6, 1, 1, "", "Points"], [6, 5, 1, "", "Quadrangle"], [6, 5, 1, "", "Rectangle"], [6, 5, 1, "", "SplineParameter"], [6, 5, 1, "", "Trapezoid"], [6, 1, 1, "", "Volume"], [6, 5, 1, "", "VolumeCube"], [6, 5, 1, "", "join"]], "pynodes.geosocks.Curve": [[6, 2, 1, "", "curve_length"], [6, 4, 1, "", "curve_of_point"], [6, 4, 1, "", "deform_on_surface"], [6, 2, 1, "", "domain_size"], [6, 4, 1, "", "endpoint_selection"], [6, 4, 1, "", "fill_curve"], [6, 2, 1, "", "filled_mesh"], [6, 2, 1, "", "filled_ngons"], [6, 4, 1, "", "fillet_bezier"], [6, 4, 1, "", "fillet_curve"], [6, 4, 1, "", "fillet_poly"], [6, 4, 1, "", "handle_positions"], [6, 4, 1, "", "handle_type_selection"], [6, 4, 1, "", "interpolate_curves"], [6, 2, 1, "", "is_cyclic"], [6, 4, 1, "", "offset_point_in_curve"], [6, 2, 1, "", "parameter"], [6, 4, 1, "", "points_of_curve"], [6, 4, 1, "", "resample"], [6, 4, 1, "", "resample_evaluated"], [6, 4, 1, "", "resample_length"], [6, 2, 1, "", "resolution"], [6, 4, 1, "", "reverse"], [6, 4, 1, "", "sample_boolean"], [6, 4, 1, "", "sample_color"], [6, 4, 1, "", "sample_curve"], [6, 4, 1, "", "sample_float"], [6, 4, 1, "", "sample_integer"], [6, 4, 1, "", "sample_vector"], [6, 4, 1, "", "set_cyclic"], [6, 4, 1, "", "set_handle_positions"], [6, 4, 1, "", "set_handle_type"], [6, 4, 1, "", "set_normal"], [6, 4, 1, "", "set_radius"], [6, 4, 1, "", "set_resolution"], [6, 4, 1, "", "set_spline_type"], [6, 4, 1, "", "set_spline_type_bezier"], [6, 4, 1, "", "set_spline_type_catmull_rom"], [6, 4, 1, "", "set_spline_type_nurbs"], [6, 4, 1, "", "set_spline_type_poly"], [6, 4, 1, "", "set_tilt"], [6, 2, 1, "", "spline_length"], [6, 4, 1, "", "subdivide"], [6, 2, 1, "", "tangent"], [6, 2, 1, "", "tilt"], [6, 4, 1, "", "to_mesh"], [6, 4, 1, "", "to_points"], [6, 4, 1, "", "trim_factor"], [6, 4, 1, "", "trim_length"]], "pynodes.geosocks.Geometry": [[6, 2, 1, "", "ID"], [6, 4, 1, "", "__add__"], [6, 4, 1, "", "__getitem__"], [6, 4, 1, "", "_store_named_attribute"], [6, 4, 1, "", "accumulate_float_on_corners"], [6, 4, 1, "", "accumulate_float_on_curves"], [6, 4, 1, "", "accumulate_float_on_edges"], [6, 4, 1, "", "accumulate_float_on_faces"], [6, 4, 1, "", "accumulate_float_on_instances"], [6, 4, 1, "", "accumulate_float_on_points"], [6, 4, 1, "", "accumulate_integer_on_corners"], [6, 4, 1, "", "accumulate_integer_on_curves"], [6, 4, 1, "", "accumulate_integer_on_edges"], [6, 4, 1, "", "accumulate_integer_on_faces"], [6, 4, 1, "", "accumulate_integer_on_instances"], [6, 4, 1, "", "accumulate_integer_on_points"], [6, 4, 1, "", "accumulate_vector_on_corners"], [6, 4, 1, "", "accumulate_vector_on_curves"], [6, 4, 1, "", "accumulate_vector_on_edges"], [6, 4, 1, "", "accumulate_vector_on_faces"], [6, 4, 1, "", "accumulate_vector_on_instances"], [6, 4, 1, "", "accumulate_vector_on_points"], [6, 3, 1, "", "bl_idname"], [6, 4, 1, "", "blur_color_attribute"], [6, 4, 1, "", "blur_float_attribute"], [6, 4, 1, "", "blur_integer_attribute"], [6, 4, 1, "", "blur_vector_attribute"], [6, 4, 1, "", "bound_box"], [6, 4, 1, "", "capture_boolean_on_corners"], [6, 4, 1, "", "capture_boolean_on_curves"], [6, 4, 1, "", "capture_boolean_on_edges"], [6, 4, 1, "", "capture_boolean_on_faces"], [6, 4, 1, "", "capture_boolean_on_instances"], [6, 4, 1, "", "capture_boolean_on_points"], [6, 4, 1, "", "capture_color_on_corners"], [6, 4, 1, "", "capture_color_on_curves"], [6, 4, 1, "", "capture_color_on_edges"], [6, 4, 1, "", "capture_color_on_faces"], [6, 4, 1, "", "capture_color_on_instances"], [6, 4, 1, "", "capture_color_on_points"], [6, 4, 1, "", "capture_float_on_corners"], [6, 4, 1, "", "capture_float_on_curves"], [6, 4, 1, "", "capture_float_on_edges"], [6, 4, 1, "", "capture_float_on_faces"], [6, 4, 1, "", "capture_float_on_instances"], [6, 4, 1, "", "capture_float_on_points"], [6, 4, 1, "", "capture_integer_on_corners"], [6, 4, 1, "", "capture_integer_on_curves"], [6, 4, 1, "", "capture_integer_on_edges"], [6, 4, 1, "", "capture_integer_on_faces"], [6, 4, 1, "", "capture_integer_on_instances"], [6, 4, 1, "", "capture_integer_on_points"], [6, 4, 1, "", "capture_vector_on_corners"], [6, 4, 1, "", "capture_vector_on_curves"], [6, 4, 1, "", "capture_vector_on_edges"], [6, 4, 1, "", "capture_vector_on_faces"], [6, 4, 1, "", "capture_vector_on_instances"], [6, 4, 1, "", "capture_vector_on_points"], [6, 4, 1, "", "convex_hull"], [6, 4, 1, "", "delete"], [6, 4, 1, "", "delete_curves"], [6, 4, 1, "", "delete_edges"], [6, 4, 1, "", "delete_faces"], [6, 4, 1, "", "delete_instances"], [6, 4, 1, "", "delete_points"], [6, 4, 1, "", "domain_size"], [6, 4, 1, "", "duplicate_elements"], [6, 4, 1, "", "evaluate_boolean_at_index_on_corners"], [6, 4, 1, "", "evaluate_boolean_at_index_on_curves"], [6, 4, 1, "", "evaluate_boolean_at_index_on_edges"], [6, 4, 1, "", "evaluate_boolean_at_index_on_faces"], [6, 4, 1, "", "evaluate_boolean_at_index_on_instances"], [6, 4, 1, "", "evaluate_boolean_at_index_on_points"], [6, 4, 1, "", "evaluate_boolean_on_corners"], [6, 4, 1, "", "evaluate_boolean_on_curves"], [6, 4, 1, "", "evaluate_boolean_on_edges"], [6, 4, 1, "", "evaluate_boolean_on_faces"], [6, 4, 1, "", "evaluate_boolean_on_instances"], [6, 4, 1, "", "evaluate_boolean_on_points"], [6, 4, 1, "", "evaluate_color_at_index_on_corners"], [6, 4, 1, "", "evaluate_color_at_index_on_curves"], [6, 4, 1, "", "evaluate_color_at_index_on_edges"], [6, 4, 1, "", "evaluate_color_at_index_on_faces"], [6, 4, 1, "", "evaluate_color_at_index_on_instances"], [6, 4, 1, "", "evaluate_color_at_index_on_points"], [6, 4, 1, "", "evaluate_color_on_corners"], [6, 4, 1, "", "evaluate_color_on_curves"], [6, 4, 1, "", "evaluate_color_on_edges"], [6, 4, 1, "", "evaluate_color_on_faces"], [6, 4, 1, "", "evaluate_color_on_instances"], [6, 4, 1, "", "evaluate_color_on_points"], [6, 4, 1, "", "evaluate_float_at_index_on_corners"], [6, 4, 1, "", "evaluate_float_at_index_on_curves"], [6, 4, 1, "", "evaluate_float_at_index_on_edges"], [6, 4, 1, "", "evaluate_float_at_index_on_faces"], [6, 4, 1, "", "evaluate_float_at_index_on_instances"], [6, 4, 1, "", "evaluate_float_at_index_on_points"], [6, 4, 1, "", "evaluate_float_on_corners"], [6, 4, 1, "", "evaluate_float_on_curves"], [6, 4, 1, "", "evaluate_float_on_edges"], [6, 4, 1, "", "evaluate_float_on_faces"], [6, 4, 1, "", "evaluate_float_on_instances"], [6, 4, 1, "", "evaluate_float_on_points"], [6, 4, 1, "", "evaluate_integer_at_index_on_corners"], [6, 4, 1, "", "evaluate_integer_at_index_on_curves"], [6, 4, 1, "", "evaluate_integer_at_index_on_edges"], [6, 4, 1, "", "evaluate_integer_at_index_on_faces"], [6, 4, 1, "", "evaluate_integer_at_index_on_instances"], [6, 4, 1, "", "evaluate_integer_at_index_on_points"], [6, 4, 1, "", "evaluate_integer_on_corners"], [6, 4, 1, "", "evaluate_integer_on_curves"], [6, 4, 1, "", "evaluate_integer_on_edges"], [6, 4, 1, "", "evaluate_integer_on_faces"], [6, 4, 1, "", "evaluate_integer_on_instances"], [6, 4, 1, "", "evaluate_integer_on_points"], [6, 4, 1, "", "evaluate_vector_at_index_on_corners"], [6, 4, 1, "", "evaluate_vector_at_index_on_curves"], [6, 4, 1, "", "evaluate_vector_at_index_on_edges"], [6, 4, 1, "", "evaluate_vector_at_index_on_faces"], [6, 4, 1, "", "evaluate_vector_at_index_on_instances"], [6, 4, 1, "", "evaluate_vector_at_index_on_points"], [6, 4, 1, "", "evaluate_vector_on_corners"], [6, 4, 1, "", "evaluate_vector_on_curves"], [6, 4, 1, "", "evaluate_vector_on_edges"], [6, 4, 1, "", "evaluate_vector_on_faces"], [6, 4, 1, "", "evaluate_vector_on_instances"], [6, 4, 1, "", "evaluate_vector_on_points"], [6, 4, 1, "", "float_statistic_on_corners"], [6, 4, 1, "", "float_statistic_on_curves"], [6, 4, 1, "", "float_statistic_on_edges"], [6, 4, 1, "", "float_statistic_on_faces"], [6, 4, 1, "", "float_statistic_on_instances"], [6, 4, 1, "", "float_statistic_on_points"], [6, 2, 1, "", "index"], [6, 4, 1, "", "index_of_nearest"], [6, 4, 1, "", "integer_statistic_on_corners"], [6, 4, 1, "", "integer_statistic_on_curves"], [6, 4, 1, "", "integer_statistic_on_edges"], [6, 4, 1, "", "integer_statistic_on_faces"], [6, 4, 1, "", "integer_statistic_on_instances"], [6, 4, 1, "", "integer_statistic_on_points"], [6, 4, 1, "", "join"], [6, 4, 1, "", "join_to_instances"], [6, 4, 1, "", "merge_by_distance"], [6, 4, 1, "", "named_attribute_boolean"], [6, 4, 1, "", "named_attribute_color"], [6, 4, 1, "", "named_attribute_float"], [6, 4, 1, "", "named_attribute_integer"], [6, 4, 1, "", "named_attribute_vector"], [6, 2, 1, "", "normal"], [6, 4, 1, "", "on_points"], [6, 2, 1, "", "position"], [6, 4, 1, "", "proximity"], [6, 2, 1, "", "radius"], [6, 4, 1, "", "raycast_boolean"], [6, 4, 1, "", "raycast_color"], [6, 4, 1, "", "raycast_float"], [6, 4, 1, "", "raycast_integer"], [6, 4, 1, "", "raycast_vector"], [6, 4, 1, "", "realize_instances"], [6, 4, 1, "", "remove_attribute"], [6, 4, 1, "", "replace_material"], [6, 4, 1, "", "sample_boolean_at_index"], [6, 4, 1, "", "sample_color_at_index"], [6, 4, 1, "", "sample_float_at_index"], [6, 4, 1, "", "sample_index"], [6, 4, 1, "", "sample_integer_at_index"], [6, 4, 1, "", "sample_nearest"], [6, 4, 1, "", "sample_vector_at_index"], [6, 4, 1, "", "select"], [6, 4, 1, "", "select_curves"], [6, 4, 1, "", "select_edges"], [6, 4, 1, "", "select_faces"], [6, 4, 1, "", "select_instances"], [6, 4, 1, "", "select_points"], [6, 2, 1, "", "selection"], [6, 4, 1, "", "separate"], [6, 4, 1, "", "separate_components"], [6, 4, 1, "", "separate_curves"], [6, 4, 1, "", "separate_edges"], [6, 4, 1, "", "separate_faces"], [6, 4, 1, "", "separate_instances"], [6, 4, 1, "", "set_id"], [6, 4, 1, "", "set_material"], [6, 4, 1, "", "set_material_index"], [6, 4, 1, "", "set_position"], [6, 4, 1, "", "store_named_attribute"], [6, 4, 1, "", "switch"], [6, 4, 1, "", "transform"], [6, 4, 1, "", "vector_statistic_on_corners"], [6, 4, 1, "", "vector_statistic_on_curves"], [6, 4, 1, "", "vector_statistic_on_edges"], [6, 4, 1, "", "vector_statistic_on_faces"], [6, 4, 1, "", "vector_statistic_on_instances"], [6, 4, 1, "", "vector_statistic_on_points"]], "pynodes.geosocks.Instances": [[6, 2, 1, "", "domain_size"], [6, 4, 1, "", "realize_instances"], [6, 4, 1, "", "rotate_instances"], [6, 2, 1, "", "rotation"], [6, 4, 1, "", "sample_boolean_at_index"], [6, 4, 1, "", "sample_color_at_index"], [6, 4, 1, "", "sample_float_at_index"], [6, 4, 1, "", "sample_integer_at_index"], [6, 4, 1, "", "sample_vector_at_index"], [6, 2, 1, "", "scale"], [6, 4, 1, "", "scale_elements"], [6, 4, 1, "", "scale_instances"], [6, 4, 1, "", "separate"], [6, 4, 1, "", "to_points"], [6, 4, 1, "", "translate_instances"]], "pynodes.geosocks.Mesh": [[6, 4, 1, "", "corners_of_face"], [6, 4, 1, "", "corners_of_vertex"], [6, 4, 1, "", "distribute_points_on_faces"], [6, 2, 1, "", "domain_size"], [6, 4, 1, "", "dual_mesh"], [6, 2, 1, "", "edge_angle"], [6, 2, 1, "", "edge_neighbors"], [6, 4, 1, "", "edge_paths_to_curves"], [6, 4, 1, "", "edge_paths_to_selection"], [6, 2, 1, "", "edge_vertices"], [6, 4, 1, "", "edges_of_corner"], [6, 4, 1, "", "edges_of_vertex"], [6, 4, 1, "", "edges_to_face_groups"], [6, 4, 1, "", "extrude"], [6, 4, 1, "", "extrude_edges"], [6, 4, 1, "", "extrude_faces"], [6, 4, 1, "", "extrude_vertices"], [6, 2, 1, "", "face_area"], [6, 4, 1, "", "face_is_planar"], [6, 2, 1, "", "face_neighbors"], [6, 4, 1, "", "face_of_corner"], [6, 4, 1, "", "faceset_boundaries"], [6, 4, 1, "", "flip_faces"], [6, 2, 1, "", "is_shade_smooth"], [6, 4, 1, "", "merge_by_distance"], [6, 4, 1, "", "mesh_difference"], [6, 4, 1, "", "mesh_intersect"], [6, 2, 1, "", "mesh_island"], [6, 4, 1, "", "mesh_union"], [6, 4, 1, "", "nearest_surface"], [6, 4, 1, "", "nearest_surface_boolean"], [6, 4, 1, "", "nearest_surface_color"], [6, 4, 1, "", "nearest_surface_float"], [6, 4, 1, "", "nearest_surface_integer"], [6, 4, 1, "", "nearest_surface_vector"], [6, 4, 1, "", "offset_corner_in_face"], [6, 4, 1, "", "pack_uv_islands"], [6, 4, 1, "", "sample_uv_surface_boolean"], [6, 4, 1, "", "sample_uv_surface_color"], [6, 4, 1, "", "sample_uv_surface_float"], [6, 4, 1, "", "sample_uv_surface_integer"], [6, 4, 1, "", "sample_uv_surface_vector"], [6, 4, 1, "", "scale_elements"], [6, 4, 1, "", "set_shade_smooth"], [6, 4, 1, "", "shortest_edge_paths"], [6, 4, 1, "", "split_edges"], [6, 4, 1, "", "subdivide_mesh"], [6, 4, 1, "", "subdivision_surface"], [6, 4, 1, "", "to_curve"], [6, 4, 1, "", "to_points"], [6, 4, 1, "", "to_volume"], [6, 4, 1, "", "triangulate"], [6, 4, 1, "", "uv_unwrap"], [6, 2, 1, "", "vertex_neighbors"], [6, 4, 1, "", "vertex_of_corner"]], "pynodes.geosocks.Points": [[6, 2, 1, "", "domain_size"], [6, 4, 1, "", "merge_by_distance"], [6, 4, 1, "", "set_radius"], [6, 4, 1, "", "to_vertices"], [6, 4, 1, "", "to_volume"]], "pynodes.geosocks.Volume": [[6, 4, 1, "", "distribute_points_grid"], [6, 4, 1, "", "distribute_points_random"], [6, 4, 1, "", "to_mesh"]], "pynodes.nodes": [[7, 5, 1, "", "FunctionNodeAlignEulerToVector"], [7, 5, 1, "", "FunctionNodeBooleanMath"], [7, 5, 1, "", "FunctionNodeCombineColor"], [7, 5, 1, "", "FunctionNodeCompare"], [7, 5, 1, "", "FunctionNodeFloatToInt"], [7, 5, 1, "", "FunctionNodeInputBool"], [7, 5, 1, "", "FunctionNodeInputColor"], [7, 5, 1, "", "FunctionNodeInputInt"], [7, 5, 1, "", "FunctionNodeInputSpecialCharacters"], [7, 5, 1, "", "FunctionNodeInputString"], [7, 5, 1, "", "FunctionNodeInputVector"], [7, 5, 1, "", "FunctionNodeRandomValue"], [7, 5, 1, "", "FunctionNodeReplaceString"], [7, 5, 1, "", "FunctionNodeRotateEuler"], [7, 5, 1, "", "FunctionNodeSeparateColor"], [7, 5, 1, "", "FunctionNodeSliceString"], [7, 5, 1, "", "FunctionNodeStringLength"], [7, 5, 1, "", "FunctionNodeValueToString"], [7, 5, 1, "", "GeometryNodeAccumulateField"], [7, 5, 1, "", "GeometryNodeAttributeDomainSize"], [7, 5, 1, "", "GeometryNodeAttributeStatistic"], [7, 5, 1, "", "GeometryNodeBlurAttribute"], [7, 5, 1, "", "GeometryNodeBoundBox"], [7, 5, 1, "", "GeometryNodeCaptureAttribute"], [7, 5, 1, "", "GeometryNodeCollectionInfo"], [7, 5, 1, "", "GeometryNodeConvexHull"], [7, 5, 1, "", "GeometryNodeCornersOfFace"], [7, 5, 1, "", "GeometryNodeCornersOfVertex"], [7, 5, 1, "", "GeometryNodeCurveArc"], [7, 5, 1, "", "GeometryNodeCurveEndpointSelection"], [7, 5, 1, "", "GeometryNodeCurveHandleTypeSelection"], [7, 5, 1, "", "GeometryNodeCurveLength"], [7, 5, 1, "", "GeometryNodeCurveOfPoint"], [7, 5, 1, "", "GeometryNodeCurvePrimitiveBezierSegment"], [7, 5, 1, "", "GeometryNodeCurvePrimitiveCircle"], [7, 5, 1, "", "GeometryNodeCurvePrimitiveLine"], [7, 5, 1, "", "GeometryNodeCurvePrimitiveQuadrilateral"], [7, 5, 1, "", "GeometryNodeCurveQuadraticBezier"], [7, 5, 1, "", "GeometryNodeCurveSetHandles"], [7, 5, 1, "", "GeometryNodeCurveSpiral"], [7, 5, 1, "", "GeometryNodeCurveSplineType"], [7, 5, 1, "", "GeometryNodeCurveStar"], [7, 5, 1, "", "GeometryNodeCurveToMesh"], [7, 5, 1, "", "GeometryNodeCurveToPoints"], [7, 5, 1, "", "GeometryNodeDeformCurvesOnSurface"], [7, 5, 1, "", "GeometryNodeDeleteGeometry"], [7, 5, 1, "", "GeometryNodeDistributePointsInVolume"], [7, 5, 1, "", "GeometryNodeDistributePointsOnFaces"], [7, 5, 1, "", "GeometryNodeDualMesh"], [7, 5, 1, "", "GeometryNodeDuplicateElements"], [7, 5, 1, "", "GeometryNodeEdgePathsToCurves"], [7, 5, 1, "", "GeometryNodeEdgePathsToSelection"], [7, 5, 1, "", "GeometryNodeEdgesOfCorner"], [7, 5, 1, "", "GeometryNodeEdgesOfVertex"], [7, 5, 1, "", "GeometryNodeEdgesToFaceGroups"], [7, 5, 1, "", "GeometryNodeExtrudeMesh"], [7, 5, 1, "", "GeometryNodeFaceOfCorner"], [7, 5, 1, "", "GeometryNodeFieldAtIndex"], [7, 5, 1, "", "GeometryNodeFieldOnDomain"], [7, 5, 1, "", "GeometryNodeFillCurve"], [7, 5, 1, "", "GeometryNodeFilletCurve"], [7, 5, 1, "", "GeometryNodeFlipFaces"], [7, 5, 1, "", "GeometryNodeGeometryToInstance"], [7, 5, 1, "", "GeometryNodeImageInfo"], [7, 5, 1, "", "GeometryNodeImageTexture"], [7, 5, 1, "", "GeometryNodeIndexOfNearest"], [7, 5, 1, "", "GeometryNodeInputCurveHandlePositions"], [7, 5, 1, "", "GeometryNodeInputCurveTilt"], [7, 5, 1, "", "GeometryNodeInputID"], [7, 5, 1, "", "GeometryNodeInputImage"], [7, 5, 1, "", "GeometryNodeInputIndex"], [7, 5, 1, "", "GeometryNodeInputInstanceRotation"], [7, 5, 1, "", "GeometryNodeInputInstanceScale"], [7, 5, 1, "", "GeometryNodeInputMaterial"], [7, 5, 1, "", "GeometryNodeInputMaterialIndex"], [7, 5, 1, "", "GeometryNodeInputMeshEdgeAngle"], [7, 5, 1, "", "GeometryNodeInputMeshEdgeNeighbors"], [7, 5, 1, "", "GeometryNodeInputMeshEdgeVertices"], [7, 5, 1, "", "GeometryNodeInputMeshFaceArea"], [7, 5, 1, "", "GeometryNodeInputMeshFaceIsPlanar"], [7, 5, 1, "", "GeometryNodeInputMeshFaceNeighbors"], [7, 5, 1, "", "GeometryNodeInputMeshIsland"], [7, 5, 1, "", "GeometryNodeInputMeshVertexNeighbors"], [7, 5, 1, "", "GeometryNodeInputNamedAttribute"], [7, 5, 1, "", "GeometryNodeInputNormal"], [7, 5, 1, "", "GeometryNodeInputPosition"], [7, 5, 1, "", "GeometryNodeInputRadius"], [7, 5, 1, "", "GeometryNodeInputSceneTime"], [7, 5, 1, "", "GeometryNodeInputShadeSmooth"], [7, 5, 1, "", "GeometryNodeInputShortestEdgePaths"], [7, 5, 1, "", "GeometryNodeInputSplineCyclic"], [7, 5, 1, "", "GeometryNodeInputSplineResolution"], [7, 5, 1, "", "GeometryNodeInputTangent"], [7, 5, 1, "", "GeometryNodeInstanceOnPoints"], [7, 5, 1, "", "GeometryNodeInstancesToPoints"], [7, 5, 1, "", "GeometryNodeInterpolateCurves"], [7, 5, 1, "", "GeometryNodeIsViewport"], [7, 5, 1, "", "GeometryNodeJoinGeometry"], [7, 5, 1, "", "GeometryNodeMaterialSelection"], [7, 5, 1, "", "GeometryNodeMergeByDistance"], [7, 5, 1, "", "GeometryNodeMeshBoolean"], [7, 5, 1, "", "GeometryNodeMeshCircle"], [7, 5, 1, "", "GeometryNodeMeshCone"], [7, 5, 1, "", "GeometryNodeMeshCube"], [7, 5, 1, "", "GeometryNodeMeshCylinder"], [7, 5, 1, "", "GeometryNodeMeshFaceSetBoundaries"], [7, 5, 1, "", "GeometryNodeMeshGrid"], [7, 5, 1, "", "GeometryNodeMeshIcoSphere"], [7, 5, 1, "", "GeometryNodeMeshLine"], [7, 5, 1, "", "GeometryNodeMeshToCurve"], [7, 5, 1, "", "GeometryNodeMeshToPoints"], [7, 5, 1, "", "GeometryNodeMeshToVolume"], [7, 5, 1, "", "GeometryNodeMeshUVSphere"], [7, 5, 1, "", "GeometryNodeObjectInfo"], [7, 5, 1, "", "GeometryNodeOffsetCornerInFace"], [7, 5, 1, "", "GeometryNodeOffsetPointInCurve"], [7, 5, 1, "", "GeometryNodePoints"], [7, 5, 1, "", "GeometryNodePointsOfCurve"], [7, 5, 1, "", "GeometryNodePointsToVertices"], [7, 5, 1, "", "GeometryNodePointsToVolume"], [7, 5, 1, "", "GeometryNodeProximity"], [7, 5, 1, "", "GeometryNodeRaycast"], [7, 5, 1, "", "GeometryNodeRealizeInstances"], [7, 5, 1, "", "GeometryNodeRemoveAttribute"], [7, 5, 1, "", "GeometryNodeReplaceMaterial"], [7, 5, 1, "", "GeometryNodeResampleCurve"], [7, 5, 1, "", "GeometryNodeReverseCurve"], [7, 5, 1, "", "GeometryNodeRotateInstances"], [7, 5, 1, "", "GeometryNodeSampleCurve"], [7, 5, 1, "", "GeometryNodeSampleIndex"], [7, 5, 1, "", "GeometryNodeSampleNearest"], [7, 5, 1, "", "GeometryNodeSampleNearestSurface"], [7, 5, 1, "", "GeometryNodeSampleUVSurface"], [7, 5, 1, "", "GeometryNodeScaleElements"], [7, 5, 1, "", "GeometryNodeScaleInstances"], [7, 5, 1, "", "GeometryNodeSelfObject"], [7, 5, 1, "", "GeometryNodeSeparateComponents"], [7, 5, 1, "", "GeometryNodeSeparateGeometry"], [7, 5, 1, "", "GeometryNodeSetCurveHandlePositions"], [7, 5, 1, "", "GeometryNodeSetCurveNormal"], [7, 5, 1, "", "GeometryNodeSetCurveRadius"], [7, 5, 1, "", "GeometryNodeSetCurveTilt"], [7, 5, 1, "", "GeometryNodeSetID"], [7, 5, 1, "", "GeometryNodeSetMaterial"], [7, 5, 1, "", "GeometryNodeSetMaterialIndex"], [7, 5, 1, "", "GeometryNodeSetPointRadius"], [7, 5, 1, "", "GeometryNodeSetPosition"], [7, 5, 1, "", "GeometryNodeSetShadeSmooth"], [7, 5, 1, "", "GeometryNodeSetSplineCyclic"], [7, 5, 1, "", "GeometryNodeSetSplineResolution"], [7, 5, 1, "", "GeometryNodeSplineLength"], [7, 5, 1, "", "GeometryNodeSplineParameter"], [7, 5, 1, "", "GeometryNodeSplitEdges"], [7, 5, 1, "", "GeometryNodeStoreNamedAttribute"], [7, 5, 1, "", "GeometryNodeStringJoin"], [7, 5, 1, "", "GeometryNodeStringToCurves"], [7, 5, 1, "", "GeometryNodeSubdivideCurve"], [7, 5, 1, "", "GeometryNodeSubdivideMesh"], [7, 5, 1, "", "GeometryNodeSubdivisionSurface"], [7, 5, 1, "", "GeometryNodeSwitch"], [7, 5, 1, "", "GeometryNodeTransform"], [7, 5, 1, "", "GeometryNodeTranslateInstances"], [7, 5, 1, "", "GeometryNodeTriangulate"], [7, 5, 1, "", "GeometryNodeTrimCurve"], [7, 5, 1, "", "GeometryNodeUVPackIslands"], [7, 5, 1, "", "GeometryNodeUVUnwrap"], [7, 5, 1, "", "GeometryNodeVertexOfCorner"], [7, 5, 1, "", "GeometryNodeViewer"], [7, 5, 1, "", "GeometryNodeVolumeCube"], [7, 5, 1, "", "GeometryNodeVolumeToMesh"], [7, 5, 1, "", "ShaderNodeAddShader"], [7, 5, 1, "", "ShaderNodeAmbientOcclusion"], [7, 5, 1, "", "ShaderNodeAttribute"], [7, 5, 1, "", "ShaderNodeBackground"], [7, 5, 1, "", "ShaderNodeBevel"], [7, 5, 1, "", "ShaderNodeBlackbody"], [7, 5, 1, "", "ShaderNodeBrightContrast"], [7, 5, 1, "", "ShaderNodeBsdfAnisotropic"], [7, 5, 1, "", "ShaderNodeBsdfDiffuse"], [7, 5, 1, "", "ShaderNodeBsdfGlass"], [7, 5, 1, "", "ShaderNodeBsdfGlossy"], [7, 5, 1, "", "ShaderNodeBsdfHair"], [7, 5, 1, "", "ShaderNodeBsdfHairPrincipled"], [7, 5, 1, "", "ShaderNodeBsdfPrincipled"], [7, 5, 1, "", "ShaderNodeBsdfRefraction"], [7, 5, 1, "", "ShaderNodeBsdfToon"], [7, 5, 1, "", "ShaderNodeBsdfTranslucent"], [7, 5, 1, "", "ShaderNodeBsdfTransparent"], [7, 5, 1, "", "ShaderNodeBsdfVelvet"], [7, 5, 1, "", "ShaderNodeBump"], [7, 5, 1, "", "ShaderNodeCameraData"], [7, 5, 1, "", "ShaderNodeClamp"], [7, 5, 1, "", "ShaderNodeCombineColor"], [7, 5, 1, "", "ShaderNodeCombineXYZ"], [7, 5, 1, "", "ShaderNodeDisplacement"], [7, 5, 1, "", "ShaderNodeEeveeSpecular"], [7, 5, 1, "", "ShaderNodeEmission"], [7, 5, 1, "", "ShaderNodeFloatCurve"], [7, 5, 1, "", "ShaderNodeFresnel"], [7, 5, 1, "", "ShaderNodeGamma"], [7, 5, 1, "", "ShaderNodeHairInfo"], [7, 5, 1, "", "ShaderNodeHoldout"], [7, 5, 1, "", "ShaderNodeHueSaturation"], [7, 5, 1, "", "ShaderNodeInvert"], [7, 5, 1, "", "ShaderNodeLayerWeight"], [7, 5, 1, "", "ShaderNodeLightFalloff"], [7, 5, 1, "", "ShaderNodeLightPath"], [7, 5, 1, "", "ShaderNodeMapRange"], [7, 5, 1, "", "ShaderNodeMapping"], [7, 5, 1, "", "ShaderNodeMath"], [7, 5, 1, "", "ShaderNodeMix"], [7, 5, 1, "", "ShaderNodeMixShader"], [7, 5, 1, "", "ShaderNodeNewGeometry"], [7, 5, 1, "", "ShaderNodeNormal"], [7, 5, 1, "", "ShaderNodeNormalMap"], [7, 5, 1, "", "ShaderNodeObjectInfo"], [7, 5, 1, "", "ShaderNodeOutputAOV"], [7, 5, 1, "", "ShaderNodeOutputLight"], [7, 5, 1, "", "ShaderNodeOutputMaterial"], [7, 5, 1, "", "ShaderNodeOutputWorld"], [7, 5, 1, "", "ShaderNodeParticleInfo"], [7, 5, 1, "", "ShaderNodePointInfo"], [7, 5, 1, "", "ShaderNodeRGB"], [7, 5, 1, "", "ShaderNodeRGBCurve"], [7, 5, 1, "", "ShaderNodeRGBToBW"], [7, 5, 1, "", "ShaderNodeScript"], [7, 5, 1, "", "ShaderNodeSeparateColor"], [7, 5, 1, "", "ShaderNodeSeparateXYZ"], [7, 5, 1, "", "ShaderNodeShaderToRGB"], [7, 5, 1, "", "ShaderNodeSubsurfaceScattering"], [7, 5, 1, "", "ShaderNodeTangent"], [7, 5, 1, "", "ShaderNodeTexBrick"], [7, 5, 1, "", "ShaderNodeTexChecker"], [7, 5, 1, "", "ShaderNodeTexCoord"], [7, 5, 1, "", "ShaderNodeTexEnvironment"], [7, 5, 1, "", "ShaderNodeTexGradient"], [7, 5, 1, "", "ShaderNodeTexIES"], [7, 5, 1, "", "ShaderNodeTexImage"], [7, 5, 1, "", "ShaderNodeTexMagic"], [7, 5, 1, "", "ShaderNodeTexMusgrave"], [7, 5, 1, "", "ShaderNodeTexNoise"], [7, 5, 1, "", "ShaderNodeTexPointDensity"], [7, 5, 1, "", "ShaderNodeTexSky"], [7, 5, 1, "", "ShaderNodeTexVoronoi"], [7, 5, 1, "", "ShaderNodeTexWave"], [7, 5, 1, "", "ShaderNodeTexWhiteNoise"], [7, 5, 1, "", "ShaderNodeUVMap"], [7, 5, 1, "", "ShaderNodeValToRGB"], [7, 5, 1, "", "ShaderNodeValue"], [7, 5, 1, "", "ShaderNodeVectorCurve"], [7, 5, 1, "", "ShaderNodeVectorDisplacement"], [7, 5, 1, "", "ShaderNodeVectorMath"], [7, 5, 1, "", "ShaderNodeVectorRotate"], [7, 5, 1, "", "ShaderNodeVectorTransform"], [7, 5, 1, "", "ShaderNodeVertexColor"], [7, 5, 1, "", "ShaderNodeVolumeAbsorption"], [7, 5, 1, "", "ShaderNodeVolumeInfo"], [7, 5, 1, "", "ShaderNodeVolumePrincipled"], [7, 5, 1, "", "ShaderNodeVolumeScatter"], [7, 5, 1, "", "ShaderNodeWavelength"], [7, 5, 1, "", "ShaderNodeWireframe"]], "pynodes.scene": [[8, 1, 1, "", "Key"], [8, 1, 1, "", "Mat"], [8, 1, 1, "", "Mod"], [8, 1, 1, "", "O"], [8, 1, 1, "", "ObjType"], [8, 1, 1, "", "Tree"]], "pynodes.scene.Key": [[8, 4, 1, "", "__eq__"], [8, 4, 1, "", "__hash__"]], "pynodes.scene.Mat": [[8, 3, 1, "", "slots"]], "pynodes.scene.Mod": [[8, 3, 1, "", "bevel"], [8, 3, 1, "", "decimate"], [8, 3, 1, "", "geometry_nodes"], [8, 3, 1, "", "smooth"], [8, 3, 1, "", "subdivision"]], "pynodes.scene.O": [[8, 3, 1, "", "bezier_curve"], [8, 3, 1, "", "circle"], [8, 3, 1, "", "cone"], [8, 3, 1, "", "cube"], [8, 3, 1, "", "empty_sphere"], [8, 3, 1, "", "ico_sphere"], [8, 3, 1, "", "mesh"], [8, 3, 1, "", "monkey"], [8, 3, 1, "", "nurbs_path"], [8, 3, 1, "", "plane"]], "pynodes.scene.ObjType": [[8, 4, 1, "", "__matmul__"]], "pynodes.scene.Tree": [[8, 4, 1, "", "__getitem__"], [8, 4, 1, "", "load"], [8, 4, 1, "", "parse_mat_slots"], [8, 4, 1, "", "parse_modifier"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:attribute", "4": "py:method", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"api": [0, 1, 2, 3, 4, 5, 6, 7, 8], "refer": 0, "pynod": [1, 2, 3, 4, 5, 6, 7, 8, 29], "submodul": 1, "packag": 1, "content": [1, 2, 3, 4, 5, 6, 7, 8, 29], "function": [1, 2, 3, 4, 5, 6, 7], "data": [1, 3, 4], "addon": [2, 30], "modul": [2, 3, 4, 5, 6, 7, 8, 29], "class": [2, 4, 5, 6, 8], "color": [3, 26, 27], "core": 4, "datasock": 5, "path": [5, 6], "output": [5, 6, 7], "properti": [5, 6], "geosock": 6, "node": [7, 10, 25, 30], "input": 7, "scene": [8, 30], "arrow": 11, "model": 11, "arrow_coord": 11, "coord_correct": 11, "arrow_model": 11, "materi": [11, 19, 23, 27, 30], "atom": 12, "link": [12, 20], "sweep_mesh_edg": 12, "link_mesh_atom": 12, "clone": 13, "mesh": [13, 15, 16, 21, 30], "face": 13, "clone_cones_to_mesh_fac": 13, "fractal": 14, "geometri": [10, 14], "sierpinski": 14, "triangl": 14, "3d": 14, "menger": 14, "spong": 14, "pythagora": 14, "tree": [14, 30], "pythagoras_tre": 14, "transit": 15, "test": 15, "surfac": 16, "maze": 16, "mesh_to_maz": 16, "m\u00f6biu": 17, "band": 17, "extrude_fac": 17, "curve_to_mesh": 17, "m\u00f6bius_band": 17, "n": 18, "th": 18, "b\u00e9zier": 18, "theori": 18, "curv": [18, 23, 30], "implement": [18, 22, 30], "illustr": [18, 19], "polar": 19, "coordin": 19, "concentr": 19, "circl": 19, "concentric_circl": 19, "axi": 19, "slice": 19, "axis_slic": 19, "angl": 19, "spiral": 19, "angle_spir": 19, "text": [19, 21], "coord": [19, 23, 30], "radial_coord_text": 19, "line": 19, "from": [19, 30], "origin": 19, "dot": 19, "line_from_origin_to_dot": 19, "dot_with_coord_text": 19, "The": [19, 30], "result": 19, "polar_coordin": 19, "small": 20, "demo": 20, "fly": 20, "dust": 20, "vertic": 20, "recurs": 20, "subdivid": 20, "random_subdivide_iter": 20, "random_subdivid": 20, "exampl": [21, 26, 30], "volum": 21, "water": 24, "wave": 24, "wave_coord": 24, "grid_vertex_select": 24, "water_wav": 24, "galleri": 9, "toru": [23, 30], "knot": [23, 30], "version": [23, 30], "home": 29, "about": [29, 30], "birth": 29, "thi": 29, "prerequis": 29, "befor": 29, "us": 29, "you": 29, "must": 29, "first": [29, 30], "know": 29, "baci": 29, "concept": 29, "quick": 30, "start": 30, "instal": 30, "download": 30, "latest": 30, "releas": 30, "zip": 30, "file": [26, 30], "github": 30, "blender": 30, "setup": 30, "vscode": 30, "A": 30, "target": 30, "parametr": 30, "equat": 30, "second": 30, "default": 30, "valu": 30, "paramet": 30, "logic": 30, "third": 30, "manag": 30, "avail": 31, "socket": 31, "type": 31, "tile": 22, "patern": 22, "truchet": 22, "base": 22, "toon": 27, "shader": [25, 26, 27, 28], "inner_faces_shad": 27, "inner_faces_shader_with_hol": 27, "ramped_diffuse_color": 27, "grandient_color": 27, "toon_gradi": 27, "toon_inn": 27, "set": [26, 27], "enabl": 27, "decor": 27, "osl": 26, "render": 26, "engin": 26, "load": 26, "ol": 26, "defin": 26, "castiron_cov": 26, "checker_board": 26, "color_rang": 26, "other": 26, "world": 28, "support": 26}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "pynodes": [[1, "module-pynodes"]], "Submodules": [[1, "submodules"]], "Package Contents": [[1, "package-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"]], "Data": [[1, "data"], [3, "data"], [4, "data"]], "API": [[1, "api"], [2, "api"], [3, "api"], [4, "api"], [5, "api"], [6, "api"], [7, "api"], [8, "api"]], "pynodes.addon": [[2, "module-pynodes.addon"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"]], "Classes": [[2, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"]], "pynodes.colors": [[3, "module-pynodes.colors"]], "pynodes.core": [[4, "module-pynodes.core"]], "pynodes.datasocks": [[5, "module-pynodes.datasocks"]], "Path": [[5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"], [6, "path"]], "Outputs:": [[5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [6, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"]], "Properties:": [[5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [6, "properties"], [6, "properties"]], "Properties": [[5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"], [6, "properties"]], "pynodes.geosocks": [[6, "module-pynodes.geosocks"]], "pynodes.nodes": [[7, "module-pynodes.nodes"]], "Inputs:": [[7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"]], "pynodes.scene": [[8, "module-pynodes.scene"]], "Gallery": [[9, "gallery"]], "Geometry Nodes": [[10, "geometry-nodes"]], "Arrow modeling": [[11, "arrow-modeling"]], "arrow_coord": [[11, null]], "coord_correction": [[11, null]], "arrow_modeling": [[11, null]], "Arrow materials": [[11, null]], "Atom Links": [[12, "atom-links"]], "sweep_mesh_edges": [[12, null]], "link_mesh_atoms": [[12, null]], "Clone to Mesh Faces": [[13, "clone-to-mesh-faces"]], "clone_cones_to_mesh_faces": [[13, null]], "Fractals Geometry": [[14, "fractals-geometry"]], "Sierpinski Triangle 3D": [[14, "sierpinski-triangle-3d"]], "Sierpinski Triangle": [[14, null]], "Menger Sponge": [[14, "menger-sponge"], [14, null]], "Pythagoras Tree": [[14, "pythagoras-tree"]], "pythagoras_tree": [[14, null]], "Mesh Transition": [[15, "mesh-transition"], [15, null]], "Mesh Transition Test": [[15, null]], "Mesh Surface to Maze": [[16, "mesh-surface-to-maze"]], "mesh_to_maze": [[16, null]], "M\u00f6bius Band": [[17, "mobius-band"]], "extrude_faces": [[17, null]], "curve_to_mesh": [[17, null]], "m\u00f6bius_band": [[17, null]], "N-th B\u00e9zier": [[18, "n-th-bezier"]], "Theory of B\u00e9zier Curve": [[18, "theory-of-bezier-curve"]], "Implementation": [[18, "implementation"], [22, "implementation"]], "B\u00e9zier Curve Illustration": [[18, null]], "Polar Coordinate Illustrating": [[19, "polar-coordinate-illustrating"]], "Concentric Circles": [[19, "concentric-circles"]], "concentric_circles": [[19, null]], "Axis Slices": [[19, "axis-slices"]], "axis_slices": [[19, null]], "Angle Spiral": [[19, "angle-spiral"]], "angle_spiral": [[19, null]], "Text of Polar Coord": [[19, "text-of-polar-coord"]], "radial_coord_text": [[19, null]], "Line from origin to dot": [[19, "line-from-origin-to-dot"]], "line_from_origin_to_dot": [[19, null]], "Dot with Coord Text": [[19, "dot-with-coord-text"]], "dot_with_coord_text": [[19, null]], "Materials": [[19, "materials"], [19, null]], "The Result Illustration": [[19, "the-result-illustration"]], "polar_coordinates": [[19, null]], "Small Demos": [[20, "small-demos"]], "Flying Dust": [[20, "flying-dust"]], "Dust": [[20, null]], "Link Vertices": [[20, "link-vertices"], [20, null]], "Recursive Subdivide": [[20, "recursive-subdivide"]], "random_subdivide_iterate": [[20, null]], "random_subdivide": [[20, null]], "Text Examples": [[21, "text-examples"]], "Text Volume Mesh": [[21, "text-volume-mesh"], [21, null]], "Tiling Paterns": [[22, "tiling-paterns"]], "Truchet Tiling": [[22, "truchet-tiling"], [22, null]], "Base Tile": [[22, null]], "Torus Knot": [[23, "torus-knot"]], "Torus Knot Coord": [[23, null], [30, null]], "Torus Knot Curve": [[23, null], [30, null]], "Version with material": [[23, null], [30, "version-with-material"], [30, null]], "Water Wave": [[24, "water-wave"]], "wave_coord": [[24, null]], "grid_vertex_select": [[24, null]], "water_wave": [[24, null]], "Shader Nodes": [[25, "shader-nodes"]], "OSL Shader": [[26, "osl-shader"]], "Color Setting": [[26, "color-setting"], [27, "color-setting"]], "Render Engine": [[26, "render-engine"]], "OSL Support": [[26, "osl-support"]], "Load ols files": [[26, "load-ols-files"]], "Define Shaders": [[26, "define-shaders"]], "castiron_cover": [[26, null]], "checker_board": [[26, null]], "color_range": [[26, null]], "Other examples": [[26, null]], "Toon Shader": [[27, "toon-shader"]], "inner_faces_shader": [[27, "inner-faces-shader"]], "Shader: inner_faces_shader": [[27, null]], "inner_faces_shader_with_hole": [[27, "inner-faces-shader-with-hole"]], "Shader: inner_faces_shader_with_hole": [[27, null]], "ramped_diffuse_color": [[27, "ramped-diffuse-color"]], "Shader: ramped_diffuse_color": [[27, null]], "Enable Color Decorator": [[27, "enable-color-decorator"]], "grandient_color": [[27, "grandient-color"]], "Shader: grandient_color": [[27, null]], "Material: toon": [[27, "material-toon"], [27, null]], "Material: toon_gradient": [[27, "material-toon-gradient"], [27, null]], "Material: toon_inner": [[27, "material-toon-inner"], [27, null]], "World Shader": [[28, "world-shader"]], "Home": [[29, "home"]], "About the birth of this module": [[29, "about-the-birth-of-this-module"]], "Prerequisities": [[29, "prerequisities"]], "Before using pynodes, you must first know:": [[29, null]], "Bacis Concepts": [[29, "bacis-concepts"]], "Content": [[29, "content"]], "Quick Start": [[30, "quick-start"]], "Install Addon": [[30, "install-addon"]], "Download the latest released zip file from github": [[30, null]], "Install the addon in blender": [[30, null]], "Setup VSCode": [[30, "setup-vscode"]], "A Quick Example": [[30, "a-quick-example"]], "Target": [[30, null]], "Parametric Equation": [[30, "parametric-equation"]], "The First Node Tree": [[30, "the-first-node-tree"]], "The Second Node Tree": [[30, "the-second-node-tree"]], "Default value of parameter": [[30, null]], "About implementation logic": [[30, null]], "The Third Node Tree": [[30, "the-third-node-tree"]], "Torus Knot Mesh": [[30, null]], "Scene Management": [[30, "scene-management"]], "Available Socket Types": [[31, "available-socket-types"]]}, "indexentries": {"bl_info (in module pynodes)": [[1, "pynodes.bl_info"]], "module": [[1, "module-pynodes"], [2, "module-pynodes.addon"], [3, "module-pynodes.colors"], [4, "module-pynodes.core"], [5, "module-pynodes.datasocks"], [6, "module-pynodes.geosocks"], [7, "module-pynodes.nodes"], [8, "module-pynodes.scene"]], "pynodes": [[1, "module-pynodes"]], "register() (in module pynodes)": [[1, "pynodes.register"]], "unregister() (in module pynodes)": [[1, "pynodes.unregister"]], "column (class in pynodes.addon)": [[2, "pynodes.addon.Column"]], "pynodes_ot_arrange (class in pynodes.addon)": [[2, "pynodes.addon.PYNODES_OT_ARRANGE"]], "pynodes_ot_purge (class in pynodes.addon)": [[2, "pynodes.addon.PYNODES_OT_PURGE"]], "pynodes_pt_main (class in pynodes.addon)": [[2, "pynodes.addon.PYNODES_PT_MAIN"]], "arrange() (in module pynodes.addon)": [[2, "pynodes.addon.arrange"]], "arrange_tree() (in module pynodes.addon)": [[2, "pynodes.addon.arrange_tree"]], "bl_category (pynodes.addon.pynodes_pt_main attribute)": [[2, "pynodes.addon.PYNODES_PT_MAIN.bl_category"]], "bl_idname (pynodes.addon.pynodes_ot_arrange attribute)": [[2, "pynodes.addon.PYNODES_OT_ARRANGE.bl_idname"]], "bl_idname (pynodes.addon.pynodes_ot_purge attribute)": [[2, "pynodes.addon.PYNODES_OT_PURGE.bl_idname"]], "bl_label (pynodes.addon.pynodes_ot_arrange attribute)": [[2, "pynodes.addon.PYNODES_OT_ARRANGE.bl_label"]], "bl_label (pynodes.addon.pynodes_ot_purge attribute)": [[2, "pynodes.addon.PYNODES_OT_PURGE.bl_label"]], "bl_label (pynodes.addon.pynodes_pt_main attribute)": [[2, "pynodes.addon.PYNODES_PT_MAIN.bl_label"]], "bl_region_type (pynodes.addon.pynodes_pt_main attribute)": [[2, "pynodes.addon.PYNODES_PT_MAIN.bl_region_type"]], "bl_space_type (pynodes.addon.pynodes_pt_main attribute)": [[2, "pynodes.addon.PYNODES_PT_MAIN.bl_space_type"]], "draw() (pynodes.addon.pynodes_pt_main method)": [[2, "pynodes.addon.PYNODES_PT_MAIN.draw"]], "execute() (pynodes.addon.pynodes_ot_arrange method)": [[2, "pynodes.addon.PYNODES_OT_ARRANGE.execute"]], "execute() (pynodes.addon.pynodes_ot_purge method)": [[2, "pynodes.addon.PYNODES_OT_PURGE.execute"]], "get_active_tree() (in module pynodes.addon)": [[2, "pynodes.addon.get_active_tree"]], "height_with_offset (pynodes.addon.column property)": [[2, "pynodes.addon.Column.height_with_offset"]], "invoke() (pynodes.addon.pynodes_ot_arrange method)": [[2, "pynodes.addon.PYNODES_OT_ARRANGE.invoke"]], "is_frame() (in module pynodes.addon)": [[2, "pynodes.addon.is_frame"]], "is_linked_input() (in module pynodes.addon)": [[2, "pynodes.addon.is_linked_input"]], "is_linked_output() (in module pynodes.addon)": [[2, "pynodes.addon.is_linked_output"]], "match_frame_node() (in module pynodes.addon)": [[2, "pynodes.addon.match_frame_node"]], "poll() (pynodes.addon.pynodes_ot_arrange class method)": [[2, "pynodes.addon.PYNODES_OT_ARRANGE.poll"]], "pynodes.addon": [[2, "module-pynodes.addon"]], "register() (in module pynodes.addon)": [[2, "pynodes.addon.register"]], "unregister() (in module pynodes.addon)": [[2, "pynodes.addon.unregister"]], "azure (in module pynodes.colors)": [[3, "pynodes.colors.azure"]], "black (in module pynodes.colors)": [[3, "pynodes.colors.black"]], "blue (in module pynodes.colors)": [[3, "pynodes.colors.blue"]], "color_palettes (in module pynodes.colors)": [[3, "pynodes.colors.color_palettes"]], "color_tuple() (in module pynodes.colors)": [[3, "pynodes.colors.color_tuple"]], "convert_srgb_to_linear_rgb() (in module pynodes.colors)": [[3, "pynodes.colors.convert_srgb_to_linear_rgb"]], "cyan (in module pynodes.colors)": [[3, "pynodes.colors.cyan"]], "dark_azure (in module pynodes.colors)": [[3, "pynodes.colors.dark_azure"]], "dark_blue (in module pynodes.colors)": [[3, "pynodes.colors.dark_blue"]], "dark_cyan (in module pynodes.colors)": [[3, "pynodes.colors.dark_cyan"]], "dark_gray (in module pynodes.colors)": [[3, "pynodes.colors.dark_gray"]], "dark_green (in module pynodes.colors)": [[3, "pynodes.colors.dark_green"]], "dark_lime (in module pynodes.colors)": [[3, "pynodes.colors.dark_lime"]], "dark_magenta (in module pynodes.colors)": [[3, "pynodes.colors.dark_magenta"]], "dark_olive (in module pynodes.colors)": [[3, "pynodes.colors.dark_olive"]], "dark_orange (in module pynodes.colors)": [[3, "pynodes.colors.dark_orange"]], "dark_red (in module pynodes.colors)": [[3, "pynodes.colors.dark_red"]], "dark_rose (in module pynodes.colors)": [[3, "pynodes.colors.dark_rose"]], "dark_violet (in module pynodes.colors)": [[3, "pynodes.colors.dark_violet"]], "dark_yellow (in module pynodes.colors)": [[3, "pynodes.colors.dark_yellow"]], "gray (in module pynodes.colors)": [[3, "pynodes.colors.gray"]], "green (in module pynodes.colors)": [[3, "pynodes.colors.green"]], "hex_color_to_rgb() (in module pynodes.colors)": [[3, "pynodes.colors.hex_color_to_rgb"]], "hex_color_to_rgba() (in module pynodes.colors)": [[3, "pynodes.colors.hex_color_to_rgba"]], "light_azure (in module pynodes.colors)": [[3, "pynodes.colors.light_azure"]], "light_blue (in module pynodes.colors)": [[3, "pynodes.colors.light_blue"]], "light_cyan (in module pynodes.colors)": [[3, "pynodes.colors.light_cyan"]], "light_gray (in module pynodes.colors)": [[3, "pynodes.colors.light_gray"]], "light_green (in module pynodes.colors)": [[3, "pynodes.colors.light_green"]], "light_lime (in module pynodes.colors)": [[3, "pynodes.colors.light_lime"]], "light_magenta (in module pynodes.colors)": [[3, "pynodes.colors.light_magenta"]], "light_olive (in module pynodes.colors)": [[3, "pynodes.colors.light_olive"]], "light_orange (in module pynodes.colors)": [[3, "pynodes.colors.light_orange"]], "light_red (in module pynodes.colors)": [[3, "pynodes.colors.light_red"]], "light_rose (in module pynodes.colors)": [[3, "pynodes.colors.light_rose"]], "light_violet (in module pynodes.colors)": [[3, "pynodes.colors.light_violet"]], "light_yellow (in module pynodes.colors)": [[3, "pynodes.colors.light_yellow"]], "lime (in module pynodes.colors)": [[3, "pynodes.colors.lime"]], "magenta (in module pynodes.colors)": [[3, "pynodes.colors.magenta"]], "mid_azure (in module pynodes.colors)": [[3, "pynodes.colors.mid_azure"]], "mid_blue (in module pynodes.colors)": [[3, "pynodes.colors.mid_blue"]], "mid_cyan (in module pynodes.colors)": [[3, "pynodes.colors.mid_cyan"]], "mid_green (in module pynodes.colors)": [[3, "pynodes.colors.mid_green"]], "mid_lime (in module pynodes.colors)": [[3, "pynodes.colors.mid_lime"]], "mid_magenta (in module pynodes.colors)": [[3, "pynodes.colors.mid_magenta"]], "mid_olive (in module pynodes.colors)": [[3, "pynodes.colors.mid_olive"]], "mid_orange (in module pynodes.colors)": [[3, "pynodes.colors.mid_orange"]], "mid_red (in module pynodes.colors)": [[3, "pynodes.colors.mid_red"]], "mid_rose (in module pynodes.colors)": [[3, "pynodes.colors.mid_rose"]], "mid_violet (in module pynodes.colors)": [[3, "pynodes.colors.mid_violet"]], "mid_yellow (in module pynodes.colors)": [[3, "pynodes.colors.mid_yellow"]], "olive (in module pynodes.colors)": [[3, "pynodes.colors.olive"]], "orange (in module pynodes.colors)": [[3, "pynodes.colors.orange"]], "pynodes.colors": [[3, "module-pynodes.colors"]], "red (in module pynodes.colors)": [[3, "pynodes.colors.red"]], "rgb() (in module pynodes.colors)": [[3, "pynodes.colors.rgb"]], "rgba() (in module pynodes.colors)": [[3, "pynodes.colors.rgba"]], "rose (in module pynodes.colors)": [[3, "pynodes.colors.rose"]], "silver (in module pynodes.colors)": [[3, "pynodes.colors.silver"]], "violet (in module pynodes.colors)": [[3, "pynodes.colors.violet"]], "white (in module pynodes.colors)": [[3, "pynodes.colors.white"]], "yellow (in module pynodes.colors)": [[3, "pynodes.colors.yellow"]], "angle (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Angle"]], "boolean (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Boolean"]], "collection (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Collection"]], "color (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Color"]], "curve (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Curve"]], "distance (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Distance"]], "factor (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Factor"]], "float (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Float"]], "floattime (pynodes.core.socket property)": [[4, "pynodes.core.Socket.FloatTime"]], "floattimeabsolute (pynodes.core.socket property)": [[4, "pynodes.core.Socket.FloatTimeAbsolute"]], "frame (class in pynodes.core)": [[4, "pynodes.core.Frame"]], "geometry (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Geometry"]], "group (class in pynodes.core)": [[4, "pynodes.core.Group"]], "image (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Image"]], "input() (pynodes.core.socket class method)": [[4, "pynodes.core.Socket.Input"]], "instances (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Instances"]], "intfactor (pynodes.core.socket property)": [[4, "pynodes.core.Socket.IntFactor"]], "intpercentage (pynodes.core.socket property)": [[4, "pynodes.core.Socket.IntPercentage"]], "intunsigned (pynodes.core.socket property)": [[4, "pynodes.core.Socket.IntUnsigned"]], "integer (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Integer"]], "material (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Material"]], "mesh (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Mesh"]], "nodewraper (class in pynodes.core)": [[4, "pynodes.core.NodeWraper"]], "object (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Object"]], "param (in module pynodes.core)": [[4, "pynodes.core.Param"]], "percentage (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Percentage"]], "points (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Points"]], "rt (in module pynodes.core)": [[4, "pynodes.core.RT"]], "script (class in pynodes.core)": [[4, "pynodes.core.Script"]], "shader (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Shader"]], "simulationinput (class in pynodes.core)": [[4, "pynodes.core.SimulationInput"]], "simulationoutput (class in pynodes.core)": [[4, "pynodes.core.SimulationOutput"]], "simulationzone (class in pynodes.core)": [[4, "pynodes.core.SimulationZone"]], "socket (class in pynodes.core)": [[4, "pynodes.core.Socket"]], "socketwraper (class in pynodes.core)": [[4, "pynodes.core.SocketWraper"]], "string (pynodes.core.socket property)": [[4, "pynodes.core.Socket.String"]], "texture (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Texture"]], "tree (class in pynodes.core)": [[4, "pynodes.core.Tree"]], "unsigned (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Unsigned"]], "vector (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Vector"]], "vectoracceleration (pynodes.core.socket property)": [[4, "pynodes.core.Socket.VectorAcceleration"]], "vectordirection (pynodes.core.socket property)": [[4, "pynodes.core.Socket.VectorDirection"]], "vectoreuler (pynodes.core.socket property)": [[4, "pynodes.core.Socket.VectorEuler"]], "vectortranslation (pynodes.core.socket property)": [[4, "pynodes.core.Socket.VectorTranslation"]], "vectorvelocity (pynodes.core.socket property)": [[4, "pynodes.core.Socket.VectorVelocity"]], "vectorxyz (pynodes.core.socket property)": [[4, "pynodes.core.Socket.VectorXYZ"]], "volume (pynodes.core.socket property)": [[4, "pynodes.core.Socket.Volume"]], "__call__() (pynodes.core.group method)": [[4, "pynodes.core.Group.__call__"]], "__call__() (pynodes.core.socket method)": [[4, "pynodes.core.Socket.__call__"]], "__getitem__() (pynodes.core.group method)": [[4, "pynodes.core.Group.__getitem__"]], "__getitem__() (pynodes.core.script method)": [[4, "pynodes.core.Script.__getitem__"]], "__setitem__() (pynodes.core.group method)": [[4, "pynodes.core.Group.__setitem__"]], "__setitem__() (pynodes.core.nodewraper method)": [[4, "pynodes.core.NodeWraper.__setitem__"]], "__setitem__() (pynodes.core.script method)": [[4, "pynodes.core.Script.__setitem__"]], "__setitem__() (pynodes.core.socket method)": [[4, "pynodes.core.Socket.__setitem__"]], "bl_idname (pynodes.core.frame attribute)": [[4, "pynodes.core.Frame.bl_idname"]], "bl_idname (pynodes.core.script attribute)": [[4, "pynodes.core.Script.bl_idname"]], "bl_idname (pynodes.core.simulationinput attribute)": [[4, "pynodes.core.SimulationInput.bl_idname"]], "bl_idname (pynodes.core.simulationoutput attribute)": [[4, "pynodes.core.SimulationOutput.bl_idname"]], "bl_idname (pynodes.core.socket attribute)": [[4, "pynodes.core.Socket.bl_idname"]], "color (pynodes.core.nodewraper property)": [[4, "pynodes.core.NodeWraper.color"]], "color (pynodes.core.script property)": [[4, "pynodes.core.Script.color"]], "convert_param_name() (in module pynodes.core)": [[4, "pynodes.core.convert_param_name"]], "cur_frame (pynodes.core.tree property)": [[4, "pynodes.core.Tree.cur_frame"]], "default_value (pynodes.core.socketwraper property)": [[4, "pynodes.core.SocketWraper.default_value"]], "delta_time (pynodes.core.simulationinput property)": [[4, "pynodes.core.SimulationInput.delta_time"]], "delta_time (pynodes.core.simulationzone property)": [[4, "pynodes.core.SimulationZone.delta_time"]], "dispath_tree() (in module pynodes.core)": [[4, "pynodes.core.dispath_tree"]], "fac (pynodes.core.script property)": [[4, "pynodes.core.Script.fac"]], "frame() (in module pynodes.core)": [[4, "pynodes.core.frame"]], "frame() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.frame"]], "func_ret_to_tree_output() (pynodes.core.socket method)": [[4, "pynodes.core.Socket.func_ret_to_tree_output"]], "get_param_name() (in module pynodes.core)": [[4, "pynodes.core.get_param_name"]], "group_input_node (pynodes.core.tree property)": [[4, "pynodes.core.Tree.group_input_node"]], "group_output_node (pynodes.core.tree property)": [[4, "pynodes.core.Tree.group_output_node"]], "height (pynodes.core.script property)": [[4, "pynodes.core.Script.height"]], "inputs (pynodes.core.nodewraper property)": [[4, "pynodes.core.NodeWraper.inputs"]], "is_embedded (pynodes.core.tree property)": [[4, "pynodes.core.Tree.is_embedded"]], "label (pynodes.core.nodewraper property)": [[4, "pynodes.core.NodeWraper.label"]], "link_from() (pynodes.core.simulationoutput method)": [[4, "pynodes.core.SimulationOutput.link_from"]], "link_tree_output() (pynodes.core.socket method)": [[4, "pynodes.core.Socket.link_tree_output"]], "linked_to_group_output (pynodes.core.socket property)": [[4, "pynodes.core.Socket.linked_to_group_output"]], "name (pynodes.core.socket property)": [[4, "pynodes.core.Socket.name"]], "new_group_node() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.new_group_node"]], "new_input() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.new_input"]], "new_link() (in module pynodes.core)": [[4, "pynodes.core.new_link"]], "new_link() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.new_link"]], "new_node() (in module pynodes.core)": [[4, "pynodes.core.new_node"]], "new_node() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.new_node"]], "new_output() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.new_output"]], "node (pynodes.core.socket property)": [[4, "pynodes.core.Socket.node"]], "outputs (pynodes.core.nodewraper property)": [[4, "pynodes.core.NodeWraper.outputs"]], "plug_inputs() (pynodes.core.nodewraper method)": [[4, "pynodes.core.NodeWraper.plug_inputs"]], "pynodes.core": [[4, "module-pynodes.core"]], "reload() (in module pynodes.core)": [[4, "pynodes.core.reload"]], "remove_orphan_input_node() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.remove_orphan_input_node"]], "simulate() (in module pynodes.core)": [[4, "pynodes.core.simulate"]], "simulate() (pynodes.core.tree method)": [[4, "pynodes.core.Tree.simulate"]], "to_ouput() (pynodes.core.simulationzone method)": [[4, "pynodes.core.SimulationZone.to_ouput"]], "to_ouputs() (pynodes.core.simulationzone method)": [[4, "pynodes.core.SimulationZone.to_ouputs"]], "tree (pynodes.core.tree attribute)": [[4, "pynodes.core.Tree.tree"]], "tree() (in module pynodes.core)": [[4, "pynodes.core.tree"]], "tree_output_node (pynodes.core.tree property)": [[4, "pynodes.core.Tree.tree_output_node"]], "update_modifier() (in module pynodes.core)": [[4, "pynodes.core.update_modifier"]], "vector (pynodes.core.script property)": [[4, "pynodes.core.Script.vector"]], "ambientocclusion() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.AmbientOcclusion"]], "angle (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Angle"]], "anisotropic() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Anisotropic"]], "bsdf (class in pynodes.datasocks)": [[5, "pynodes.datasocks.BSDF"]], "background() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.Background"]], "boolean (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Boolean"]], "booleanmath() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.BooleanMath"]], "bricktexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.BrickTexture"]], "brightcontrast() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.BrightContrast"]], "checkertexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.CheckerTexture"]], "collection (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Collection"]], "collectioninfo() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.CollectionInfo"]], "color (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Color"]], "colorgamma() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ColorGamma"]], "colorramp() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ColorRamp"]], "combinecolor() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.CombineColor"]], "combinexyz() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.CombineXYZ"]], "compare() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.Compare"]], "diffuse() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Diffuse"]], "distance (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Distance"]], "emission() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.Emission"]], "environmenttexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.EnvironmentTexture"]], "factor (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Factor"]], "float (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Float"]], "floatmath() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.FloatMath"]], "floattime (class in pynodes.datasocks)": [[5, "pynodes.datasocks.FloatTime"]], "floattimeabsolute (class in pynodes.datasocks)": [[5, "pynodes.datasocks.FloatTimeAbsolute"]], "geometrynodeviewer() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.GeometryNodeViewer"]], "glass() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Glass"]], "glossy() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Glossy"]], "gradienttexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.GradientTexture"]], "hair() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Hair"]], "hairprincipled() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.HairPrincipled"]], "holdout() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.Holdout"]], "huesaturation() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.HueSaturation"]], "ies_texture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.IES_Texture"]], "image (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Image"]], "imageinfo() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ImageInfo"]], "imagetexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ImageTexture"]], "imagetexturegeo() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ImageTextureGeo"]], "inputbool() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputBool"]], "inputcolor() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputColor"]], "inputfloat() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputFloat"]], "inputimage() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputImage"]], "inputindex() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputIndex"]], "inputinteger() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputInteger"]], "inputmaterial() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputMaterial"]], "inputposition() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputPosition"]], "inputrgb() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputRGB"]], "inputstring() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputString"]], "inputvalue() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputValue"]], "inputvector() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.InputVector"]], "intfactor (class in pynodes.datasocks)": [[5, "pynodes.datasocks.IntFactor"]], "intpercentage (class in pynodes.datasocks)": [[5, "pynodes.datasocks.IntPercentage"]], "intunsigned (class in pynodes.datasocks)": [[5, "pynodes.datasocks.IntUnsigned"]], "integer (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Integer"]], "isviewport() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.IsViewport"]], "lightfalloff() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.LightFalloff"]], "magictexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.MagicTexture"]], "material (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Material"]], "mixcolor() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.MixColor"]], "mixfloat() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.MixFloat"]], "mixshader() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.MixShader"]], "mixvector() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.MixVector"]], "musgravetexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.MusgraveTexture"]], "noisetexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.NoiseTexture"]], "object (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Object"]], "objectinfo() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ObjectInfo"]], "percentage (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Percentage"]], "pointdensity() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.PointDensity"]], "principled() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Principled"]], "randomboolean() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.RandomBoolean"]], "randomfloat() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.RandomFloat"]], "randominteger() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.RandomInteger"]], "randomvector() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.RandomVector"]], "refraction() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Refraction"]], "scenetime() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.SceneTime"]], "selfobject() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.SelfObject"]], "separatecolor() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.SeparateColor"]], "shader (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Shader"]], "shadergeometry() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderGeometry"]], "shadernodeblackbody() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeBlackbody"]], "shadernodebump() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeBump"]], "shadernodecombinecolor() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeCombineColor"]], "shadernodedisplacement() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeDisplacement"]], "shadernodemapping() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeMapping"]], "shadernodenormal() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeNormal"]], "shadernodenormalmap() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeNormalMap"]], "shadernodergbcurve() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeRGBCurve"]], "shadernodergbtobw() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeRGBToBW"]], "shadernodeseparatecolor() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeSeparateColor"]], "shadernodevectordisplacement() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeVectorDisplacement"]], "shadernodevectortransform() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeVectorTransform"]], "shadernodewavelength() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderNodeWavelength"]], "shaderscript() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ShaderScript"]], "skytexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.SkyTexture"]], "specular() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Specular"]], "string (class in pynodes.datasocks)": [[5, "pynodes.datasocks.String"]], "stringtocurves() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.StringToCurves"]], "subsurfacescattering() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.SubsurfaceScattering"]], "switch() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.Switch"]], "texture (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Texture"]], "texturecoord() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.TextureCoord"]], "toon() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Toon"]], "translucent() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Translucent"]], "transparent() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Transparent"]], "unsigned (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Unsigned"]], "vector (class in pynodes.datasocks)": [[5, "pynodes.datasocks.Vector"]], "vectoracceleration (class in pynodes.datasocks)": [[5, "pynodes.datasocks.VectorAcceleration"]], "vectordirection (class in pynodes.datasocks)": [[5, "pynodes.datasocks.VectorDirection"]], "vectoreuler (class in pynodes.datasocks)": [[5, "pynodes.datasocks.VectorEuler"]], "vectormath() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.VectorMath"]], "vectortranslation (class in pynodes.datasocks)": [[5, "pynodes.datasocks.VectorTranslation"]], "vectorvelocity (class in pynodes.datasocks)": [[5, "pynodes.datasocks.VectorVelocity"]], "vectorxyz (class in pynodes.datasocks)": [[5, "pynodes.datasocks.VectorXYZ"]], "velvet() (pynodes.datasocks.bsdf static method)": [[5, "pynodes.datasocks.BSDF.Velvet"]], "viewboolean() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ViewBoolean"]], "viewcolor() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ViewColor"]], "viewfloat() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ViewFloat"]], "viewinteger() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ViewInteger"]], "viewvector() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.ViewVector"]], "volumeabsorption() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.VolumeAbsorption"]], "volumeprincipled() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.VolumePrincipled"]], "volumescatter() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.VolumeScatter"]], "voronoitexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.VoronoiTexture"]], "wavetexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.WaveTexture"]], "wavetexturebands() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.WaveTextureBands"]], "wavetexturerings() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.WaveTextureRings"]], "whitenoisetexture() (in module pynodes.datasocks)": [[5, "pynodes.datasocks.WhiteNoiseTexture"]], "__abs__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__abs__"]], "__abs__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__abs__"]], "__add__() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.__add__"]], "__add__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__add__"]], "__add__() (pynodes.datasocks.shader method)": [[5, "pynodes.datasocks.Shader.__add__"]], "__add__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__add__"]], "__and__() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.__and__"]], "__ceil__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__ceil__"]], "__ceil__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__ceil__"]], "__eq__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__eq__"]], "__eq__() (pynodes.datasocks.integer method)": [[5, "pynodes.datasocks.Integer.__eq__"]], "__floor__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__floor__"]], "__floor__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__floor__"]], "__ge__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__ge__"]], "__ge__() (pynodes.datasocks.integer method)": [[5, "pynodes.datasocks.Integer.__ge__"]], "__gt__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__gt__"]], "__gt__() (pynodes.datasocks.integer method)": [[5, "pynodes.datasocks.Integer.__gt__"]], "__invert__() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.__invert__"]], "__le__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__le__"]], "__le__() (pynodes.datasocks.integer method)": [[5, "pynodes.datasocks.Integer.__le__"]], "__lt__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__lt__"]], "__lt__() (pynodes.datasocks.integer method)": [[5, "pynodes.datasocks.Integer.__lt__"]], "__mod__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__mod__"]], "__mod__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__mod__"]], "__mul__() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.__mul__"]], "__mul__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__mul__"]], "__mul__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__mul__"]], "__ne__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__ne__"]], "__ne__() (pynodes.datasocks.integer method)": [[5, "pynodes.datasocks.Integer.__ne__"]], "__neg__() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.__neg__"]], "__neg__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__neg__"]], "__neg__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__neg__"]], "__or__() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.__or__"]], "__pow__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__pow__"]], "__radd__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__radd__"]], "__radd__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__radd__"]], "__rmul__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__rmul__"]], "__round__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__round__"]], "__rsub__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__rsub__"]], "__rsub__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__rsub__"]], "__rtruediv__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__rtruediv__"]], "__sub__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__sub__"]], "__sub__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__sub__"]], "__truediv__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__truediv__"]], "__truediv__() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.__truediv__"]], "__trunc__() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.__trunc__"]], "absolute (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.absolute"]], "absolute() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.absolute"]], "add_shader() (pynodes.datasocks.shader method)": [[5, "pynodes.datasocks.Shader.add_shader"]], "align_euler_to_vector() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.align_euler_to_vector"]], "arccos() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.arccos"]], "arccosine (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.arccosine"]], "arcsin() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.arcsin"]], "arcsine (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.arcsine"]], "arctan() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.arctan"]], "arctan2() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.arctan2"]], "arctangent (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.arctangent"]], "attribute() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.attribute"]], "bevel() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.bevel"]], "bl_idname (pynodes.datasocks.angle attribute)": [[5, "pynodes.datasocks.Angle.bl_idname"]], "bl_idname (pynodes.datasocks.boolean attribute)": [[5, "pynodes.datasocks.Boolean.bl_idname"]], "bl_idname (pynodes.datasocks.collection attribute)": [[5, "pynodes.datasocks.Collection.bl_idname"]], "bl_idname (pynodes.datasocks.color attribute)": [[5, "pynodes.datasocks.Color.bl_idname"]], "bl_idname (pynodes.datasocks.distance attribute)": [[5, "pynodes.datasocks.Distance.bl_idname"]], "bl_idname (pynodes.datasocks.factor attribute)": [[5, "pynodes.datasocks.Factor.bl_idname"]], "bl_idname (pynodes.datasocks.float attribute)": [[5, "pynodes.datasocks.Float.bl_idname"]], "bl_idname (pynodes.datasocks.floattime attribute)": [[5, "pynodes.datasocks.FloatTime.bl_idname"]], "bl_idname (pynodes.datasocks.floattimeabsolute attribute)": [[5, "pynodes.datasocks.FloatTimeAbsolute.bl_idname"]], "bl_idname (pynodes.datasocks.image attribute)": [[5, "pynodes.datasocks.Image.bl_idname"]], "bl_idname (pynodes.datasocks.intfactor attribute)": [[5, "pynodes.datasocks.IntFactor.bl_idname"]], "bl_idname (pynodes.datasocks.intpercentage attribute)": [[5, "pynodes.datasocks.IntPercentage.bl_idname"]], "bl_idname (pynodes.datasocks.intunsigned attribute)": [[5, "pynodes.datasocks.IntUnsigned.bl_idname"]], "bl_idname (pynodes.datasocks.integer attribute)": [[5, "pynodes.datasocks.Integer.bl_idname"]], "bl_idname (pynodes.datasocks.material attribute)": [[5, "pynodes.datasocks.Material.bl_idname"]], "bl_idname (pynodes.datasocks.object attribute)": [[5, "pynodes.datasocks.Object.bl_idname"]], "bl_idname (pynodes.datasocks.percentage attribute)": [[5, "pynodes.datasocks.Percentage.bl_idname"]], "bl_idname (pynodes.datasocks.shader attribute)": [[5, "pynodes.datasocks.Shader.bl_idname"]], "bl_idname (pynodes.datasocks.string attribute)": [[5, "pynodes.datasocks.String.bl_idname"]], "bl_idname (pynodes.datasocks.texture attribute)": [[5, "pynodes.datasocks.Texture.bl_idname"]], "bl_idname (pynodes.datasocks.unsigned attribute)": [[5, "pynodes.datasocks.Unsigned.bl_idname"]], "bl_idname (pynodes.datasocks.vector attribute)": [[5, "pynodes.datasocks.Vector.bl_idname"]], "bl_idname (pynodes.datasocks.vectoracceleration attribute)": [[5, "pynodes.datasocks.VectorAcceleration.bl_idname"]], "bl_idname (pynodes.datasocks.vectordirection attribute)": [[5, "pynodes.datasocks.VectorDirection.bl_idname"]], "bl_idname (pynodes.datasocks.vectoreuler attribute)": [[5, "pynodes.datasocks.VectorEuler.bl_idname"]], "bl_idname (pynodes.datasocks.vectortranslation attribute)": [[5, "pynodes.datasocks.VectorTranslation.bl_idname"]], "bl_idname (pynodes.datasocks.vectorvelocity attribute)": [[5, "pynodes.datasocks.VectorVelocity.bl_idname"]], "bl_idname (pynodes.datasocks.vectorxyz attribute)": [[5, "pynodes.datasocks.VectorXYZ.bl_idname"]], "bright_contrast() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.bright_contrast"]], "camera_data (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.camera_data"]], "ceil (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.ceil"]], "ceil() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.ceil"]], "clamp() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.clamp"]], "color_attribute() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.color_attribute"]], "color_ramp() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.color_ramp"]], "color_ramp_uniform() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.color_ramp_uniform"]], "color_ramp_with_position() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.color_ramp_with_position"]], "compare() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.compare"]], "cos() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.cos"]], "cos() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.cos"]], "cosh() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.cosh"]], "cosine (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.cosine"]], "cross() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.cross"]], "curve() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.curve"]], "degrees (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.degrees"]], "distance() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.distance"]], "dot() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.dot"]], "exponent (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.exponent"]], "faceforward() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.faceforward"]], "false (pynodes.datasocks.boolean property)": [[5, "pynodes.datasocks.Boolean.false"]], "float_curve() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.float_curve"]], "floor (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.floor"]], "floor() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.floor"]], "fract (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.fract"]], "fraction() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.fraction"]], "fresnel() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.fresnel"]], "gamma() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.gamma"]], "geometry (pynodes.datasocks.object property)": [[5, "pynodes.datasocks.Object.geometry"]], "geometry (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.geometry"]], "greater_than() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.greater_than"]], "hair_info (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.hair_info"]], "hue_saturation() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.hue_saturation"]], "hyperbolic_cosine (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.hyperbolic_cosine"]], "hyperbolic_sine (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.hyperbolic_sine"]], "hyperbolic_tangent (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.hyperbolic_tangent"]], "imply() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.imply"]], "index (pynodes.datasocks.material property)": [[5, "pynodes.datasocks.Material.index"]], "inverse_sqrt (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.inverse_sqrt"]], "invert (pynodes.datasocks.boolean property)": [[5, "pynodes.datasocks.Boolean.invert"]], "invert() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.invert"]], "join() (pynodes.datasocks.string method)": [[5, "pynodes.datasocks.String.join"]], "layer_weight() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.layer_weight"]], "length (pynodes.datasocks.string property)": [[5, "pynodes.datasocks.String.length"]], "length (pynodes.datasocks.vector property)": [[5, "pynodes.datasocks.Vector.length"]], "less_than() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.less_than"]], "light_path (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.light_path"]], "line_to() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.line_to"]], "line_towards() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.line_towards"]], "ln (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.ln"]], "location (pynodes.datasocks.object property)": [[5, "pynodes.datasocks.Object.location"]], "log() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.log"]], "log2 (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.log2"]], "map_range() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.map_range"]], "map_range() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.map_range"]], "mapping() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.mapping"]], "material_selection() (pynodes.datasocks.material method)": [[5, "pynodes.datasocks.Material.material_selection"]], "math() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.math"]], "math() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.math"]], "math() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.math"]], "math_and() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.math_and"]], "math_or() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.math_or"]], "maximum() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.maximum"]], "maximum() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.maximum"]], "minimum() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.minimum"]], "minimum() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.minimum"]], "mix() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.mix"]], "mix() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.mix"]], "mix() (pynodes.datasocks.shader method)": [[5, "pynodes.datasocks.Shader.mix"]], "mix() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.mix"]], "modulo() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.modulo"]], "modulo() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.modulo"]], "multiply_add() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.multiply_add"]], "multiply_add() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.multiply_add"]], "nor() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.nor"]], "normal_map() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.normal_map"]], "normalize (pynodes.datasocks.vector property)": [[5, "pynodes.datasocks.Vector.normalize"]], "not_and() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.not_and"]], "not_imply() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.not_imply"]], "object_info (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.object_info"]], "object_info() (pynodes.datasocks.object method)": [[5, "pynodes.datasocks.Object.object_info"]], "particle_info (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.particle_info"]], "pingpong() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.pingpong"]], "point_info (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.point_info"]], "power() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.power"]], "project() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.project"]], "pynodes.datasocks": [[5, "module-pynodes.datasocks"]], "radians (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.radians"]], "reflect() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.reflect"]], "refract() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.refract"]], "replace() (pynodes.datasocks.string method)": [[5, "pynodes.datasocks.String.replace"]], "rgb_curve() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.rgb_curve"]], "rotate() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate"]], "rotate_around_axis() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_around_axis"]], "rotate_around_euler_xyz() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_around_euler_xyz"]], "rotate_around_x_axis() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_around_x_axis"]], "rotate_around_y_axis() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_around_y_axis"]], "rotate_around_z_axis() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_around_z_axis"]], "rotate_local_around_axis_by_angle() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_local_around_axis_by_angle"]], "rotate_local_euler() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_local_euler"]], "rotate_object_around_axis_by_angle() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_object_around_axis_by_angle"]], "rotate_object_euler() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.rotate_object_euler"]], "rotation (pynodes.datasocks.object property)": [[5, "pynodes.datasocks.Object.rotation"]], "round (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.round"]], "scale (pynodes.datasocks.object property)": [[5, "pynodes.datasocks.Object.scale"]], "scale() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.scale"]], "separate_xyz() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.separate_xyz"]], "seperate() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.seperate"]], "sign (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.sign"]], "sin() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.sin"]], "sin() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.sin"]], "sine (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.sine"]], "sinh() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.sinh"]], "slice() (pynodes.datasocks.string method)": [[5, "pynodes.datasocks.String.slice"]], "smooth_maximum() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.smooth_maximum"]], "smooth_minimum() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.smooth_minimum"]], "snap() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.snap"]], "snap() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.snap"]], "special_characters (pynodes.datasocks.string property)": [[5, "pynodes.datasocks.String.special_characters"]], "sqrt() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.sqrt"]], "square_root (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.square_root"]], "substract() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.substract"]], "switch() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.switch"]], "switch() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.switch"]], "switch() (pynodes.datasocks.integer method)": [[5, "pynodes.datasocks.Integer.switch"]], "switch() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.switch"]], "tan() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.tan"]], "tangent (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.tangent"]], "tangent() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.tangent"]], "tangent_radial() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.tangent_radial"]], "tangent_uv_map() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.tangent_uv_map"]], "tanh() (pynodes.datasocks.float class method)": [[5, "pynodes.datasocks.Float.tanh"]], "to_background() (pynodes.datasocks.color method)": [[5, "pynodes.datasocks.Color.to_background"]], "to_curve() (pynodes.datasocks.string method)": [[5, "pynodes.datasocks.String.to_curve"]], "to_curves() (pynodes.datasocks.string method)": [[5, "pynodes.datasocks.String.to_curves"]], "to_euler() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.to_euler"]], "to_integer() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.to_integer"]], "to_normal() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.to_normal"]], "to_rgb() (pynodes.datasocks.shader method)": [[5, "pynodes.datasocks.Shader.to_rgb"]], "to_string() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.to_string"]], "true (pynodes.datasocks.boolean property)": [[5, "pynodes.datasocks.Boolean.true"]], "trunc (pynodes.datasocks.float property)": [[5, "pynodes.datasocks.Float.trunc"]], "uv_map() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.uv_map"]], "vector_curve() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.vector_curve"]], "volume_info (pynodes.datasocks.shader property)": [[5, "pynodes.datasocks.Shader.volume_info"]], "wire_frame() (pynodes.datasocks.shader static method)": [[5, "pynodes.datasocks.Shader.wire_frame"]], "wrap() (pynodes.datasocks.float method)": [[5, "pynodes.datasocks.Float.wrap"]], "wrap() (pynodes.datasocks.vector method)": [[5, "pynodes.datasocks.Vector.wrap"]], "x (pynodes.datasocks.vector property)": [[5, "pynodes.datasocks.Vector.x"]], "xnor() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.xnor"]], "xor() (pynodes.datasocks.boolean method)": [[5, "pynodes.datasocks.Boolean.xor"]], "y (pynodes.datasocks.vector property)": [[5, "pynodes.datasocks.Vector.y"]], "z (pynodes.datasocks.vector property)": [[5, "pynodes.datasocks.Vector.z"]], "beziersegment() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.BezierSegment"]], "curve (class in pynodes.geosocks)": [[6, "pynodes.geosocks.Curve"]], "curvearc() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveArc"]], "curvearcpoints() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveArcPoints"]], "curvecircle() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveCircle"]], "curvecirclepoints() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveCirclePoints"]], "curveline() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveLine"]], "curvequadraticbezier() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveQuadraticBezier"]], "curvespiral() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveSpiral"]], "curvestar() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.CurveStar"]], "geometry (class in pynodes.geosocks)": [[6, "pynodes.geosocks.Geometry"]], "id (pynodes.geosocks.geometry property)": [[6, "pynodes.geosocks.Geometry.ID"]], "inputpoints() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.InputPoints"]], "instances (class in pynodes.geosocks)": [[6, "pynodes.geosocks.Instances"]], "kite() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.Kite"]], "mesh (class in pynodes.geosocks)": [[6, "pynodes.geosocks.Mesh"]], "meshcircle() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshCircle"]], "meshcone() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshCone"]], "meshcube() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshCube"]], "meshcylinder() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshCylinder"]], "meshgrid() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshGrid"]], "meshicosphere() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshIcoSphere"]], "meshline() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshLine"]], "meshlineendpoints() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshLineEndPoints"]], "meshuvsphere() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.MeshUVSphere"]], "parallelogram() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.Parallelogram"]], "points (class in pynodes.geosocks)": [[6, "pynodes.geosocks.Points"]], "quadrangle() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.Quadrangle"]], "rectangle() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.Rectangle"]], "splineparameter() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.SplineParameter"]], "trapezoid() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.Trapezoid"]], "volume (class in pynodes.geosocks)": [[6, "pynodes.geosocks.Volume"]], "volumecube() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.VolumeCube"]], "__add__() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.__add__"]], "__getitem__() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.__getitem__"]], "_store_named_attribute() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry._store_named_attribute"]], "accumulate_float_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_float_on_corners"]], "accumulate_float_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_float_on_curves"]], "accumulate_float_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_float_on_edges"]], "accumulate_float_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_float_on_faces"]], "accumulate_float_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_float_on_instances"]], "accumulate_float_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_float_on_points"]], "accumulate_integer_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_integer_on_corners"]], "accumulate_integer_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_integer_on_curves"]], "accumulate_integer_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_integer_on_edges"]], "accumulate_integer_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_integer_on_faces"]], "accumulate_integer_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_integer_on_instances"]], "accumulate_integer_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_integer_on_points"]], "accumulate_vector_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_vector_on_corners"]], "accumulate_vector_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_vector_on_curves"]], "accumulate_vector_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_vector_on_edges"]], "accumulate_vector_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_vector_on_faces"]], "accumulate_vector_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_vector_on_instances"]], "accumulate_vector_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.accumulate_vector_on_points"]], "bl_idname (pynodes.geosocks.geometry attribute)": [[6, "pynodes.geosocks.Geometry.bl_idname"]], "blur_color_attribute() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.blur_color_attribute"]], "blur_float_attribute() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.blur_float_attribute"]], "blur_integer_attribute() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.blur_integer_attribute"]], "blur_vector_attribute() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.blur_vector_attribute"]], "bound_box() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.bound_box"]], "capture_boolean_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_boolean_on_corners"]], "capture_boolean_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_boolean_on_curves"]], "capture_boolean_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_boolean_on_edges"]], "capture_boolean_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_boolean_on_faces"]], "capture_boolean_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_boolean_on_instances"]], "capture_boolean_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_boolean_on_points"]], "capture_color_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_color_on_corners"]], "capture_color_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_color_on_curves"]], "capture_color_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_color_on_edges"]], "capture_color_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_color_on_faces"]], "capture_color_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_color_on_instances"]], "capture_color_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_color_on_points"]], "capture_float_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_float_on_corners"]], "capture_float_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_float_on_curves"]], "capture_float_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_float_on_edges"]], "capture_float_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_float_on_faces"]], "capture_float_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_float_on_instances"]], "capture_float_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_float_on_points"]], "capture_integer_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_integer_on_corners"]], "capture_integer_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_integer_on_curves"]], "capture_integer_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_integer_on_edges"]], "capture_integer_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_integer_on_faces"]], "capture_integer_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_integer_on_instances"]], "capture_integer_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_integer_on_points"]], "capture_vector_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_vector_on_corners"]], "capture_vector_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_vector_on_curves"]], "capture_vector_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_vector_on_edges"]], "capture_vector_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_vector_on_faces"]], "capture_vector_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_vector_on_instances"]], "capture_vector_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.capture_vector_on_points"]], "convex_hull() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.convex_hull"]], "corners_of_face() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.corners_of_face"]], "corners_of_vertex() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.corners_of_vertex"]], "curve_length (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.curve_length"]], "curve_of_point() (pynodes.geosocks.curve static method)": [[6, "pynodes.geosocks.Curve.curve_of_point"]], "deform_on_surface() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.deform_on_surface"]], "delete() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.delete"]], "delete_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.delete_curves"]], "delete_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.delete_edges"]], "delete_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.delete_faces"]], "delete_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.delete_instances"]], "delete_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.delete_points"]], "distribute_points_grid() (pynodes.geosocks.volume method)": [[6, "pynodes.geosocks.Volume.distribute_points_grid"]], "distribute_points_on_faces() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.distribute_points_on_faces"]], "distribute_points_random() (pynodes.geosocks.volume method)": [[6, "pynodes.geosocks.Volume.distribute_points_random"]], "domain_size (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.domain_size"]], "domain_size (pynodes.geosocks.instances property)": [[6, "pynodes.geosocks.Instances.domain_size"]], "domain_size (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.domain_size"]], "domain_size (pynodes.geosocks.points property)": [[6, "pynodes.geosocks.Points.domain_size"]], "domain_size() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.domain_size"]], "dual_mesh() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.dual_mesh"]], "duplicate_elements() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.duplicate_elements"]], "edge_angle (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.edge_angle"]], "edge_neighbors (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.edge_neighbors"]], "edge_paths_to_curves() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.edge_paths_to_curves"]], "edge_paths_to_selection() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.edge_paths_to_selection"]], "edge_vertices (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.edge_vertices"]], "edges_of_corner() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.edges_of_corner"]], "edges_of_vertex() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.edges_of_vertex"]], "edges_to_face_groups() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.edges_to_face_groups"]], "endpoint_selection() (pynodes.geosocks.curve static method)": [[6, "pynodes.geosocks.Curve.endpoint_selection"]], "evaluate_boolean_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_corners"]], "evaluate_boolean_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_curves"]], "evaluate_boolean_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_edges"]], "evaluate_boolean_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_faces"]], "evaluate_boolean_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_instances"]], "evaluate_boolean_at_index_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_points"]], "evaluate_boolean_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_on_corners"]], "evaluate_boolean_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_on_curves"]], "evaluate_boolean_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_on_edges"]], "evaluate_boolean_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_on_faces"]], "evaluate_boolean_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_on_instances"]], "evaluate_boolean_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_boolean_on_points"]], "evaluate_color_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_corners"]], "evaluate_color_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_curves"]], "evaluate_color_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_edges"]], "evaluate_color_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_faces"]], "evaluate_color_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_instances"]], "evaluate_color_at_index_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_points"]], "evaluate_color_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_on_corners"]], "evaluate_color_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_on_curves"]], "evaluate_color_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_on_edges"]], "evaluate_color_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_on_faces"]], "evaluate_color_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_on_instances"]], "evaluate_color_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_color_on_points"]], "evaluate_float_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_corners"]], "evaluate_float_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_curves"]], "evaluate_float_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_edges"]], "evaluate_float_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_faces"]], "evaluate_float_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_instances"]], "evaluate_float_at_index_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_points"]], "evaluate_float_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_on_corners"]], "evaluate_float_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_on_curves"]], "evaluate_float_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_on_edges"]], "evaluate_float_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_on_faces"]], "evaluate_float_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_on_instances"]], "evaluate_float_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_float_on_points"]], "evaluate_integer_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_corners"]], "evaluate_integer_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_curves"]], "evaluate_integer_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_edges"]], "evaluate_integer_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_faces"]], "evaluate_integer_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_instances"]], "evaluate_integer_at_index_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_points"]], "evaluate_integer_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_on_corners"]], "evaluate_integer_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_on_curves"]], "evaluate_integer_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_on_edges"]], "evaluate_integer_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_on_faces"]], "evaluate_integer_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_on_instances"]], "evaluate_integer_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_integer_on_points"]], "evaluate_vector_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_corners"]], "evaluate_vector_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_curves"]], "evaluate_vector_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_edges"]], "evaluate_vector_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_faces"]], "evaluate_vector_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_instances"]], "evaluate_vector_at_index_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_points"]], "evaluate_vector_on_corners() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_on_corners"]], "evaluate_vector_on_curves() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_on_curves"]], "evaluate_vector_on_edges() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_on_edges"]], "evaluate_vector_on_faces() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_on_faces"]], "evaluate_vector_on_instances() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_on_instances"]], "evaluate_vector_on_points() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.evaluate_vector_on_points"]], "extrude() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.extrude"]], "extrude_edges() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.extrude_edges"]], "extrude_faces() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.extrude_faces"]], "extrude_vertices() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.extrude_vertices"]], "face_area (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.face_area"]], "face_is_planar() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.face_is_planar"]], "face_neighbors (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.face_neighbors"]], "face_of_corner() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.face_of_corner"]], "faceset_boundaries() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.faceset_boundaries"]], "fill_curve() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.fill_curve"]], "filled_mesh (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.filled_mesh"]], "filled_ngons (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.filled_ngons"]], "fillet_bezier() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.fillet_bezier"]], "fillet_curve() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.fillet_curve"]], "fillet_poly() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.fillet_poly"]], "flip_faces() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.flip_faces"]], "float_statistic_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.float_statistic_on_corners"]], "float_statistic_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.float_statistic_on_curves"]], "float_statistic_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.float_statistic_on_edges"]], "float_statistic_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.float_statistic_on_faces"]], "float_statistic_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.float_statistic_on_instances"]], "float_statistic_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.float_statistic_on_points"]], "handle_positions() (pynodes.geosocks.curve static method)": [[6, "pynodes.geosocks.Curve.handle_positions"]], "handle_type_selection() (pynodes.geosocks.curve static method)": [[6, "pynodes.geosocks.Curve.handle_type_selection"]], "index (pynodes.geosocks.geometry property)": [[6, "pynodes.geosocks.Geometry.index"]], "index_of_nearest() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.index_of_nearest"]], "integer_statistic_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.integer_statistic_on_corners"]], "integer_statistic_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.integer_statistic_on_curves"]], "integer_statistic_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.integer_statistic_on_edges"]], "integer_statistic_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.integer_statistic_on_faces"]], "integer_statistic_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.integer_statistic_on_instances"]], "integer_statistic_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.integer_statistic_on_points"]], "interpolate_curves() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.interpolate_curves"]], "is_cyclic (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.is_cyclic"]], "is_shade_smooth (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.is_shade_smooth"]], "join() (in module pynodes.geosocks)": [[6, "pynodes.geosocks.join"]], "join() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.join"]], "join_to_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.join_to_instances"]], "merge_by_distance() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.merge_by_distance"]], "merge_by_distance() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.merge_by_distance"]], "merge_by_distance() (pynodes.geosocks.points method)": [[6, "pynodes.geosocks.Points.merge_by_distance"]], "mesh_difference() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.mesh_difference"]], "mesh_intersect() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.mesh_intersect"]], "mesh_island (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.mesh_island"]], "mesh_union() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.mesh_union"]], "named_attribute_boolean() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.named_attribute_boolean"]], "named_attribute_color() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.named_attribute_color"]], "named_attribute_float() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.named_attribute_float"]], "named_attribute_integer() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.named_attribute_integer"]], "named_attribute_vector() (pynodes.geosocks.geometry static method)": [[6, "pynodes.geosocks.Geometry.named_attribute_vector"]], "nearest_surface() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.nearest_surface"]], "nearest_surface_boolean() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.nearest_surface_boolean"]], "nearest_surface_color() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.nearest_surface_color"]], "nearest_surface_float() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.nearest_surface_float"]], "nearest_surface_integer() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.nearest_surface_integer"]], "nearest_surface_vector() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.nearest_surface_vector"]], "normal (pynodes.geosocks.geometry property)": [[6, "pynodes.geosocks.Geometry.normal"]], "offset_corner_in_face() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.offset_corner_in_face"]], "offset_point_in_curve() (pynodes.geosocks.curve static method)": [[6, "pynodes.geosocks.Curve.offset_point_in_curve"]], "on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.on_points"]], "pack_uv_islands() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.pack_uv_islands"]], "parameter (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.parameter"]], "points_of_curve() (pynodes.geosocks.curve static method)": [[6, "pynodes.geosocks.Curve.points_of_curve"]], "position (pynodes.geosocks.geometry property)": [[6, "pynodes.geosocks.Geometry.position"]], "proximity() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.proximity"]], "pynodes.geosocks": [[6, "module-pynodes.geosocks"]], "radius (pynodes.geosocks.geometry property)": [[6, "pynodes.geosocks.Geometry.radius"]], "raycast_boolean() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.raycast_boolean"]], "raycast_color() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.raycast_color"]], "raycast_float() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.raycast_float"]], "raycast_integer() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.raycast_integer"]], "raycast_vector() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.raycast_vector"]], "realize_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.realize_instances"]], "realize_instances() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.realize_instances"]], "remove_attribute() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.remove_attribute"]], "replace_material() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.replace_material"]], "resample() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.resample"]], "resample_evaluated() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.resample_evaluated"]], "resample_length() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.resample_length"]], "resolution (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.resolution"]], "reverse() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.reverse"]], "rotate_instances() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.rotate_instances"]], "rotation (pynodes.geosocks.instances property)": [[6, "pynodes.geosocks.Instances.rotation"]], "sample_boolean() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.sample_boolean"]], "sample_boolean_at_index() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.sample_boolean_at_index"]], "sample_boolean_at_index() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.sample_boolean_at_index"]], "sample_color() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.sample_color"]], "sample_color_at_index() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.sample_color_at_index"]], "sample_color_at_index() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.sample_color_at_index"]], "sample_curve() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.sample_curve"]], "sample_float() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.sample_float"]], "sample_float_at_index() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.sample_float_at_index"]], "sample_float_at_index() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.sample_float_at_index"]], "sample_index() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.sample_index"]], "sample_integer() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.sample_integer"]], "sample_integer_at_index() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.sample_integer_at_index"]], "sample_integer_at_index() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.sample_integer_at_index"]], "sample_nearest() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.sample_nearest"]], "sample_uv_surface_boolean() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.sample_uv_surface_boolean"]], "sample_uv_surface_color() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.sample_uv_surface_color"]], "sample_uv_surface_float() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.sample_uv_surface_float"]], "sample_uv_surface_integer() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.sample_uv_surface_integer"]], "sample_uv_surface_vector() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.sample_uv_surface_vector"]], "sample_vector() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.sample_vector"]], "sample_vector_at_index() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.sample_vector_at_index"]], "sample_vector_at_index() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.sample_vector_at_index"]], "scale (pynodes.geosocks.instances property)": [[6, "pynodes.geosocks.Instances.scale"]], "scale_elements() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.scale_elements"]], "scale_elements() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.scale_elements"]], "scale_instances() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.scale_instances"]], "select() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.select"]], "select_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.select_curves"]], "select_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.select_edges"]], "select_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.select_faces"]], "select_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.select_instances"]], "select_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.select_points"]], "selection (pynodes.geosocks.geometry property)": [[6, "pynodes.geosocks.Geometry.selection"]], "separate() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.separate"]], "separate() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.separate"]], "separate_components() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.separate_components"]], "separate_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.separate_curves"]], "separate_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.separate_edges"]], "separate_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.separate_faces"]], "separate_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.separate_instances"]], "set_cyclic() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_cyclic"]], "set_handle_positions() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_handle_positions"]], "set_handle_type() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_handle_type"]], "set_id() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.set_id"]], "set_material() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.set_material"]], "set_material_index() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.set_material_index"]], "set_normal() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_normal"]], "set_position() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.set_position"]], "set_radius() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_radius"]], "set_radius() (pynodes.geosocks.points method)": [[6, "pynodes.geosocks.Points.set_radius"]], "set_resolution() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_resolution"]], "set_shade_smooth() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.set_shade_smooth"]], "set_spline_type() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_spline_type"]], "set_spline_type_bezier() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_spline_type_bezier"]], "set_spline_type_catmull_rom() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_spline_type_catmull_rom"]], "set_spline_type_nurbs() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_spline_type_nurbs"]], "set_spline_type_poly() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_spline_type_poly"]], "set_tilt() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.set_tilt"]], "shortest_edge_paths() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.shortest_edge_paths"]], "spline_length (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.spline_length"]], "split_edges() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.split_edges"]], "store_named_attribute() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.store_named_attribute"]], "subdivide() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.subdivide"]], "subdivide_mesh() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.subdivide_mesh"]], "subdivision_surface() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.subdivision_surface"]], "switch() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.switch"]], "tangent (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.tangent"]], "tilt (pynodes.geosocks.curve property)": [[6, "pynodes.geosocks.Curve.tilt"]], "to_curve() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.to_curve"]], "to_mesh() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.to_mesh"]], "to_mesh() (pynodes.geosocks.volume method)": [[6, "pynodes.geosocks.Volume.to_mesh"]], "to_points() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.to_points"]], "to_points() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.to_points"]], "to_points() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.to_points"]], "to_vertices() (pynodes.geosocks.points method)": [[6, "pynodes.geosocks.Points.to_vertices"]], "to_volume() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.to_volume"]], "to_volume() (pynodes.geosocks.points method)": [[6, "pynodes.geosocks.Points.to_volume"]], "transform() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.transform"]], "translate_instances() (pynodes.geosocks.instances method)": [[6, "pynodes.geosocks.Instances.translate_instances"]], "triangulate() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.triangulate"]], "trim_factor() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.trim_factor"]], "trim_length() (pynodes.geosocks.curve method)": [[6, "pynodes.geosocks.Curve.trim_length"]], "uv_unwrap() (pynodes.geosocks.mesh method)": [[6, "pynodes.geosocks.Mesh.uv_unwrap"]], "vector_statistic_on_corners() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.vector_statistic_on_corners"]], "vector_statistic_on_curves() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.vector_statistic_on_curves"]], "vector_statistic_on_edges() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.vector_statistic_on_edges"]], "vector_statistic_on_faces() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.vector_statistic_on_faces"]], "vector_statistic_on_instances() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.vector_statistic_on_instances"]], "vector_statistic_on_points() (pynodes.geosocks.geometry method)": [[6, "pynodes.geosocks.Geometry.vector_statistic_on_points"]], "vertex_neighbors (pynodes.geosocks.mesh property)": [[6, "pynodes.geosocks.Mesh.vertex_neighbors"]], "vertex_of_corner() (pynodes.geosocks.mesh static method)": [[6, "pynodes.geosocks.Mesh.vertex_of_corner"]], "functionnodealigneulertovector() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeAlignEulerToVector"]], "functionnodebooleanmath() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeBooleanMath"]], "functionnodecombinecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeCombineColor"]], "functionnodecompare() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeCompare"]], "functionnodefloattoint() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeFloatToInt"]], "functionnodeinputbool() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputBool"]], "functionnodeinputcolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputColor"]], "functionnodeinputint() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputInt"]], "functionnodeinputspecialcharacters() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputSpecialCharacters"]], "functionnodeinputstring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputString"]], "functionnodeinputvector() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputVector"]], "functionnoderandomvalue() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeRandomValue"]], "functionnodereplacestring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeReplaceString"]], "functionnoderotateeuler() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeRotateEuler"]], "functionnodeseparatecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeSeparateColor"]], "functionnodeslicestring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeSliceString"]], "functionnodestringlength() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeStringLength"]], "functionnodevaluetostring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeValueToString"]], "geometrynodeaccumulatefield() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeAccumulateField"]], "geometrynodeattributedomainsize() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeAttributeDomainSize"]], "geometrynodeattributestatistic() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeAttributeStatistic"]], "geometrynodeblurattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeBlurAttribute"]], "geometrynodeboundbox() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeBoundBox"]], "geometrynodecaptureattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCaptureAttribute"]], "geometrynodecollectioninfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCollectionInfo"]], "geometrynodeconvexhull() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeConvexHull"]], "geometrynodecornersofface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCornersOfFace"]], "geometrynodecornersofvertex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCornersOfVertex"]], "geometrynodecurvearc() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveArc"]], "geometrynodecurveendpointselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveEndpointSelection"]], "geometrynodecurvehandletypeselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveHandleTypeSelection"]], "geometrynodecurvelength() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveLength"]], "geometrynodecurveofpoint() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveOfPoint"]], "geometrynodecurveprimitivebeziersegment() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveBezierSegment"]], "geometrynodecurveprimitivecircle() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveCircle"]], "geometrynodecurveprimitiveline() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveLine"]], "geometrynodecurveprimitivequadrilateral() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveQuadrilateral"]], "geometrynodecurvequadraticbezier() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveQuadraticBezier"]], "geometrynodecurvesethandles() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveSetHandles"]], "geometrynodecurvespiral() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveSpiral"]], "geometrynodecurvesplinetype() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveSplineType"]], "geometrynodecurvestar() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveStar"]], "geometrynodecurvetomesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveToMesh"]], "geometrynodecurvetopoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveToPoints"]], "geometrynodedeformcurvesonsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDeformCurvesOnSurface"]], "geometrynodedeletegeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDeleteGeometry"]], "geometrynodedistributepointsinvolume() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDistributePointsInVolume"]], "geometrynodedistributepointsonfaces() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDistributePointsOnFaces"]], "geometrynodedualmesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDualMesh"]], "geometrynodeduplicateelements() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDuplicateElements"]], "geometrynodeedgepathstocurves() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgePathsToCurves"]], "geometrynodeedgepathstoselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgePathsToSelection"]], "geometrynodeedgesofcorner() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgesOfCorner"]], "geometrynodeedgesofvertex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgesOfVertex"]], "geometrynodeedgestofacegroups() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgesToFaceGroups"]], "geometrynodeextrudemesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeExtrudeMesh"]], "geometrynodefaceofcorner() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFaceOfCorner"]], "geometrynodefieldatindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFieldAtIndex"]], "geometrynodefieldondomain() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFieldOnDomain"]], "geometrynodefillcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFillCurve"]], "geometrynodefilletcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFilletCurve"]], "geometrynodeflipfaces() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFlipFaces"]], "geometrynodegeometrytoinstance() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeGeometryToInstance"]], "geometrynodeimageinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeImageInfo"]], "geometrynodeimagetexture() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeImageTexture"]], "geometrynodeindexofnearest() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeIndexOfNearest"]], "geometrynodeinputcurvehandlepositions() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputCurveHandlePositions"]], "geometrynodeinputcurvetilt() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputCurveTilt"]], "geometrynodeinputid() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputID"]], "geometrynodeinputimage() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputImage"]], "geometrynodeinputindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputIndex"]], "geometrynodeinputinstancerotation() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputInstanceRotation"]], "geometrynodeinputinstancescale() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputInstanceScale"]], "geometrynodeinputmaterial() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMaterial"]], "geometrynodeinputmaterialindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMaterialIndex"]], "geometrynodeinputmeshedgeangle() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshEdgeAngle"]], "geometrynodeinputmeshedgeneighbors() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshEdgeNeighbors"]], "geometrynodeinputmeshedgevertices() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshEdgeVertices"]], "geometrynodeinputmeshfacearea() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshFaceArea"]], "geometrynodeinputmeshfaceisplanar() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshFaceIsPlanar"]], "geometrynodeinputmeshfaceneighbors() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshFaceNeighbors"]], "geometrynodeinputmeshisland() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshIsland"]], "geometrynodeinputmeshvertexneighbors() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshVertexNeighbors"]], "geometrynodeinputnamedattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputNamedAttribute"]], "geometrynodeinputnormal() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputNormal"]], "geometrynodeinputposition() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputPosition"]], "geometrynodeinputradius() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputRadius"]], "geometrynodeinputscenetime() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputSceneTime"]], "geometrynodeinputshadesmooth() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputShadeSmooth"]], "geometrynodeinputshortestedgepaths() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputShortestEdgePaths"]], "geometrynodeinputsplinecyclic() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputSplineCyclic"]], "geometrynodeinputsplineresolution() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputSplineResolution"]], "geometrynodeinputtangent() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputTangent"]], "geometrynodeinstanceonpoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInstanceOnPoints"]], "geometrynodeinstancestopoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInstancesToPoints"]], "geometrynodeinterpolatecurves() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInterpolateCurves"]], "geometrynodeisviewport() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeIsViewport"]], "geometrynodejoingeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeJoinGeometry"]], "geometrynodematerialselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMaterialSelection"]], "geometrynodemergebydistance() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMergeByDistance"]], "geometrynodemeshboolean() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshBoolean"]], "geometrynodemeshcircle() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCircle"]], "geometrynodemeshcone() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCone"]], "geometrynodemeshcube() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCube"]], "geometrynodemeshcylinder() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCylinder"]], "geometrynodemeshfacesetboundaries() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshFaceSetBoundaries"]], "geometrynodemeshgrid() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshGrid"]], "geometrynodemeshicosphere() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshIcoSphere"]], "geometrynodemeshline() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshLine"]], "geometrynodemeshtocurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshToCurve"]], "geometrynodemeshtopoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshToPoints"]], "geometrynodemeshtovolume() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshToVolume"]], "geometrynodemeshuvsphere() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshUVSphere"]], "geometrynodeobjectinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeObjectInfo"]], "geometrynodeoffsetcornerinface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeOffsetCornerInFace"]], "geometrynodeoffsetpointincurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeOffsetPointInCurve"]], "geometrynodepoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePoints"]], "geometrynodepointsofcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePointsOfCurve"]], "geometrynodepointstovertices() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePointsToVertices"]], "geometrynodepointstovolume() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePointsToVolume"]], "geometrynodeproximity() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeProximity"]], "geometrynoderaycast() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRaycast"]], "geometrynoderealizeinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRealizeInstances"]], "geometrynoderemoveattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRemoveAttribute"]], "geometrynodereplacematerial() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeReplaceMaterial"]], "geometrynoderesamplecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeResampleCurve"]], "geometrynodereversecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeReverseCurve"]], "geometrynoderotateinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRotateInstances"]], "geometrynodesamplecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleCurve"]], "geometrynodesampleindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleIndex"]], "geometrynodesamplenearest() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleNearest"]], "geometrynodesamplenearestsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleNearestSurface"]], "geometrynodesampleuvsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleUVSurface"]], "geometrynodescaleelements() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeScaleElements"]], "geometrynodescaleinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeScaleInstances"]], "geometrynodeselfobject() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSelfObject"]], "geometrynodeseparatecomponents() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSeparateComponents"]], "geometrynodeseparategeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSeparateGeometry"]], "geometrynodesetcurvehandlepositions() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveHandlePositions"]], "geometrynodesetcurvenormal() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveNormal"]], "geometrynodesetcurveradius() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveRadius"]], "geometrynodesetcurvetilt() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveTilt"]], "geometrynodesetid() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetID"]], "geometrynodesetmaterial() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetMaterial"]], "geometrynodesetmaterialindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetMaterialIndex"]], "geometrynodesetpointradius() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetPointRadius"]], "geometrynodesetposition() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetPosition"]], "geometrynodesetshadesmooth() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetShadeSmooth"]], "geometrynodesetsplinecyclic() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetSplineCyclic"]], "geometrynodesetsplineresolution() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetSplineResolution"]], "geometrynodesplinelength() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSplineLength"]], "geometrynodesplineparameter() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSplineParameter"]], "geometrynodesplitedges() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSplitEdges"]], "geometrynodestorenamedattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeStoreNamedAttribute"]], "geometrynodestringjoin() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeStringJoin"]], "geometrynodestringtocurves() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeStringToCurves"]], "geometrynodesubdividecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSubdivideCurve"]], "geometrynodesubdividemesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSubdivideMesh"]], "geometrynodesubdivisionsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSubdivisionSurface"]], "geometrynodeswitch() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSwitch"]], "geometrynodetransform() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTransform"]], "geometrynodetranslateinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTranslateInstances"]], "geometrynodetriangulate() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTriangulate"]], "geometrynodetrimcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTrimCurve"]], "geometrynodeuvpackislands() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeUVPackIslands"]], "geometrynodeuvunwrap() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeUVUnwrap"]], "geometrynodevertexofcorner() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeVertexOfCorner"]], "geometrynodeviewer() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeViewer"]], "geometrynodevolumecube() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeVolumeCube"]], "geometrynodevolumetomesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeVolumeToMesh"]], "shadernodeaddshader() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeAddShader"]], "shadernodeambientocclusion() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeAmbientOcclusion"]], "shadernodeattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeAttribute"]], "shadernodebackground() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBackground"]], "shadernodebevel() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBevel"]], "shadernodeblackbody() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBlackbody"]], "shadernodebrightcontrast() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBrightContrast"]], "shadernodebsdfanisotropic() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfAnisotropic"]], "shadernodebsdfdiffuse() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfDiffuse"]], "shadernodebsdfglass() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfGlass"]], "shadernodebsdfglossy() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfGlossy"]], "shadernodebsdfhair() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfHair"]], "shadernodebsdfhairprincipled() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfHairPrincipled"]], "shadernodebsdfprincipled() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfPrincipled"]], "shadernodebsdfrefraction() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfRefraction"]], "shadernodebsdftoon() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfToon"]], "shadernodebsdftranslucent() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfTranslucent"]], "shadernodebsdftransparent() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfTransparent"]], "shadernodebsdfvelvet() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfVelvet"]], "shadernodebump() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBump"]], "shadernodecameradata() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeCameraData"]], "shadernodeclamp() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeClamp"]], "shadernodecombinecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeCombineColor"]], "shadernodecombinexyz() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeCombineXYZ"]], "shadernodedisplacement() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeDisplacement"]], "shadernodeeeveespecular() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeEeveeSpecular"]], "shadernodeemission() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeEmission"]], "shadernodefloatcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeFloatCurve"]], "shadernodefresnel() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeFresnel"]], "shadernodegamma() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeGamma"]], "shadernodehairinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeHairInfo"]], "shadernodeholdout() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeHoldout"]], "shadernodehuesaturation() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeHueSaturation"]], "shadernodeinvert() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeInvert"]], "shadernodelayerweight() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeLayerWeight"]], "shadernodelightfalloff() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeLightFalloff"]], "shadernodelightpath() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeLightPath"]], "shadernodemaprange() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMapRange"]], "shadernodemapping() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMapping"]], "shadernodemath() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMath"]], "shadernodemix() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMix"]], "shadernodemixshader() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMixShader"]], "shadernodenewgeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeNewGeometry"]], "shadernodenormal() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeNormal"]], "shadernodenormalmap() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeNormalMap"]], "shadernodeobjectinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeObjectInfo"]], "shadernodeoutputaov() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputAOV"]], "shadernodeoutputlight() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputLight"]], "shadernodeoutputmaterial() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputMaterial"]], "shadernodeoutputworld() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputWorld"]], "shadernodeparticleinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeParticleInfo"]], "shadernodepointinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodePointInfo"]], "shadernodergb() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeRGB"]], "shadernodergbcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeRGBCurve"]], "shadernodergbtobw() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeRGBToBW"]], "shadernodescript() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeScript"]], "shadernodeseparatecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeSeparateColor"]], "shadernodeseparatexyz() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeSeparateXYZ"]], "shadernodeshadertorgb() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeShaderToRGB"]], "shadernodesubsurfacescattering() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeSubsurfaceScattering"]], "shadernodetangent() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTangent"]], "shadernodetexbrick() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexBrick"]], "shadernodetexchecker() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexChecker"]], "shadernodetexcoord() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexCoord"]], "shadernodetexenvironment() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexEnvironment"]], "shadernodetexgradient() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexGradient"]], "shadernodetexies() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexIES"]], "shadernodeteximage() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexImage"]], "shadernodetexmagic() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexMagic"]], "shadernodetexmusgrave() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexMusgrave"]], "shadernodetexnoise() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexNoise"]], "shadernodetexpointdensity() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexPointDensity"]], "shadernodetexsky() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexSky"]], "shadernodetexvoronoi() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexVoronoi"]], "shadernodetexwave() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexWave"]], "shadernodetexwhitenoise() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexWhiteNoise"]], "shadernodeuvmap() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeUVMap"]], "shadernodevaltorgb() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeValToRGB"]], "shadernodevalue() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeValue"]], "shadernodevectorcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorCurve"]], "shadernodevectordisplacement() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorDisplacement"]], "shadernodevectormath() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorMath"]], "shadernodevectorrotate() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorRotate"]], "shadernodevectortransform() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorTransform"]], "shadernodevertexcolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVertexColor"]], "shadernodevolumeabsorption() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumeAbsorption"]], "shadernodevolumeinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumeInfo"]], "shadernodevolumeprincipled() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumePrincipled"]], "shadernodevolumescatter() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumeScatter"]], "shadernodewavelength() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeWavelength"]], "shadernodewireframe() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeWireframe"]], "pynodes.nodes": [[7, "module-pynodes.nodes"]], "key (class in pynodes.scene)": [[8, "pynodes.scene.Key"]], "mat (class in pynodes.scene)": [[8, "pynodes.scene.Mat"]], "mod (class in pynodes.scene)": [[8, "pynodes.scene.Mod"]], "o (class in pynodes.scene)": [[8, "pynodes.scene.O"]], "objtype (class in pynodes.scene)": [[8, "pynodes.scene.ObjType"]], "tree (class in pynodes.scene)": [[8, "pynodes.scene.Tree"]], "__eq__() (pynodes.scene.key method)": [[8, "pynodes.scene.Key.__eq__"]], "__getitem__() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.__getitem__"]], "__hash__() (pynodes.scene.key method)": [[8, "pynodes.scene.Key.__hash__"]], "__matmul__() (pynodes.scene.objtype method)": [[8, "pynodes.scene.ObjType.__matmul__"]], "bevel (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.bevel"]], "bezier_curve (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.bezier_curve"]], "circle (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.circle"]], "cone (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.cone"]], "cube (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.cube"]], "decimate (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.decimate"]], "empty_sphere (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.empty_sphere"]], "geometry_nodes (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.geometry_nodes"]], "ico_sphere (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.ico_sphere"]], "load() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.load"]], "mesh (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.mesh"]], "monkey (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.monkey"]], "nurbs_path (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.nurbs_path"]], "parse_mat_slots() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.parse_mat_slots"]], "parse_modifier() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.parse_modifier"]], "plane (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.plane"]], "pynodes.scene": [[8, "module-pynodes.scene"]], "slots (pynodes.scene.mat attribute)": [[8, "pynodes.scene.Mat.slots"]], "smooth (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.smooth"]], "subdivision (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.subdivision"]]}})