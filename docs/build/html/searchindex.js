Search.setIndex({"docnames": ["apidocs/index", "apidocs/pynodes/pynodes", "apidocs/pynodes/pynodes.colors", "apidocs/pynodes/pynodes.core", "apidocs/pynodes/pynodes.datasocks", "apidocs/pynodes/pynodes.geosocks", "apidocs/pynodes/pynodes.main", "apidocs/pynodes/pynodes.nodes", "apidocs/pynodes/pynodes.scene", "index", "tutorial/Introduction", "tutorial/QuickStart"], "filenames": ["apidocs\\index.rst", "apidocs\\pynodes\\pynodes.rst", "apidocs\\pynodes\\pynodes.colors.rst", "apidocs\\pynodes\\pynodes.core.rst", "apidocs\\pynodes\\pynodes.datasocks.rst", "apidocs\\pynodes\\pynodes.geosocks.rst", "apidocs\\pynodes\\pynodes.main.rst", "apidocs\\pynodes\\pynodes.nodes.rst", "apidocs\\pynodes\\pynodes.scene.rst", "index.md", "tutorial\\Introduction.md", "tutorial\\QuickStart.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.colors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.core</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.datasocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.geosocks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.nodes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pynodes.scene</span></code>", "Pynodes for Blender support all kinds of tree nodes", "Introduction", "Quick Start"], "terms": {"thi": [0, 4, 5], "page": [0, 5], "contain": [0, 4, 5], "auto": [0, 4, 5, 7], "gener": [0, 4, 5, 7], "document": [0, 3, 4], "1": [0, 2, 4, 5, 6, 7, 11], "pynod": [0, 10, 11], "color": [0, 1, 3, 4, 5, 7, 9, 11], "core": [0, 1, 4, 5, 9], "datasock": [0, 1, 3, 5, 9], "geosock": [0, 1, 3, 9], "main": [0, 1, 5, 9], "node": [0, 1, 3, 4, 5, 6, 8, 11], "scene": [0, 1, 3, 4, 5, 9, 11], "creat": [0, 3, 4, 5], "sphinx": 0, "autodoc2": 0, "regist": [1, 6], "unregist": [1, 6], "bl_info": 1, "sin": [1, 4, 7, 11], "co": [1, 4, 11], "tan": [1, 4], "none": [1, 3, 4, 5, 6, 7, 8], "hex_color_to_rgb": 2, "hex_color_to_rgba": 2, "convert_srgb_to_linear_rgb": 2, "convert": [2, 4, 5], "from": [2, 4, 5, 6, 11], "srgb": 2, "linear": [2, 4, 7], "rgb": [2, 4, 7], "base": [2, 3, 4, 5, 6, 8], "http": 2, "en": 2, "wikipedia": 2, "org": 2, "wiki": 2, "from_srgb_to_cie_xyz": 2, "rgba": [2, 4, 7], "white": [2, 4], "black": 2, "light_grai": 2, "grai": [2, 4], "dark_grai": 2, "silver": 2, "light_r": 2, "mid_r": 2, "dark_r": 2, "red": [2, 4, 7], "light_orang": 2, "mid_orang": 2, "dark_orang": 2, "orang": 2, "light_yellow": 2, "mid_yellow": 2, "dark_yellow": 2, "yellow": 2, "light_ol": 2, "mid_ol": 2, "dark_ol": 2, "oliv": 2, "light_lim": 2, "mid_lim": 2, "dark_lim": 2, "lime": 2, "light_green": 2, "mid_green": 2, "dark_green": 2, "green": [2, 4, 7], "light_cyan": 2, "mid_cyan": 2, "dark_cyan": 2, "cyan": 2, "light_azur": 2, "mid_azur": 2, "dark_azur": 2, "azur": 2, "light_blu": 2, "mid_blu": 2, "dark_blu": 2, "blue": [2, 4, 7], "light_violet": 2, "mid_violet": 2, "dark_violet": 2, "violet": 2, "light_magenta": 2, "mid_magenta": 2, "dark_magenta": 2, "magenta": 2, "light_ros": 2, "mid_ros": 2, "dark_ros": 2, "rose": 2, "color_palett": 2, "hex_color": 2, "str": [2, 3, 4, 5, 8], "sourc": [2, 3, 4, 5, 6, 7, 8], "alpha": [2, 4, 7], "0": [2, 4, 5, 6, 7, 11], "srgb_color_compon": 2, "float": [2, 3, 4, 5, 7, 11], "ffffff": 2, "000000": 2, "7f5f5f": 2, "7f3f3f": 2, "7f1f1f": 2, "bfbfbf": 2, "ffbfbf": 2, "ff7f7f": 2, "ff3f3f": 2, "ff0000": 2, "7f6f5f": 2, "7f5f3f": 2, "7f4f1f": 2, "7f3f00": 2, "ffffbf": 2, "ffff7f": 2, "ffff3f": 2, "ffff00": 2, "6f7f5f": 2, "5f7f3f": 2, "4f7f1f": 2, "3f7f00": 2, "bfffbf": 2, "7fff7f": 2, "3fff3f": 2, "00ff00": 2, "5f7f6f": 2, "3f7f5f": 2, "1f7f4f": 2, "007f3f": 2, "bfffff": 2, "7fffff": 2, "3fffff": 2, "00ffff": 2, "5f6f7f": 2, "3f5f7f": 2, "1f4f7f": 2, "003f7f": 2, "bfbfff": 2, "7f7fff": 2, "3f3fff": 2, "0000ff": 2, "6f5f7f": 2, "5f3f7f": 2, "4f1f7f": 2, "3f007f": 2, "ffbfff": 2, "ff7fff": 2, "ff3fff": 2, "ff00ff": 2, "7f5f6f": 2, "7f3f5f": 2, "7f1f4f": 2, "7f003f": 2, "69d2e7": 2, "a7dbd8": 2, "e0e4cc": 2, "f38630": 2, "fa6900": 2, "fe4365": 2, "fc9d9a": 2, "f9cdad": 2, "c8c8a9": 2, "r": [2, 4, 11], "g": [2, 4], "b": [2, 4, 7], "nodewrap": 3, "socketwrap": 3, "socket": [3, 4, 5, 6], "repres": 3, "an": [3, 4, 5], "output": 3, "tree": [3, 4, 5, 6, 8, 11], "group": [3, 4, 5], "frame": [3, 4, 7, 11], "script": [3, 4, 7], "new_nod": 3, "new_link": 3, "update_modifi": 3, "convert_param_nam": 3, "get_param_nam": 3, "dispath_tre": 3, "decor": 3, "make": [3, 4, 5, 11], "reload": 3, "param": 3, "rt": 3, "bnode": 3, "bpy": [3, 4, 5, 6, 7, 8], "type": [3, 4, 5, 6, 7, 8], "initi": [3, 8], "properti": 3, "input": [3, 4, 5], "label": 3, "plug_input": 3, "inputs_al": 3, "list": [3, 4, 5, 8], "tupl": [3, 4, 11], "__setitem__": 3, "kei": [3, 5, 8], "valu": [3, 4, 5, 6, 7], "bsocket": [3, 4, 5], "nodesocket": [3, 4, 5, 6], "default_valu": 3, "bl_idnam": [3, 4, 5, 6], "__call__": 3, "name": [3, 4, 5, 7, 8, 11], "link_tree_output": 3, "index": [3, 4, 5, 7], "int": [3, 4, 5, 7, 8], "func_ret_to_tree_output": 3, "linked_to_group_output": 3, "classmethod": [3, 4], "default": [3, 5, 6], "min": [3, 4, 5, 7], "max": [3, 4, 5, 7], "descript": 3, "integ": [3, 4, 5, 7, 11], "boolean": [3, 4, 5, 7], "vector": [3, 4, 5, 7, 11], "geometri": [3, 4, 5, 7, 11], "mesh": [3, 4, 5, 7, 8, 11], "point": [3, 4, 5, 7], "volum": [3, 4, 5, 7], "instanc": [3, 4, 5, 7], "curv": [3, 4, 5, 7, 11], "string": [3, 4, 6, 7], "object": [3, 4, 5, 7, 8], "collect": [3, 4, 5, 7], "textur": [3, 4, 7], "materi": [3, 4, 5, 7, 11], "imag": [3, 4, 7], "shader": [3, 4, 7, 11], "node_tre": 3, "nodetre": [3, 6], "group_input_nod": 3, "group_output_nod": 3, "tree_output_nod": 3, "is_embed": 3, "true": [3, 4, 5, 6, 7, 8], "self": [3, 4, 6], "btree": 3, "i": [3, 4, 5, 7], "cur_fram": 3, "get": [3, 4], "current": [3, 4, 5], "layout": 3, "newli": 3, "new_group_nod": 3, "bsocket_from": 3, "bsocket_to": 3, "new_input": 3, "nodesocketgeometri": [3, 5], "new_output": 3, "kwarg": [3, 4], "__getitem__": [3, 5, 8], "nodefram": 3, "shadernodescript": [3, 7], "fac": [3, 4, 7, 11], "height": [3, 4, 5, 7], "nodesocketinterfac": 3, "inspect": 3, "paramet": [3, 4, 5, 11], "func": 3, "callabl": 3, "The": [3, 4, 5], "docstr": 3, "defin": [3, 4, 5], "exampl": [3, 4, 5], "def": [3, 11], "node_group_nam": 3, "A": [3, 4], "foo": 3, "froup": 3, "In": [3, 5], "doc": 3, "mat_nam": [3, 6], "mat": [3, 6, 8], "world_nam": 3, "world": [3, 4, 7], "light_nam": 3, "light": [3, 4], "scene_nam": 3, "compositor": 3, "angl": [4, 5, 7], "bsdf": [4, 7, 11], "inputbool": 4, "provid": [4, 5], "inputcolor": 4, "chosen": [4, 5], "picker": 4, "widget": 4, "inputrgb": 4, "inputimag": 4, "access": [4, 5], "file": [4, 6], "which": [4, 5], "allow": [4, 5], "you": [4, 5], "conveni": 4, "enter": 4, "switch": [4, 5, 7], "multipl": [4, 5], "inputint": 4, "inputmateri": 4, "singl": [4, 5], "It": [4, 5], "can": [4, 5], "connect": [4, 5, 6, 7], "other": [4, 5], "us": [4, 5], "same": [4, 5], "place": [4, 5], "more": [4, 5], "inputstr": 4, "attribut": [4, 5, 7, 11], "stringtocurv": 4, "each": [4, 5], "uniqu": 4, "charact": 4, "onc": 4, "further": 4, "ar": [4, 5], "inputvalu": 4, "simpl": [4, 5], "numer": 4, "inputfloat": 4, "inputvector": 4, "collectioninfo": 4, "info": 4, "inform": [4, 5], "control": [4, 5], "extern": [4, 7], "imageinfo": 4, "anim": 4, "arbitrari": [4, 5], "either": 4, "specif": [4, 5], "isviewport": 4, "viewport": [4, 5], "when": [4, 5], "evalu": [4, 5, 7], "For": [4, 5], "final": [4, 5], "render": [4, 5], "fals": [4, 5, 7], "objectinfo": 4, "directli": 4, "its": [4, 5], "via": 4, "transform": [4, 5], "selfobject": 4, "modifi": [4, 5], "being": 4, "execut": [4, 6], "retriev": [4, 5], "origin": [4, 5, 7], "geometrynodeview": [4, 7], "viewer": 4, "view": 4, "data": [4, 5, 6, 8, 9], "insid": [4, 5, 7], "spreadsheet": [4, 5], "editor": [4, 5], "3d": [4, 5, 7], "viewfloat": 4, "viewvector": 4, "viewinteg": 4, "viewcolor": 4, "viewboolean": 4, "bricktextur": 4, "brick": 4, "add": [4, 5, 7], "procedur": [4, 5], "produc": [4, 5], "checkertextur": 4, "checker": 4, "checkerboard": 4, "gradienttextur": [4, 11], "gradient": 4, "interpol": [4, 5, 7], "intens": 4, "imagetexturegeo": 4, "sampl": [4, 5, 7], "magictextur": 4, "magic": 4, "psychedel": 4, "musgravetextur": 4, "musgrav": 4, "fractal": 4, "perlin": 4, "nois": 4, "coordin": [4, 5], "unlik": 4, "also": [4, 5], "greater": 4, "over": 4, "how": [4, 5], "octav": 4, "combin": 4, "noisetextur": 4, "voronoitextur": 4, "voronoi": 4, "worlei": 4, "wavetextur": 4, "wave": 4, "band": [4, 7], "ring": [4, 5, 7], "distort": [4, 7], "whitenoisetextur": 4, "return": [4, 5, 11], "random": [4, 5, 7], "number": [4, 5], "seed": [4, 5, 7], "2d": [4, 5, 7], "4d": [4, 7], "depend": [4, 5], "dimens": [4, 5, 7], "rang": [4, 5, 7], "between": [4, 5], "zero": [4, 5], "one": [4, 5], "colorramp": 4, "ramp": 4, "map": [4, 5, 7], "combinecolor": 4, "composit": 4, "channel": 4, "model": 4, "mode": [4, 5, 7], "mixfloat": 4, "mix": [4, 7, 11], "work": [4, 5], "individu": [4, 5, 7], "correspond": [4, 5], "pixel": 4, "two": [4, 5], "call": 4, "context": [4, 5, 6], "mixvector": 4, "mixcolor": 4, "shadernodergbcurv": [4, 7], "correct": 4, "level": [4, 5, 6, 7], "adjust": [4, 5], "separatecolor": 4, "separ": [4, 5], "split": [4, 5], "combinexyz": [4, 11], "xyz": [4, 5], "compon": [4, 5, 7], "floatmath": 4, "math": [4, 5, 7], "perform": [4, 5], "oper": [4, 5, 6, 7], "vectormath": 4, "select": [4, 5, 6, 7], "booleanmath": 4, "basic": [4, 5], "logic": 4, "compar": [4, 7], "take": 4, "doe": [4, 5], "determin": [4, 5], "whether": [4, 5], "thei": [4, 5], "similar": [4, 5], "all": [4, 5, 6, 7], "ha": [4, 5], "complex": [4, 5], "comparison": 4, "help": 4, "reduc": 4, "necessari": [4, 5], "readabl": 4, "condit": [4, 5], "onli": [4, 5], "pass": [4, 5], "through": [4, 5], "comput": [4, 5], "randomfloat": 4, "like": [4, 5], "field": [4, 5], "randominteg": 4, "randomvector": 4, "randomboolean": 4, "inputposit": 4, "posit": [4, 5, 7, 11], "scenetim": [4, 11], "time": [4, 5], "": [4, 5], "unit": [4, 5], "second": [4, 7, 11], "ambientocclus": 4, "ambient": 4, "occlus": 4, "much": [4, 5], "hemispher": 4, "abov": 4, "shade": [4, 5], "occlud": 4, "weather": 4, "effect": [4, 5], "corner": [4, 5, 7], "environmenttextur": 4, "environment": 4, "your": 4, "environ": 4, "ies_textur": 4, "match": 4, "real": [4, 5], "store": [4, 5], "direct": [4, 5, 7], "distribut": [4, 5, 7], "imagetextur": 4, "pointdens": 4, "densiti": [4, 5, 7], "volumetr": 4, "particl": 4, "vertex": [4, 5], "anoth": [4, 5], "skytextur": 4, "sky": 4, "brightcontrast": 4, "bright": [4, 7], "contrast": [4, 7], "colorgamma": 4, "appli": [4, 5], "gamma": [4, 7], "huesatur": 4, "hue": [4, 7], "satur": [4, 7], "hsv": [4, 7], "lightfalloff": 4, "cycl": [4, 7], "shadernodebump": [4, 7], "bump": 4, "perturb": 4, "normal": [4, 5, 7], "nearbi": 4, "surfac": [4, 5, 7], "local": [4, 5, 7], "shadernodedisplac": [4, 7], "displac": [4, 7], "along": [4, 5], "detail": [4, 5, 7], "both": [4, 5], "bake": 4, "shadernodenorm": [4, 7], "dot": [4, 7], "product": 4, "shadernodenormalmap": [4, 7], "usual": 4, "chain": 4, "specifi": [4, 5], "tangent": [4, 5, 7], "space": [4, 5, 7], "uv": [4, 5, 7], "must": 4, "should": [4, 5], "set": [4, 5], "non": [4, 5], "give": [4, 5], "result": [4, 5, 7], "shadernodevectordisplac": [4, 7], "regular": [4, 5], "shadernodevectortransform": [4, 7], "camera": [4, 7], "shadernodeblackbodi": [4, 7], "blackbodi": 4, "temperatur": [4, 7], "emit": 4, "natur": 4, "occur": 4, "frequenc": 4, "shadernodecombinecolor": [4, 7], "shadernodergbtobw": [4, 7], "bw": 4, "scale": [4, 5, 7], "lumin": 4, "shadernodeseparatecolor": [4, 7], "shadernodewavelength": [4, 7], "wavelength": [4, 7], "achiev": 4, "spectrum": 4, "texturecoord": 4, "commonli": 4, "typic": [4, 5], "shadernodemap": [4, 7], "translat": [4, 5, 7], "rotat": [4, 5, 7], "shadergeometri": 4, "geometr": 4, "about": [4, 5], "incom": [4, 7], "avail": 4, "mixshad": 4, "togeth": [4, 5], "layer": 4, "where": [4, 5], "factor": [4, 5, 7, 11], "mai": [4, 5], "blend": [4, 7], "weight": [4, 5, 7], "shaderscript": 4, "possibl": [4, 5], "own": 4, "open": 4, "languag": 4, "osl": 4, "These": [4, 5], "cpu": 4, "optix": 4, "backend": 4, "wa": 4, "design": 4, "setup": 4, "To": 4, "link": [4, 5], "text": [4, 7], "block": [4, 6], "click": 4, "updat": [4, 5], "button": 4, "few": 4, "differ": [4, 5, 7], "wai": [4, 5], "With": 4, "intern": [4, 5, 7], "oso": 4, "bytecod": 4, "itself": [4, 5], "everyth": 4, "pack": [4, 5], "drive": 4, "automat": [4, 5], "compil": 4, "directori": 4, "done": 4, "manual": [4, 5], "user": [4, 6], "third": 4, "option": [4, 5], "just": [4, 5], "look": [4, 5], "up": [4, 5], "search": 4, "nodesocketfloat": 4, "true_float": 4, "util": [4, 5], "factor_float": [4, 7], "5": [4, 5, 7, 11], "b_float": [4, 7], "clamp_factor": [4, 7], "result_float": [4, 7], "to_color": 4, "color_start": 4, "color_end": 4, "to_norm": 4, "invert": [4, 5, 7], "strength": [4, 7], "distanc": [4, 5, 7], "to_str": 4, "decim": [4, 7], "represent": 4, "clamp": [4, 5, 7], "clamp_typ": [4, 7], "minmax": [4, 7], "minimum": [4, 5, 7], "maximum": [4, 7], "float_curv": 4, "to_integ": 4, "rounding_mod": [4, 7], "round": [4, 5, 7], "choic": 4, "method": [4, 5, 7], "floor": [4, 7], "ceil": [4, 7], "truncat": [4, 5, 7], "map_rang": [4, 11], "from_min": [4, 7], "from_max": [4, 7], "to_min": [4, 7], "to_max": [4, 7], "interpolation_typ": [4, 7], "step": [4, 7], "4": [4, 5, 7], "remap": 4, "target": [4, 5, 7], "smoothstep": [4, 7], "smootherstep": [4, 7], "value_001": [4, 7], "value_002": [4, 7], "use_clamp": [4, 7], "subtract": [4, 5, 7], "multipli": [4, 7], "divid": [4, 5, 7], "multiply_add": [4, 7], "power": [4, 7], "logarithm": [4, 7], "sqrt": [4, 7], "inverse_sqrt": [4, 7], "absolut": [4, 7], "expon": [4, 7], "less_than": [4, 7], "greater_than": [4, 7], "sign": [4, 7], "smooth_min": [4, 7], "smooth_max": [4, 7], "trunc": [4, 7], "fract": [4, 7], "modulo": [4, 7], "wrap": [4, 7], "snap": [4, 7], "pingpong": [4, 7], "sine": [4, 7], "cosin": [4, 7], "arcsin": [4, 7], "arccosin": [4, 7], "arctang": [4, 7], "arctan2": [4, 7], "sinh": [4, 7], "cosh": [4, 7], "tanh": [4, 7], "radian": [4, 5, 7], "degre": [4, 7], "__neg__": 4, "__add__": [4, 5], "__radd__": 4, "__sub__": 4, "__rsub__": 4, "__mul__": 4, "__rmul__": 4, "__truediv__": 4, "__rtruediv__": 4, "__eq__": [4, 8], "__ge__": 4, "__gt__": 4, "__le__": 4, "__lt__": 4, "addend": 4, "sum": [4, 5, 7], "rais": 4, "__pow__": 4, "log": 4, "log2": 4, "2": [4, 5, 6, 7, 11], "ln": 4, "square_root": 4, "squar": [4, 5], "root": [4, 5], "One": 4, "equival": [4, 5], "built": [4, 5], "ab": 4, "read": [4, 5], "without": [4, 5, 6], "regard": 4, "turn": [4, 5], "neg": 4, "__abs__": 4, "euler": [4, 5, 7], "smallest": 4, "largest": 4, "threshold": [4, 5, 7], "first": [4, 5], "smaller": [4, 5], "than": [4, 5], "otherwis": [4, 5], "larger": [4, 5], "extract": 4, "And": 4, "epsilon": [4, 7], "less": 4, "equal": [4, 5, 7], "smooth_minimum": 4, "smooth": [4, 5, 7], "smooth_maximum": 4, "nearest": [4, 5, 7], "__round__": 4, "down": 4, "__floor__": 4, "__ceil__": 4, "part": [4, 5], "__trunc__": 4, "fraction": [4, 7], "remaind": [4, 7], "__mod__": 4, "increment": 4, "move": [4, 5], "arcco": 4, "arctan": 4, "invers": 4, "measur": 4, "hyperbolic_sin": 4, "hyperbol": 4, "hyperbolic_cosin": 4, "hyperbolic_tang": 4, "nodesocketfloatangl": 4, "nodesocketvector": 4, "x": [4, 7, 11], "y": [4, 7, 11], "z": [4, 5, 7, 11], "line_to": 4, "end": [4, 5, 7, 11], "line": [4, 5, 7], "poli": [4, 5, 7], "spline": [4, 5, 7], "primit": [4, 5], "line_toward": 4, "length": [4, 5, 7], "true_vector": 4, "3": [4, 5, 7, 11], "b_vector": [4, 7], "factor_vector": [4, 7], "factor_mod": [4, 7], "uniform": [4, 5, 7], "result_vector": [4, 7], "separate_xyz": 4, "vector_curv": 4, "curvemap": 4, "rotation_typ": [4, 7], "axis_angl": [4, 7], "center": [4, 5, 7], "axi": [4, 5, 6, 7], "abil": 4, "around": [4, 5], "pivot": 4, "x_axi": [4, 7], "y_axi": [4, 7], "z_axi": [4, 7], "euler_xyz": [4, 7], "rotate_around_axi": 4, "rotate_around_x_axi": 4, "rotate_around_y_axi": 4, "rotate_around_z_axi": 4, "rotate_around_euler_xyz": 4, "rotate_object_eul": 4, "rotate_bi": [4, 7], "rotate_local_eul": 4, "rotate_object_around_axis_by_angl": 4, "rotate_local_around_axis_by_angl": 4, "vector_001": [4, 7], "vector_002": [4, 7], "cross_product": [4, 7], "project": [4, 7], "reflect": [4, 7], "refract": [4, 7], "faceforward": [4, 7], "dot_product": [4, 7], "scalar": 4, "entrywis": 4, "divis": 4, "addit": [4, 5], "cross": 4, "onto": [4, 5], "need": 4, "ior": [4, 7], "given": [4, 5], "incid": 4, "ratio": 4, "indic": [4, 5], "c": [4, 7], "orient": 4, "awai": 4, "a_x": 4, "b_x": 4, "a_i": 4, "b_y": 4, "a_z": 4, "b_z": 4, "If": [4, 5], "well": 4, "align_euler_to_vector": 4, "pivot_axi": [4, 7], "align": [4, 5, 7], "vector_typ": [4, 7], "locat": [4, 5, 7, 11], "nodesocketint": 4, "__ne__": 4, "nodesocketbool": 4, "true_bool": 4, "output_002": [4, 7], "AND": [4, 7], "boolean_001": [4, 7], "OR": [4, 7], "NOT": [4, 7], "nand": [4, 7], "nor": [4, 7], "xnor": [4, 7], "xor": [4, 7], "impli": [4, 7], "nimpli": [4, 7], "math_and": 4, "__and__": 4, "math_or": 4, "least": 4, "__or__": 4, "opposit": 4, "unari": 4, "e": [4, 5, 11], "someobject": 4, "__invert__": 4, "not_and": 4, "known": 4, "exclus": [4, 7], "unless": 4, "not_impli": 4, "substract": 4, "nodesocketstr": 4, "join": [4, 5], "delimit": [4, 7], "ani": [4, 5, 6], "order": [4, 5], "vertic": [4, 5, 7], "multi": 4, "replac": [4, 5, 7], "find": [4, 5, 7], "segment": [4, 5, 7], "slice": 4, "10": [4, 5, 7], "special_charact": 4, "special": 4, "t": [4, 5], "keyboard": 4, "line_break": [4, 7], "tab": [4, 7], "to_curv": [4, 5, 11], "align_x": [4, 7], "left": [4, 5, 7], "align_i": [4, 7], "top_baselin": [4, 7], "overflow": [4, 7], "pivot_mod": [4, 7], "bottom_left": [4, 7], "font": [4, 7], "size": [4, 5, 7], "character_spac": [4, 7], "word_spac": [4, 7], "line_spac": [4, 7], "text_box_width": [4, 7], "text_box_height": [4, 7], "right": [4, 5, 7], "justifi": [4, 7], "flush": [4, 7], "top": [4, 5, 7], "middl": [4, 5, 7], "bottom_baselin": [4, 7], "bottom": [4, 5, 7], "scale_to_fit": [4, 7], "midpoint": [4, 7], "top_left": [4, 7], "top_cent": [4, 7], "top_right": [4, 7], "bottom_cent": [4, 7], "bottom_right": [4, 7], "curve_inst": [4, 7], "pivot_point": [4, 5, 7], "nodesocketcolor": 4, "b_color": [4, 7], "blend_typ": [4, 7], "clamp_result": [4, 7], "darken": [4, 7], "burn": [4, 7], "lighten": [4, 7], "screen": [4, 7], "dodg": [4, 7], "overlai": [4, 7], "soft_light": [4, 7], "linear_light": [4, 7], "result_color": [4, 7], "rgb_curv": 4, "seper": 4, "hsl": [4, 7], "bright_contrast": 4, "hue_satur": 4, "normal_map": 4, "uv_map": [4, 5, 7], "blender_object": [4, 7], "blender_world": [4, 7], "to_background": 4, "background": [4, 5, 7], "emiss": [4, 7], "nodesocketshad": 4, "static": [4, 5], "attribute_typ": [4, 7], "attach": [4, 5], "view_lay": [4, 7], "bevel": [4, 5, 8], "radiu": [4, 5, 7, 11], "05": [4, 5, 7], "camera_data": 4, "rel": [4, 5, 7], "could": [4, 5], "chang": [4, 5], "custom": [4, 5], "fog": [4, 5], "view_vector": [4, 7], "view_z_depth": [4, 7], "view_dist": [4, 7], "fresnel": [4, 7], "45": [4, 7], "dielectr": 4, "off": 4, "rest": 4, "true_norm": [4, 7], "parametr": [4, 7], "6": [4, 5, 7], "backfac": [4, 7], "7": [4, 5, 7, 11], "pointi": [4, 7], "8": [4, 5, 7], "random_per_island": [4, 7], "hair_info": 4, "hair": 4, "is_strand": [4, 7], "intercept": [4, 7], "thick": [4, 7], "tangent_norm": [4, 7], "layer_weight": 4, "face": [4, 5, 7], "light_path": 4, "out": [4, 5], "kind": 4, "rai": [4, 5], "particularli": 4, "physic": 4, "trick": 4, "mean": [4, 5, 7], "is_camera_rai": [4, 7], "is_shadow_rai": [4, 7], "is_diffuse_rai": [4, 7], "is_glossy_rai": [4, 7], "is_singular_rai": [4, 7], "is_reflection_rai": [4, 7], "is_transmission_rai": [4, 7], "ray_length": [4, 5, 7], "ray_depth": [4, 7], "9": [4, 5, 7], "diffuse_depth": [4, 7], "glossy_depth": [4, 7], "11": [4, 5, 7], "transparent_depth": [4, 7], "12": [4, 5, 7], "transmission_depth": [4, 7], "shadernodeobjectinfo": [4, 7], "some": 4, "variat": 4, "assign": [4, 5], "randomli": [4, 5], "pick": 4, "object_index": [4, 7], "material_index": [4, 5, 7], "particle_info": 4, "ag": [4, 7], "lifetim": [4, 7], "veloc": [4, 7], "angular_veloc": [4, 7], "point_info": 4, "tangent_radi": 4, "anisotrop": [4, 7], "tangent_uv_map": 4, "texture_coord": 4, "from_instanc": [4, 7], "window": [4, 7], "activ": 4, "belong": 4, "color_attribut": [4, 7], "layer_nam": [4, 7], "volume_info": 4, "smoke": 4, "domain": [4, 5, 7], "flame": [4, 7], "wire_fram": 4, "use_pixel_s": [4, 7], "01": [4, 5, 7], "wirefram": 4, "edg": [4, 5, 7], "appear": 4, "As": 4, "triangul": [4, 5], "befor": 4, "process": [4, 5], "topologi": [4, 5], "alwai": [4, 5], "add_shad": 4, "shader_001": [4, 7], "lambertian": 4, "holdout": [4, 7], "hole": 4, "transpar": [4, 7], "see": [4, 5], "volumeprincipl": 4, "density_attribut": [4, 7], "anisotropi": [4, 7], "absorption_color": [4, 7], "emission_strength": [4, 7], "emission_color": [4, 7], "blackbody_intens": [4, 7], "blackbody_tint": [4, 7], "1000": [4, 7], "temperature_attribut": [4, 7], "principl": [4, 11], "easi": 4, "fire": 4, "includ": [4, 5], "scatter": 4, "absorpt": [4, 7], "subsurfacescatt": 4, "falloff": [4, 7], "random_walk": [4, 7], "subsurfac": [4, 7], "skin": 4, "wax": 4, "marbl": 4, "milk": 4, "rather": 4, "penetr": 4, "bounc": 4, "absorb": 4, "leav": 4, "burlei": [4, 7], "random_walk_fixed_radiu": [4, 7], "bssrdf": [4, 7], "volumeabsorpt": 4, "usag": [4, 5], "would": [4, 5], "water": 4, "glass": 4, "volumescatt": 4, "to_rgb": 4, "eeve": [4, 7], "ggx": [4, 7], "subsurface_method": [4, 7], "base_color": [4, 7, 11], "subsurface_radiu": [4, 7], "subsurface_color": [4, 7], "subsurface_ior": [4, 7], "subsurface_anisotropi": [4, 7], "metal": [4, 7], "specular": [4, 7], "specular_tint": [4, 7], "rough": [4, 7], "anisotropic_rot": [4, 7], "sheen": [4, 7], "sheen_tint": [4, 7], "clearcoat": [4, 7], "clearcoat_rough": [4, 7], "03": [4, 7], "transmiss": [4, 7], "transmission_rough": [4, 7], "clearcoat_norm": [4, 7], "disnei": 4, "pbr": 4, "compat": 4, "softwar": 4, "pixar": 4, "renderman": 4, "unreal": 4, "engin": 4, "paint": 4, "substanc": 4, "painter": 4, "multi_ggx": [4, 7, 11], "hairprincipl": 4, "018": [4, 7], "006": [4, 7], "002": [4, 7], "melanin": [4, 7], "melanin_red": [4, 7], "tint": [4, 7], "absorption_coeffici": [4, 7], "246": [4, 7], "52": [4, 7], "365": [4, 7], "radial_rough": [4, 7], "coat": [4, 7], "55": [4, 7], "offset": [4, 5, 7], "random_color": [4, 7], "random_rough": [4, 7], "beckmann": [4, 7], "ashikhmin_shirlei": [4, 7], "diffus": [4, 7], "oren": 4, "nayar": 4, "graze": 4, "pure": 4, "tend": 4, "caus": [4, 5], "due": 4, "caustic": 4, "sinc": 4, "trace": 4, "integr": 4, "veri": [4, 5], "good": 4, "shadow": 4, "here": 4, "sharp": [4, 7], "glossi": [4, 7], "microfacet": 4, "mirror": [4, 7], "roughnessu": [4, 7], "roughnessv": [4, 7], "transmit": 4, "best": 4, "consid": [4, 5], "build": 4, "quit": 4, "dark": 4, "emissive_color": [4, 7], "clear_coat": [4, 7], "clear_coat_rough": [4, 7], "clear_coat_norm": [4, 7], "ambient_occlus": [4, 7], "toon": 4, "transluc": 4, "straight": 4, "were": [4, 5], "affect": [4, 5], "somewhat": 4, "note": 4, "complet": [4, 5], "velvet": 4, "sigma": [4, 7], "nodesocketobject": 4, "object_info": 4, "transform_spac": [4, 7], "as_inst": [4, 7], "nodesocketcollect": 4, "nodesockettextur": 4, "nodesocketmateri": 4, "element": [4, 5, 7], "support": 4, "material_select": 4, "implicitli": [4, 5], "everi": [4, 5], "nodesocketimag": 4, "constant": [4, 5, 7], "separate_children": [4, 7], "reset_children": [4, 7], "width": [4, 5, 7], "has_alpha": [4, 7], "frame_count": [4, 7], "fp": [4, 7], "is_viewport": [4, 7], "self_object": [4, 7], "data_typ": [4, 5, 7], "value_003": [4, 7], "value_004": [4, 7], "float_vector": [4, 5, 7], "float_color": [4, 5, 7], "offset_frequ": [4, 7], "squash": [4, 7], "squash_frequ": [4, 7], "texture_map": [4, 7], "color1": [4, 7], "color2": [4, 7], "mortar": [4, 7], "mortar_s": [4, 7], "02": [4, 7], "mortar_smooth": [4, 7], "bia": [4, 7], "brick_width": [4, 7], "row_height": [4, 7], "25": [4, 5, 7], "color_map": [4, 7], "gradient_typ": [4, 7], "quadrat": [4, 5, 7], "eas": [4, 7], "diagon": [4, 7], "spheric": [4, 5, 7], "quadratic_spher": [4, 7], "radial": [4, 7], "extens": [4, 7], "repeat": [4, 7], "extend": [4, 7], "clip": [4, 5, 7], "closest": [4, 5, 7], "cubic": [4, 7], "turbulence_depth": [4, 7], "musgrave_dimens": [4, 7], "musgrave_typ": [4, 7], "fbm": [4, 7], "w": [4, 7], "lacunar": [4, 7], "gain": [4, 7], "1d": [4, 7], "multifract": [4, 7], "ridged_multifract": [4, 7], "hybrid_multifract": [4, 7], "hetero_terrain": [4, 7], "noise_dimens": [4, 7], "voronoi_dimens": [4, 7], "euclidean": [4, 7], "featur": [4, 7], "f1": [4, 7], "manhattan": [4, 7], "chebychev": [4, 7], "minkowski": [4, 7], "f2": [4, 7], "smooth_f1": [4, 7], "distance_to_edg": [4, 7], "n_sphere_radiu": [4, 7], "bands_direct": [4, 7], "rings_direct": [4, 7], "wave_profil": [4, 7], "wave_typ": [4, 7], "detail_scal": [4, 7], "detail_rough": [4, 7], "phase_offset": [4, 7], "saw": [4, 7], "tri": [4, 7], "a_float": [4, 7], "a_vector": [4, 7], "a_color": [4, 7], "a_int": [4, 7], "b_int": [4, 7], "a_vec3": [4, 7], "b_vec3": [4, 7], "a_col": [4, 7], "b_col": [4, 7], "a_str": [4, 7], "b_str": [4, 7], "001": [4, 5, 7], "averag": [4, 5, 7], "less_equ": [4, 7], "greater_equ": [4, 7], "not_equ": [4, 7], "input_typ": [4, 7], "switch_001": [4, 7], "false_001": [4, 7], "true_001": [4, 7], "false_002": [4, 7], "true_002": [4, 7], "false_003": [4, 7], "true_003": [4, 7], "false_004": [4, 7], "true_004": [4, 7], "false_005": [4, 7], "true_005": [4, 7], "false_006": [4, 7], "true_006": [4, 7], "false_007": [4, 7], "true_007": [4, 7], "false_008": [4, 7], "true_008": [4, 7], "false_009": [4, 7], "true_009": [4, 7], "false_010": [4, 7], "true_010": [4, 7], "false_011": [4, 7], "true_011": [4, 7], "output_001": [4, 7], "output_003": [4, 7], "output_004": [4, 7], "output_005": [4, 7], "output_006": [4, 5, 7], "output_007": [4, 7], "output_008": [4, 7], "output_009": [4, 7], "output_010": [4, 7], "output_011": [4, 7], "id": [4, 5, 7], "100": [4, 5, 6, 7], "probabl": [4, 7], "only_loc": [4, 7], "16": [4, 5, 7], "ao": [4, 7], "equirectangular": [4, 7], "image_us": [4, 7], "smart": [4, 7], "mirror_bal": [4, 7], "filepath": [4, 7], "flat": [4, 5, 7], "projection_blend": [4, 7], "box": [4, 5, 7], "sphere": [4, 5, 7], "tube": [4, 7], "particle_color_sourc": [4, 7], "particle_ag": [4, 7], "point_sourc": [4, 7], "particle_system": [4, 7], "vertex_color_sourc": [4, 7], "vertex_color": [4, 7], "resolut": [4, 5, 7, 11], "vertex_attribute_nam": [4, 7], "particle_spe": [4, 7], "particle_veloc": [4, 7], "vertex_weight": [4, 7], "vertex_norm": [4, 7], "sky_typ": [4, 7], "nishita": [4, 7], "air_dens": [4, 7], "altitud": [4, 7], "dust_dens": [4, 7], "ground_albedo": [4, 7], "ozone_dens": [4, 7], "sun_direct": [4, 7], "sun_disc": [4, 7], "sun_elev": [4, 7], "15": [4, 5, 7], "sun_intens": [4, 7], "sun_rot": [4, 7], "sun_siz": [4, 7], "545": [4, 7], "turbid": [4, 7], "preetham": [4, 7], "hosek_wilki": [4, 7], "midlevel": [4, 7], "convert_from": [4, 7], "convert_to": [4, 7], "1500": [4, 7], "val": [4, 7], "500": [4, 7], "shader1": 4, "shader2": 4, "shading_system": 4, "curvearc": 5, "arc": 5, "curvearcpoint": 5, "bezierseg": 5, "b\u00e9zier": 5, "handl": 5, "curvecircl": [5, 11], "circl": [5, 8, 11], "curvecirclepoint": 5, "curvelin": 5, "curvespir": 5, "spiral": 5, "shape": 5, "spring": 5, "By": 5, "twist": [5, 7], "clockwis": 5, "fashion": 5, "curvequadraticbezi": 5, "parabola": 5, "rectangl": [5, 7], "quadrilater": 5, "polygon": 5, "four": 5, "parallelogram": [5, 7], "trapezoid": [5, 7], "kite": [5, 7], "quadrangl": 5, "curvestar": 5, "star": 5, "pattern": 5, "altern": 5, "inner": 5, "so": 5, "lie": 5, "outer": 5, "meshcon": 5, "cone": [5, 8], "meshcub": 5, "cube": [5, 8, 11], "cuboid": 5, "variabl": 5, "side": [5, 7], "subdivis": [5, 7, 8], "still": 5, "hollow": 5, "meshcylind": 5, "cylind": 5, "meshgrid": 5, "grid": [5, 7], "planar": [5, 7], "xy": 5, "plane": [5, 8], "meshicospher": 5, "icospher": 5, "consist": 5, "triangl": [5, 7], "meshcircl": 5, "circular": 5, "fill": 5, "meshlin": 5, "them": 5, "meshuvspher": 5, "mostli": 5, "quad": 5, "except": 5, "pointsnod": 5, "cloud": 5, "radii": 5, "volumecub": 5, "scratch": 5, "voxel": 5, "rectangular": 5, "prism": 5, "merg": 5, "float_statistic_on_point": 5, "statist": 5, "entir": 5, "median": [5, 7], "standard_devi": [5, 7], "varianc": [5, 7], "float_statistic_on_edg": 5, "float_statistic_on_fac": 5, "float_statistic_on_corn": 5, "float_statistic_on_curv": 5, "float_statistic_on_inst": 5, "vector_statistic_on_point": 5, "13": [5, 7], "14": [5, 7], "vector_statistic_on_edg": 5, "vector_statistic_on_fac": 5, "vector_statistic_on_corn": 5, "vector_statistic_on_curv": 5, "vector_statistic_on_inst": 5, "domain_s": 5, "pointcloud": [5, 7], "point_count": [5, 7], "edge_count": [5, 7], "face_count": [5, 7], "face_corner_count": [5, 7], "spline_count": [5, 7], "instance_count": [5, 7], "blur_float_attribut": 5, "value_float": [5, 7], "iter": [5, 7], "blur": 5, "neighbor": 5, "blur_integer_attribut": 5, "value_int": [5, 7], "blur_vector_attribut": 5, "value_vector": [5, 7], "blur_color_attribut": 5, "value_color": [5, 7], "true_geometri": 5, "capture_vector_on_point": 5, "captur": 5, "capture_vector_on_edg": 5, "capture_vector_on_fac": 5, "capture_vector_on_corn": 5, "capture_vector_on_curv": 5, "capture_vector_on_inst": 5, "capture_float_on_point": 5, "capture_float_on_edg": 5, "capture_float_on_fac": 5, "capture_float_on_corn": 5, "capture_float_on_curv": 5, "capture_float_on_inst": 5, "capture_color_on_point": 5, "capture_color_on_edg": 5, "capture_color_on_fac": 5, "capture_color_on_corn": 5, "capture_color_on_curv": 5, "capture_color_on_inst": 5, "capture_boolean_on_point": 5, "value_bool": [5, 7], "capture_boolean_on_edg": 5, "capture_boolean_on_fac": 5, "capture_boolean_on_corn": 5, "capture_boolean_on_curv": 5, "capture_boolean_on_inst": 5, "capture_integer_on_point": 5, "capture_integer_on_edg": 5, "capture_integer_on_fac": 5, "capture_integer_on_corn": 5, "capture_integer_on_curv": 5, "capture_integer_on_inst": 5, "remove_attribut": 5, "remov": 5, "delet": 5, "certain": 5, "exist": [5, 7], "propag": 5, "expens": 5, "optim": 5, "even": 5, "lower": 5, "memori": 5, "_store_named_attribut": 5, "store_named_attribut": [5, 11], "alreadi": 5, "howev": 5, "keep": 5, "mind": 5, "cannot": 5, "byte_color": [5, 7], "float2": [5, 7], "stabl": 5, "identifi": 5, "start": [5, 7, 9], "necessarili": 5, "visibl": 5, "most": 5, "column": 5, "named_attribute_vector": 5, "attribute_vector": [5, 7], "named_attribute_float": 5, "attribute_float": [5, 7], "named_attribute_color": 5, "attribute_color": [5, 7], "named_attribute_boolean": 5, "attribute_bool": [5, 7], "named_attribute_integ": 5, "attribute_int": [5, 7], "nornal": 5, "thing": 5, "displai": 5, "set_id": 5, "yet": 5, "write": 5, "set_posit": [5, 11], "proxim": 5, "target_el": [5, 7], "source_posit": [5, 7], "raycast_vector": 5, "ray_direct": [5, 7], "raycast": 5, "intersect": [5, 7], "hit": 5, "is_hit": [5, 7], "hit_posit": [5, 7], "hit_norm": [5, 7], "hit_dist": [5, 7], "raycast_float": 5, "attribute_001": [5, 7], "raycast_color": 5, "attribute_002": [5, 7], "raycast_boolean": 5, "attribute_003": [5, 7], "raycast_integ": 5, "attribute_004": [5, 7], "sample_index": 5, "sample_float_index": 5, "sample_integer_index": 5, "sample_vector_index": 5, "sample_color_index": 5, "sample_boolean_index": 5, "sample_nearest": 5, "sample_posit": [5, 7], "instead": 5, "bound_box": 5, "bound": 5, "encapsul": 5, "bounding_box": [5, 7], "convex_hul": [5, 7], "convex": 5, "hull": 5, "enclos": 5, "behav": 5, "similarli": 5, "tool": 5, "edit": 5, "edge_fac": [5, 7], "only_fac": [5, 7], "duplicate_el": 5, "amount": [5, 7], "duplic": 5, "new": [5, 7], "exact": 5, "duplicate_index": [5, 7], "merge_by_dist": [5, 11], "within": 5, "surround": 5, "weld": 5, "per": 5, "separate_compon": 5, "point_cloud": [5, 7], "separate_edg": 5, "separate_fac": 5, "separate_curv": 5, "separate_inst": 5, "select_point": 5, "select_edg": 5, "select_fac": 5, "select_curv": 5, "select_inst": 5, "join_to_inst": 5, "visual": 5, "isn": 5, "actual": 5, "on_point": 5, "pick_inst": [5, 7], "instance_index": [5, 7], "refer": [5, 9], "present": 5, "fast": 5, "mani": 5, "underli": 5, "replace_materi": 5, "old": [5, 7], "swap": 5, "effici": 5, "set_materi": [5, 11], "reus": 5, "set_material_index": 5, "accumulate_float_on_point": 5, "group_index": [5, 7], "accumul": 5, "count": [5, 7], "run": 5, "total": [5, 7], "essenti": 5, "leading_float": [5, 7], "trailing_float": [5, 7], "total_float": [5, 7], "accumulate_float_on_edg": 5, "accumulate_float_on_fac": 5, "accumulate_float_on_corn": 5, "accumulate_float_on_curv": 5, "accumulate_float_on_inst": 5, "accumulate_integer_on_point": 5, "leading_integ": 5, "trailing_integ": 5, "total_integ": 5, "accumulate_integer_on_edg": 5, "accumulate_integer_on_fac": 5, "accumulate_integer_on_corn": 5, "accumulate_integer_on_curv": 5, "accumulate_integer_on_inst": 5, "accumulate_vector_on_point": 5, "leading_vector": [5, 7], "trailing_vector": [5, 7], "total_vector": [5, 7], "accumulate_vector_on_edg": 5, "accumulate_vector_on_fac": 5, "accumulate_vector_on_corn": 5, "accumulate_vector_on_curv": 5, "accumulate_vector_on_inst": 5, "evaluate_float_at_index_on_point": 5, "requir": 5, "becaus": 5, "evaluate_float_at_index_on_edg": 5, "evaluate_float_at_index_on_fac": 5, "evaluate_float_at_index_on_corn": 5, "evaluate_float_at_index_on_curv": 5, "evaluate_float_at_index_on_inst": 5, "evaluate_integer_at_index_on_point": 5, "evaluate_integer_at_index_on_edg": 5, "evaluate_integer_at_index_on_fac": 5, "evaluate_integer_at_index_on_corn": 5, "evaluate_integer_at_index_on_curv": 5, "evaluate_integer_at_index_on_inst": 5, "evaluate_vector_at_index_on_point": 5, "evaluate_vector_at_index_on_edg": 5, "evaluate_vector_at_index_on_fac": 5, "evaluate_vector_at_index_on_corn": 5, "evaluate_vector_at_index_on_curv": 5, "evaluate_vector_at_index_on_inst": 5, "evaluate_color_at_index_on_point": 5, "evaluate_color_at_index_on_edg": 5, "evaluate_color_at_index_on_fac": 5, "evaluate_color_at_index_on_corn": 5, "evaluate_color_at_index_on_curv": 5, "evaluate_color_at_index_on_inst": 5, "evaluate_boolean_at_index_on_point": 5, "evaluate_boolean_at_index_on_edg": 5, "evaluate_boolean_at_index_on_fac": 5, "evaluate_boolean_at_index_on_corn": 5, "evaluate_boolean_at_index_on_curv": 5, "evaluate_boolean_at_index_on_inst": 5, "evaluate_float_on_point": 5, "evaluate_float_on_edg": 5, "evaluate_float_on_fac": 5, "evaluate_float_on_corn": 5, "evaluate_float_on_curv": 5, "evaluate_float_on_inst": 5, "evaluate_integer_on_point": 5, "evaluate_integer_on_edg": 5, "evaluate_integer_on_fac": 5, "evaluate_integer_on_corn": 5, "evaluate_integer_on_curv": 5, "evaluate_integer_on_inst": 5, "evaluate_vector_on_point": 5, "evaluate_vector_on_edg": 5, "evaluate_vector_on_fac": 5, "evaluate_vector_on_corn": 5, "evaluate_vector_on_curv": 5, "evaluate_vector_on_inst": 5, "evaluate_color_on_point": 5, "evaluate_color_on_edg": 5, "evaluate_color_on_fac": 5, "evaluate_color_on_corn": 5, "evaluate_color_on_curv": 5, "evaluate_color_on_inst": 5, "evaluate_boolean_on_point": 5, "evaluate_boolean_on_edg": 5, "evaluate_boolean_on_fac": 5, "evaluate_boolean_on_corn": 5, "evaluate_boolean_on_curv": 5, "evaluate_boolean_on_inst": 5, "handle_posit": 5, "curve_length": 5, "ad": 5, "spline_length": 5, "revers": [5, 7], "tilt": [5, 7], "nurb": [5, 7], "endpoint_select": 5, "start_siz": [5, 7], "end_siz": [5, 7], "endpoint": 5, "handle_type_select": 5, "handle_typ": [5, 7], "free": [5, 7], "is_cycl": 5, "cyclic": [5, 7], "form": 5, "Its": 5, "far": 5, "might": 5, "sample_curv": 5, "use_all_curv": [5, 7], "curve_index": [5, 7], "calcul": 5, "linearli": 5, "sample_float": 5, "sample_integ": 5, "sample_vector": 5, "sample_color": 5, "sample_boolean": 5, "set_norm": 5, "minimum_twist": [5, 7], "z_up": [5, 7], "set_radiu": 5, "005": [5, 7], "profil": [5, 11], "set_tilt": 5, "That": 5, "set_handle_posit": 5, "alter": 5, "set_handle_typ": 5, "set_cycl": 5, "loop": 5, "back": 5, "But": 5, "made": 5, "last": 5, "set_resolut": 5, "resampl": 5, "set_spline_typ": 5, "spline_typ": [5, 7], "catmull_rom": [5, 7], "bezier": [5, 7], "to_mesh": [5, 11], "profile_curv": [5, 7, 11], "fill_cap": [5, 7], "to_point": 5, "deform_on_surfac": 5, "deform": 5, "purpos": 5, "fill_curv": 5, "constrain": 5, "delaunai": 5, "algorithm": 5, "boundari": 5, "ngon": [5, 7], "filled_mesh": 5, "filled_ngon": 5, "fillet_curv": 5, "limit_radiu": [5, 7], "fillet": 5, "portion": 5, "fillet_bezi": 5, "fillet_poli": 5, "interpolate_curv": 5, "guide_up": [5, 7], "guide_group_id": [5, 7], "point_up": [5, 7], "point_group_id": [5, 7], "max_neighbor": [5, 7], "have": 5, "easier": 5, "faster": 5, "while": 5, "high": 5, "closest_index": [5, 7], "closest_weight": [5, 7], "resample_length": 5, "resample_evalu": 5, "subdivid": 5, "cut": [5, 7], "trim_factor": [5, 11], "trim": 5, "shorten": 5, "section": 5, "trim_length": 5, "curve_of_point": 5, "point_index": [5, 7], "conceptu": 5, "index_in_curv": [5, 7], "offset_point_in_curv": 5, "walk": 5, "toward": 5, "is_valid_offset": [5, 7], "points_of_curv": 5, "sort_index": [5, 7], "edge_angl": 5, "meet": 5, "unsigned_angl": [5, 7], "signed_angl": [5, 7], "edge_neighbor": 5, "relat": 5, "edge_vertic": 5, "vertex_index_1": [5, 7], "vertex_index_2": [5, 7], "position_1": [5, 7], "position_2": [5, 7], "edges_to_face_group": 5, "boundary_edg": [5, 7], "region": 5, "face_group_id": [5, 7], "face_area": 5, "area": [5, 7], "blender": [5, 10], "matter": 5, "system": 5, "meter": 5, "face_neighbor": 5, "vertex_count": [5, 7], "faceset_boundari": 5, "face_set": [5, 7], "mark": 5, "seam": [5, 7], "unwrap": 5, "face_is_planar": 5, "n": [5, 11], "gon": 5, "word": 5, "is_shade_smooth": 5, "mesh_island": 5, "island": 5, "whenev": 5, "island_index": [5, 7], "island_count": [5, 7], "shortest_edge_path": 5, "end_vertex": [5, 7], "edge_cost": [5, 7], "shortest": 5, "cost": 5, "anyth": 5, "next_vertex_index": [5, 7], "total_cost": [5, 7], "vertex_neighbor": 5, "nearest_surfac": 5, "across": 5, "nearest_surface_float": 5, "nearest_surface_integ": 5, "nearest_surface_vector": 5, "nearest_surface_color": 5, "nearest_surface_boolean": 5, "sample_uv_surface_float": 5, "source_uv_map": [5, 7], "sample_uv": [5, 7], "lookup": 5, "is_valid": [5, 7], "sample_uv_surface_integ": 5, "sample_uv_surface_vector": 5, "sample_uv_surface_color": 5, "sample_uv_surface_boolean": 5, "set_shade_smooth": [5, 11], "shade_smooth": [5, 7], "dual_mesh": [5, 7], "keep_boundari": [5, 7], "dual": 5, "transfer": 5, "edge_paths_to_curv": 5, "start_vertic": [5, 7], "follow": 5, "edge_paths_to_select": 5, "visit": 5, "extrud": 5, "offset_scal": [5, 7], "extrude_fac": 5, "extrude_vertic": 5, "extrude_edg": 5, "flip_fac": 5, "flip": 5, "common": 5, "mesh_union": 5, "self_intersect": [5, 7], "hole_toler": [5, 7], "offer": 5, "intersecting_edg": [5, 7], "mesh_intersect": 5, "mesh_differ": 5, "break": 5, "continu": 5, "desir": 5, "import": [5, 11], "to_volum": 5, "resolution_mod": [5, 7], "voxel_amount": [5, 7], "voxel_s": [5, 7], "64": [5, 7], "exterior_band_width": [5, 7], "interior_band_width": [5, 7], "fill_volum": [5, 7], "scale_el": 5, "scale_mod": [5, 7], "share": 5, "case": 5, "single_axi": [5, 7], "split_edg": 5, "those": 5, "subdivide_mesh": 5, "subdivision_surfac": 5, "uv_smooth": [5, 7], "preserve_boundari": [5, 7], "boundary_smooth": [5, 7], "edge_creas": [5, 7], "vertex_creas": [5, 7], "catmul": 5, "clark": 5, "preserve_corn": [5, 7], "preserve_corners_and_junct": [5, 7], "preserve_corners_junctions_and_concav": [5, 7], "smooth_al": [5, 7], "ngon_method": [5, 7], "beauti": [5, 7], "quad_method": [5, 7], "shortest_diagon": [5, 7], "minimum_vertic": [5, 7], "triangular": 5, "fix": [5, 7], "fixed_altern": [5, 7], "longest_diagon": [5, 7], "corners_of_fac": 5, "face_index": [5, 7], "corner_index": [5, 7], "corners_of_vertex": 5, "vertex_index": [5, 7], "gather": 5, "sort": 5, "edges_of_corn": 5, "next_edge_index": [5, 7], "previous_edge_index": [5, 7], "edges_of_vertex": 5, "sever": 5, "edge_index": [5, 7], "face_of_corn": 5, "index_in_fac": [5, 7], "offset_corner_in_fac": 5, "vertex_of_corn": 5, "pack_uv_island": 5, "margin": [5, 7], "uv_unwrap": 5, "angle_bas": [5, 7], "fill_hol": [5, 7], "upon": 5, "conform": [5, 7], "distribute_points_on_fac": 5, "distribute_method": [5, 7], "use_legacy_norm": [5, 7], "distance_min": [5, 7], "density_max": [5, 7], "density_factor": [5, 7], "addition": 5, "poisson": [5, 7], "to_vertic": 5, "rotate_inst": 5, "local_spac": [5, 7], "global": 5, "scale_inst": 5, "translate_inst": 5, "realize_inst": 5, "legacy_behavior": [5, 7], "realiz": 5, "wherea": 5, "becom": 5, "wors": 5, "fundament": 5, "limit": 5, "distribute_points_random": 5, "distribute_points_grid": 5, "adapt": [5, 7], "start_angl": [5, 7], "sweep_angl": [5, 7], "315": [5, 7], "connect_cent": [5, 7], "invert_arc": [5, 7], "offset_angl": [5, 7], "start_handl": [5, 7], "end_handl": [5, 7], "32": [5, 7], "point_1": [5, 7], "point_2": [5, 7], "point_3": [5, 7], "start_radiu": [5, 7], "end_radiu": [5, 7], "bottom_width": [5, 7], "top_width": [5, 7], "bottom_height": [5, 7], "top_height": [5, 7], "point_4": [5, 7], "inner_radiu": [5, 7], "outer_radiu": [5, 7], "outer_point": [5, 7], "fill_typ": [5, 7], "side_seg": [5, 7], "fill_seg": [5, 7], "radius_top": [5, 7], "radius_bottom": [5, 7], "depth": [5, 7], "triangle_fan": [5, 7], "vertices_x": [5, 7], "vertices_i": [5, 7], "vertices_z": [5, 7], "size_x": [5, 7], "size_i": [5, 7], "count_mod": [5, 7], "start_loc": [5, 7], "end_point": [5, 7], "resolution_x": [5, 7], "resolution_i": [5, 7], "resolution_z": [5, 7], "item": 5, "na_pt_nodepanel": 6, "na_ot_nodebutton": 6, "arrang": 6, "na_ot_nodebutton2": 6, "na_ot_nodebuttonodd": 6, "unlink": 6, "purgeorphanrecurs": 6, "clear": 6, "orphan": 6, "na_ot_arrangenodesop": 6, "get_nodes_from_categori": 6, "get_first_enabled_output": 6, "is_visible_socket": 6, "node_mid_pt": 6, "abs_node_loc": 6, "get_active_tre": 6, "get_group_output_nod": 6, "nodemargin": 6, "outputnode_search": 6, "nodes_iter": 6, "nodes_odd": 6, "nodes_arrang": 6, "nodetree_get": 6, "nodes_cent": 6, "category_nam": 6, "average_i": 6, "x_last": 6, "margin_x": 6, "margin_i": 6, "20": [6, 7], "multilin": 6, "panel": 6, "bl_label": 6, "bl_space_typ": 6, "node_editor": 6, "bl_region_typ": 6, "ui": 6, "bl_categori": 6, "draw": 6, "invok": 6, "arrange2": 6, "select_unlink": 6, "outlin": 6, "orphans_purge_recurs": 6, "purg": 6, "arrange_nodetre": 6, "privat": 6, "op": [6, 8], "prop": 6, "stringproperti": 6, "intproperti": 6, "120": 6, "nodemargin2": 6, "ntree": 6, "nodelist": 6, "geometrynodeattributestatist": 7, "geometrynodeattributedomains": 7, "geometrynodeblurattribut": 7, "geometrynodecaptureattribut": 7, "geometrynoderemoveattribut": 7, "geometrynodestorenamedattribut": 7, "functionnodeinputbool": 7, "functionnodeinputcolor": 7, "geometrynodeinputimag": 7, "functionnodeinputint": 7, "geometrynodeinputmateri": 7, "functionnodeinputstr": 7, "shadernodevalu": 7, "functionnodeinputvector": 7, "geometrynodecollectioninfo": 7, "geometrynodeimageinfo": 7, "geometrynodeisviewport": 7, "geometrynodeobjectinfo": 7, "geometrynodeselfobject": 7, "geometrynodeinputid": 7, "geometrynodeinputindex": 7, "geometrynodeinputnamedattribut": 7, "geometrynodeinputnorm": 7, "geometrynodeinputposit": 7, "geometrynodeinputradiu": 7, "geometrynodesetid": 7, "geometrynodesetposit": 7, "geometrynodeproxim": 7, "geometrynoderaycast": 7, "geometrynodesampleindex": 7, "geometrynodesamplenearest": 7, "geometrynodeboundbox": 7, "geometrynodeconvexhul": 7, "geometrynodedeletegeometri": 7, "geometrynodeduplicateel": 7, "geometrynodemergebydist": 7, "geometrynodetransform": 7, "geometrynodeseparatecompon": 7, "geometrynodeseparategeometri": 7, "geometrynodejoingeometri": 7, "geometrynodegeometrytoinst": 7, "geometrynodeinputcurvehandleposit": 7, "geometrynodecurvelength": 7, "geometrynodeinputtang": 7, "geometrynodeinputcurvetilt": 7, "geometrynodecurveendpointselect": 7, "geometrynodecurvehandletypeselect": 7, "geometrynodeinputsplinecycl": 7, "geometrynodesplinelength": 7, "geometrynodesplineparamet": 7, "geometrynodeinputsplineresolut": 7, "geometrynodesamplecurv": 7, "geometrynodesetcurvenorm": 7, "geometrynodesetcurveradiu": 7, "geometrynodesetcurvetilt": 7, "geometrynodesetcurvehandleposit": 7, "geometrynodecurvesethandl": 7, "geometrynodesetsplinecycl": 7, "geometrynodesetsplineresolut": 7, "geometrynodecurvesplinetyp": 7, "geometrynodecurvetomesh": 7, "geometrynodecurvetopoint": 7, "geometrynodedeformcurvesonsurfac": 7, "geometrynodefillcurv": 7, "geometrynodefilletcurv": 7, "geometrynodeinterpolatecurv": 7, "guide_curv": 7, "geometrynoderesamplecurv": 7, "geometrynodereversecurv": 7, "geometrynodesubdividecurv": 7, "geometrynodetrimcurv": 7, "geometrynodecurvearc": 7, "geometrynodecurveprimitivebezierseg": 7, "geometrynodecurveprimitivecircl": 7, "geometrynodecurveprimitivelin": 7, "geometrynodecurvespir": 7, "geometrynodecurvequadraticbezi": 7, "geometrynodecurveprimitivequadrilater": 7, "geometrynodecurvestar": 7, "geometrynodecurveofpoint": 7, "geometrynodeoffsetpointincurv": 7, "geometrynodepointsofcurv": 7, "geometrynodeinstanceonpoint": 7, "geometrynodeinstancestopoint": 7, "geometrynoderotateinst": 7, "geometrynodescaleinst": 7, "geometrynodetranslateinst": 7, "geometrynoderealizeinst": 7, "geometrynodeinputinstancerot": 7, "geometrynodeinputinstancescal": 7, "geometrynodeinputmeshedgeangl": 7, "geometrynodeinputmeshedgeneighbor": 7, "geometrynodeinputmeshedgevertic": 7, "geometrynodeedgestofacegroup": 7, "geometrynodeinputmeshfacearea": 7, "geometrynodeinputmeshfaceneighbor": 7, "geometrynodemeshfacesetboundari": 7, "geometrynodeinputmeshfaceisplanar": 7, "geometrynodeinputshadesmooth": 7, "geometrynodeinputmeshisland": 7, "geometrynodeinputshortestedgepath": 7, "geometrynodeinputmeshvertexneighbor": 7, "geometrynodesamplenearestsurfac": 7, "geometrynodesampleuvsurfac": 7, "geometrynodesetshadesmooth": 7, "geometrynodedualmesh": 7, "geometrynodeedgepathstocurv": 7, "geometrynodeedgepathstoselect": 7, "geometrynodeextrudemesh": 7, "geometrynodeflipfac": 7, "geometrynodemeshboolean": 7, "union": 7, "geometrynodemeshtocurv": 7, "geometrynodemeshtopoint": 7, "geometrynodemeshtovolum": 7, "geometrynodescaleel": 7, "geometrynodesplitedg": 7, "geometrynodesubdividemesh": 7, "geometrynodesubdivisionsurfac": 7, "geometrynodetriangul": 7, "geometrynodemeshcon": 7, "geometrynodemeshcub": 7, "geometrynodemeshcylind": 7, "geometrynodemeshgrid": 7, "geometrynodemeshicospher": 7, "geometrynodemeshcircl": 7, "geometrynodemeshlin": 7, "geometrynodemeshuvspher": 7, "geometrynodecornersoffac": 7, "geometrynodecornersofvertex": 7, "geometrynodeedgesofcorn": 7, "geometrynodeedgesofvertex": 7, "geometrynodefaceofcorn": 7, "geometrynodeoffsetcornerinfac": 7, "geometrynodevertexofcorn": 7, "geometrynodeuvpackisland": 7, "geometrynodeuvunwrap": 7, "geometrynodedistributepointsinvolum": 7, "density_random": 7, "density_grid": 7, "geometrynodedistributepointsonfac": 7, "geometrynodepoint": 7, "geometrynodepointstovertic": 7, "geometrynodepointstovolum": 7, "geometrynodesetpointradiu": 7, "geometrynodevolumecub": 7, "geometrynodevolumetomesh": 7, "geometrynodereplacemateri": 7, "geometrynodeinputmaterialindex": 7, "geometrynodematerialselect": 7, "geometrynodesetmateri": 7, "geometrynodesetmaterialindex": 7, "shadernodetexbrick": 7, "shadernodetexcheck": 7, "shadernodetexgradi": 7, "geometrynodeimagetextur": 7, "shadernodetexmag": 7, "shadernodetexmusgrav": 7, "shadernodetexnois": 7, "shadernodetexvoronoi": 7, "shadernodetexwav": 7, "shadernodetexwhitenois": 7, "shadernodevaltorgb": 7, "functionnodecombinecolor": 7, "shadernodemix": 7, "non_uniform": 7, "functionnodeseparatecolor": 7, "geometrynodestringjoin": 7, "functionnodereplacestr": 7, "functionnodeslicestr": 7, "functionnodeinputspecialcharact": 7, "functionnodestringlength": 7, "geometrynodestringtocurv": 7, "functionnodevaluetostr": 7, "shadernodecombinexyz": 7, "shadernodeseparatexyz": 7, "shadernodevectorcurv": 7, "shadernodevectormath": 7, "shadernodevectorrot": 7, "geometrynodeaccumulatefield": 7, "geometrynodefieldatindex": 7, "geometrynodefieldondomain": 7, "functionnodebooleanmath": 7, "shadernodeclamp": 7, "functionnodecompar": 7, "shadernodefloatcurv": 7, "functionnodefloattoint": 7, "shadernodemaprang": 7, "shadernodemath": 7, "functionnodealigneulertovector": 7, "functionnoderotateeul": 7, "functionnoderandomvalu": 7, "geometrynodeswitch": 7, "shadernodeambientocclus": 7, "shadernodeattribut": 7, "shadernodebevel": 7, "shadernodecameradata": 7, "shadernodefresnel": 7, "shadernodenewgeometri": 7, "shadernodehairinfo": 7, "shadernodelayerweight": 7, "shadernodelightpath": 7, "shadernodeparticleinfo": 7, "shadernodepointinfo": 7, "shadernodergb": 7, "shadernodetang": 7, "direction_typ": 7, "shadernodetexcoord": 7, "shadernodeuvmap": 7, "shadernodevertexcolor": 7, "shadernodevolumeinfo": 7, "shadernodewirefram": 7, "shadernodeoutputaov": 7, "shadernodeoutputmateri": 7, "shadernodeoutputlight": 7, "shadernodeoutputworld": 7, "shadernodeaddshad": 7, "shadernodebsdfanisotrop": 7, "shadernodebackground": 7, "shadernodebsdfdiffus": 7, "shadernodeemiss": 7, "shadernodebsdfglass": 7, "shadernodebsdfglossi": 7, "shadernodebsdfhair": 7, "shadernodeholdout": 7, "shadernodemixshad": 7, "shadernodebsdfprincipl": 7, "shadernodebsdfhairprincipl": 7, "shadernodevolumeprincipl": 7, "shadernodebsdfrefract": 7, "shadernodeeeveespecular": 7, "shadernodesubsurfacescatt": 7, "shadernodebsdftoon": 7, "shadernodebsdftransluc": 7, "shadernodebsdftranspar": 7, "shadernodebsdfvelvet": 7, "shadernodevolumeabsorpt": 7, "shadernodevolumescatt": 7, "shadernodetexenviron": 7, "shadernodetexi": 7, "shadernodeteximag": 7, "shadernodetexpointdens": 7, "shadernodetexski": 7, "shadernodebrightcontrast": 7, "shadernodegamma": 7, "shadernodehuesatur": 7, "shadernodeinvert": 7, "shadernodelightfalloff": 7, "shadernodeshadertorgb": 7, "geometrynodeinputscenetim": 7, "mean_001": 7, "median_001": 7, "sum_001": 7, "min_001": 7, "max_001": 7, "range_001": 7, "standard_deviation_001": 7, "variance_001": 7, "target_geometri": 7, "start_001": 7, "end_001": 7, "mesh_1": 7, "mesh_2": 7, "color_ramp": 7, "leading_int": 7, "trailing_int": 7, "total_int": 7, "from_min_float3": 7, "from_max_float3": 7, "to_min_float3": 7, "to_max_float3": 7, "steps_float3": 7, "min_002": 7, "max_002": 7, "17": 7, "18": 7, "19": 7, "21": 7, "22": 7, "23": 7, "24": 7, "attribute_nam": 7, "is_active_output": 7, "objtyp": 8, "o": [8, 11], "mod": [8, 11], "enum": 8, "__matmul__": 8, "primitive_plane_add": 8, "primitive_cube_add": 8, "ico_spher": 8, "primitive_ico_sphere_add": 8, "monkei": 8, "nurbs_path": 8, "geometry_nod": [8, 11], "subsurf": 8, "slot": 8, "__o": 8, "bool": 8, "__hash__": 8, "dict": 8, "load": [8, 11], "clear_anim": 8, "parse_modifi": 8, "k": 8, "v": 8, "obj": 8, "parse_mat_slot": 8, "material_nam": 8, "content": 9, "\u8bf4\u660e": [], "\u5feb\u901f\u5165\u95e8": [], "\u83b7\u53d6\u516c\u5f0f": 9, "\u7b2c\u4e00\u4e2a\u8282\u70b9\u6811": 9, "\u7531\u5750\u6807\u751f\u6210\u66f2\u7ebf": 9, "\u7531\u66f2\u7ebf\u751f\u6210\u7f51\u683c\u9762": 9, "\u573a\u666f\u7ba1\u7406": 9, "\u53ef\u9009": 9, "\u5b8c\u6574\u4ee3\u7801": 9, "api": 9, "submodul": 9, "packag": 9, "function": [9, 11], "\u5236\u4f5c\u4e00\u4e2a\u53c2\u6570\u5316\u73af\u5f62\u626d\u7ed3": 11, "\u4e00\u4e2a": [10, 11], "p": 11, "q": 11, "toru": 11, "knot": 11, "\u662f\u901a\u8fc7\u5c06\u4e00\u6839\u5f26\u7ed5\u5706\u73afp\u6b21": 11, "\u5728\u8fde\u63a5\u5176\u4e24\u7aef\u4e4b\u524d\u8f6cq\u5708\u5f97\u5230\u7684": 11, "\u5176\u4e2dp\u548cq\u4e92\u8d28": 11, "\u4ece\u7ef4\u57fa\u767e\u79d1\u83b7\u53d6": 11, "\u8ba1\u7b97\u516c\u5f0f": 11, "begin": 11, "arrai": 11, "l": 11, "phi": 11, "\u5176\u4e2d": 11, "pi": 11, "\u5b9a\u4e49\u4e00\u4e2a\u8282\u70b9\u6811": 11, "\u5bf9\u5e94\u4e0a\u9762\u7684\u516c\u5f0f": 11, "gn": 11, "\u8ba1\u7b97\u5750\u6807": 11, "\u03c6": 11, "\u88ab\u88c5\u9970\u5668\u88c5\u9970\u7684\u51fd\u6570\u540d": 11, "\u4f1a\u88ab\u5f53\u6210\u8282\u70b9\u6811\u7684\u540d\u5b57": 11, "\u5982\u679c\u4e0d\u9700\u8981\u4fee\u6539\u7ec4\u8f93\u51fa\u7684\u540d\u5b57": 11, "\u51fd\u6570\u8fd4\u56de\u53ef\u4ee5\u76f4\u63a5\u5199\u6210": 11, "\u5728": 11, "vscode": [10, 11], "\u4e2d": [10, 11], "\u5c06\u9f20\u6807\u653e\u5728\u51fd\u6570\u540d\u4e0a": 11, "\u4f1a\u6709\u7c7b\u578b\u63d0\u793a": 11, "\u51fd\u6570\u7b7e\u540d\u4e2d\u7684\u7c7b\u578b\u63d0\u793a\u4e0d\u53ef\u7701\u7565": 11, "\u5bf9\u4e8e\u4e00\u822c\u7684python\u7a0b\u5e8f\u800c\u8a00": 11, "\u7c7b\u578b\u63d0\u793a\u662f\u53ef\u6709\u53ef\u65e0\u7684": 11, "\u5c31\u50cf\u6ce8\u91ca\u4e00\u6837": 11, "\u4e0d\u5f71\u54cd\u7a0b\u5e8f\u8fd0\u884c": 11, "\u4f46\u5728": 11, "geonod": 10, "\u7a0b\u5e8f\u4f9d\u9760\u7c7b\u578b\u63d0\u793a\u5de5\u4f5c": 11, "\u73af\u5f62\u626d\u7ed3": 11, "\u7ed3\u675f": 11, "\u4fee\u526a\u7ed3\u675f\u767e\u5206\u6bd4": 11, "128": 11, "\u91c7\u6837": 11, "\u603b\u7aef\u70b9\u6570": 11, "\u521b\u5efa\u4e00\u4e2a\u57fa\u672c\u5706\u5f62\u66f2\u7ebf\u8282\u70b9": 11, "\u628a\u8f93\u51fa\u7aef\u53e3\u7684\u51e0\u4f55\u6570\u636e\u590d\u5236\u7ed9": 11, "\u628a\u4e0a\u9762\u5b9a\u4e49\u7684\u8282\u70b9\u6811\u5f53\u505a\u51fd\u6570\u6765\u8c03\u7528": 11, "param_factor": 11, "\u7528\u83b7\u53d6\u7684\u5750\u6807\u6765\u7ed9\u66f2\u7ebf\u8bbe\u7f6e\u4f4d\u7f6e": 11, "\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u4fee\u526a\u8282\u70b9": 11, "\u6309\u6bd4\u4f8b\u4fee\u526a\u66f2\u7ebf": 11, "\u521b\u5efa\u4e00\u4e2aframe": 11, "\u5904\u7406\u9996\u5c3e\u76f8\u63a5\u7684\u95ee\u9898": 11, "with\u8bed\u53e5\u4f5c\u7528\u57df\u5185\u521b\u5efa\u7684\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u5728\u8fd9\u4e2aframe\u5185": 11, "\u4e0a\u9762\u7684\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u8ba9\u66f2\u7ebf\u9996\u5c3e\u7684\u6cd5\u7ebf\u5bf9\u9f50": 11, "\u8fd9\u6837\u5728\u540e\u9762\u751f\u6210\u7f51\u683c\u9762\u65f6": 11, "\u4e0d\u4f1a\u65ad\u5f00": 11, "\u88ab\u88c5\u9970\u5668\u88c5\u9970\u540e": 11, "\u51fd\u6570\u7684\u53c2\u6570\u4ee3\u8868\u7ec4\u8f93\u5165": 11, "\u53ef\u4ee5\u4e3a\u7ec4\u8f93\u5165\u8bbe\u7f6e\u9ed8\u8ba4\u503c": 11, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 11, "\u7ec4\u8f93\u5165\u7684\u540d\u5b57\u662f\u53c2\u6570\u540d": 11, "\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5143\u7ec4": 11, "\u5143\u7ec4\u5185\u7684\u5143\u7d20\u5206\u522b\u4ee3\u8868": 11, "\u9ed8\u8ba4\u503c": 11, "\u540d\u5b57": 11, "\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c": 11, "\u88ab\u88c5\u9970\u5668": 11, "\u88c5\u9970\u7684\u51fd\u6570": 11, "\u65e0\u8bba\u662f\u5728\u5b9a\u4e49\u65f6": 11, "\u8fd8\u662f\u8c03\u7528\u65f6": 11, "\u4f20\u7ed9\u5b83\u7684\u53c2\u6570\u5e76\u4e0d\u4f1a": 11, "\u771f\u7684": 11, "\u5728\u51fd\u6570\u4f53\u5185\u90e8\u6267\u884c": 11, "\u8fd9\u4e00\u70b9\u5bf9\u4e8epython\u521d\u5b66\u8005\u6765\u8bf4": 11, "\u53ef\u80fd\u5f88\u56f0\u60d1": 11, "\u4e0d\u8fc7\u4f60\u53ea\u9700\u8981\u77e5\u9053": 11, "\u5728\u88c5\u9970\u5668\u7684\u5177\u4f53\u5b9e\u73b0\u4e2d": 11, "\u7528\u4e86\u4e00\u5957\u5077\u6881\u6362\u67f1\u7684\u65b9\u6cd5": 11, "snake_cas": 11, "\u7684\u51fd\u6570\u540d": 11, "\u4f1a\u88ab\u8f6c\u5316\u6210": 11, "\u4f5c\u4e3a\u8282\u70b9\u6811\u7684\u540d\u5b57": 11, "256": 11, "\u7528\u6765\u626b\u63cf\u7684\u6837\u677f\u5706\u7684\u534a\u5f84": 11, "\u8c03\u7528\u8282\u70b9\u6811\u51fd\u6570": 11, "\u521b\u5efa\u8282\u70b9": 11, "\u5c06\u66f2\u7ebf\u8f6c\u5316\u6210\u7f51\u683c\u9762": 11, "\u4ee5\u4e0b\u53ef\u9009": 11, "\u8bbe\u7f6e\u5e73\u6ed1\u548c\u6750\u8d28": 11, "\u4ece\u4ee5\u4e0a\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa": 11, "\u8282\u70b9\u7684\u521b\u5efa\u53ef\u4ee5\u7531\u4e00\u5957\u94fe\u5f0f\u8c03\u7528\u5b9e\u73b0": 11, "\u81f3\u4e8e\u6709\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u8c03\u7528": 11, "\u53d6\u51b3\u4e8e\u7aef\u53e3\u7684\u6570\u636e\u7c7b\u578b": 11, "\u4e25\u683c\u7c7b\u578b\u68c0\u67e5\u7684\u597d\u5904\u662f": 11, "\u53ef\u4ee5\u8ba9ide\u81ea\u52a8\u63d0\u793a\u5f53\u524d\u5bf9\u8c61\u6709\u54ea\u4e9b\u65b9\u6cd5": 11, "\u5230\u6b64": 11, "\u51e0\u4f55\u8282\u70b9\u6811\u521b\u5efa\u5b8c\u6210": 11, "\u540e\u9762\u53ea\u9700\u8981\u5728blender\u4e2d\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u51e0\u4f55\u8282\u70b9\u4fee\u6539\u5668": 11, "\u8282\u70b9\u6811\u8bbe\u7f6e\u6210geometri": 11, "\u4fbf\u80fd\u5f97\u5230\u4e00\u4e2a\u73af\u5f62\u626d\u7ed3": 11, "\u53e6\u5916": 11, "\u4e5f\u80fd\u8fdb\u884c\u573a\u666f\u7ba1\u7406": 11, "node_group": 11, "230": 11, "\u7b2c1\u5e27\u548c\u7b2c230\u5e27\u8bbe\u7f6e\u5173\u952e\u5e27": 11, "select_set": [], "tau": 11, "\u53ef\u4ee5\u5728\u6750\u8d28\u8282\u70b9\u4e2d\u4f7f\u7528\u547d\u540d\u5c5e\u6027": [], "\u867d\u7136\u672c\u6a21\u5757\u8131\u80ce\u81ea": 10, "\u4f46\u5b9e\u73b0\u903b\u8f91\u548c\u4f7f\u7528\u65b9\u6cd5\u5df2\u5b8c\u5168\u4e0d\u540c": 10, "\u4e3a\u4e86\u65b9\u4fbf": [], "\u540c\u65f6\u4fdd\u8bc1\u4e0d\u4f1a\u6c61\u67d3\u547d\u540d\u7a7a\u95f4": [], "\u6709\u5927\u91cf\u7684\u6570\u636e\u7c7b\u578b\u7531\u547d\u540d\u7a7a\u95f4\u66b4\u9732": [], "\u9ed8\u8ba4\u6a21\u5757\u540d\u53ea\u6709\u4e24\u4e2a\u5b57\u6bcd": [], "\u4f60\u82e5\u613f\u610f": [], "\u53ef\u4ee5\u6539\u4e3a\u5176\u4ed6\u4efb\u4f55\u540d\u5b57": [], "\u800c\u4e0d\u7528\u62c5\u5fc3\u5b50\u6a21\u5757\u7684\u5f15\u7528\u95ee\u9898": [], "\u56e0\u4e3a\u5b50\u6a21\u5757\u4f7f\u7528\u7684\u90fd\u662f\u76f8\u5bf9\u5f15\u7528": [], "\u5728\u672c\u6587\u6863\u4e2d\u63d0\u5230\u7684": [], "\u4e13\u6307\u672c\u6a21\u5757": [], "\u5728\u4f7f\u7528": 10, "\u524d": 10, "\u4f60\u5fc5\u987b\u5148\u4e86\u89e3": 10, "\u51e0\u4f55\u8282\u70b9": [], "python": 10, "\u8bed\u8a00": 10, "\u5982\u4f55\u5728": 10, "\u4e2d\u6267\u884c": 10, "\u811a\u672c": 10, "\u5bf9\u51e0\u4f55\u8282\u70b9\u7684\u64cd\u4f5c\u662f\u57fa\u4e8e\u8f93\u51fa\u7aef\u53e3\u7684": 10, "\u800c\u975e\u8282\u70b9\u672c\u8eab": 10, "\u51fd\u6570\u5bf9\u5e94\u4e00\u4e2a\u8282\u70b9\u6811": 10, "\u8c03\u7528": 10, "\u51fd\u6570": 10, "\u5c31\u662f\u5728\u5f53\u524d\u7684\u8282\u70b9\u6811\u4e2d": 10, "\u521b\u5efa\u4e00\u4e2a\u7ec4\u8282\u70b9": 10, "\u6570\u636e\u6d41\u4e2d\u7684\u6570\u636e\u6709\u4e25\u683c\u7684\u7c7b\u578b\u68c0\u67e5": 10, "\u6570\u636e\u6709\u54ea\u4e9b\u65b9\u6cd5": 10, "\u7531\u5b83\u7684\u7c7b\u578b\u63d0\u4f9b": 10, "\u826f\u597d\u7684ide\u652f\u6301": 10, "\u6bd4\u5982\u5728": 10, "\u6240\u6709\u66b4\u9732\u7684\u65b9\u6cd5\u90fd\u6709\u5185\u7f6e\u6587\u6863\u8bf4\u660e": 10, "\u5305\u62ec\u6d89\u53ca\u7684\u8282\u70b9\u56fe\u7247": 10, "\u53ef\u9009\u679a\u4e3e\u53c2\u6570": 10, "\u4ee5\u53ca\u5b98\u65b9\u6587\u6863\u94fe\u63a5": 10, "introduct": 9, "\u4ec5\u652f\u6301\u51e0\u4f55\u8282\u70b9": 10, "\u800c": 10, "\u51e0\u4e4e\u652f\u6301blender\u6240\u6709\u7684\u8282\u70b9\u6811": 10, "\u5305\u62ec\u51e0\u4f55\u8282\u70b9\u548c\u6750\u8d28\u8282\u70b9": 10, "\u8282\u70b9\u7f16\u8f91\u5668\u7684\u4f7f\u7528": 10, "calculate_coord": 11, "\u0278": 11, "\u03b4": 11, "merge_curv": 11, "torus_knot": 11, "200": 11, "117f0f": 11, "quick": 9}, "objects": {"": [[1, 0, 0, "-", "pynodes"]], "pynodes": [[1, 1, 1, "", "bl_info"], [2, 0, 0, "-", "colors"], [3, 0, 0, "-", "core"], [1, 1, 1, "", "cos"], [4, 0, 0, "-", "datasocks"], [5, 0, 0, "-", "geosocks"], [6, 0, 0, "-", "main"], [7, 0, 0, "-", "nodes"], [1, 2, 1, "", "register"], [8, 0, 0, "-", "scene"], [1, 1, 1, "", "sin"], [1, 1, 1, "", "tan"], [1, 2, 1, "", "unregister"]], "pynodes.colors": [[2, 1, 1, "", "azure"], [2, 1, 1, "", "black"], [2, 1, 1, "", "blue"], [2, 1, 1, "", "color_palettes"], [2, 2, 1, "", "convert_srgb_to_linear_rgb"], [2, 1, 1, "", "cyan"], [2, 1, 1, "", "dark_azure"], [2, 1, 1, "", "dark_blue"], [2, 1, 1, "", "dark_cyan"], [2, 1, 1, "", "dark_gray"], [2, 1, 1, "", "dark_green"], [2, 1, 1, "", "dark_lime"], [2, 1, 1, "", "dark_magenta"], [2, 1, 1, "", "dark_olive"], [2, 1, 1, "", "dark_orange"], [2, 1, 1, "", "dark_red"], [2, 1, 1, "", "dark_rose"], [2, 1, 1, "", "dark_violet"], [2, 1, 1, "", "dark_yellow"], [2, 1, 1, "", "gray"], [2, 1, 1, "", "green"], [2, 2, 1, "", "hex_color_to_rgb"], [2, 2, 1, "", "hex_color_to_rgba"], [2, 1, 1, "", "light_azure"], [2, 1, 1, "", "light_blue"], [2, 1, 1, "", "light_cyan"], [2, 1, 1, "", "light_gray"], [2, 1, 1, "", "light_green"], [2, 1, 1, "", "light_lime"], [2, 1, 1, "", "light_magenta"], [2, 1, 1, "", "light_olive"], [2, 1, 1, "", "light_orange"], [2, 1, 1, "", "light_red"], [2, 1, 1, "", "light_rose"], [2, 1, 1, "", "light_violet"], [2, 1, 1, "", "light_yellow"], [2, 1, 1, "", "lime"], [2, 1, 1, "", "magenta"], [2, 1, 1, "", "mid_azure"], [2, 1, 1, "", "mid_blue"], [2, 1, 1, "", "mid_cyan"], [2, 1, 1, "", "mid_green"], [2, 1, 1, "", "mid_lime"], [2, 1, 1, "", "mid_magenta"], [2, 1, 1, "", "mid_olive"], [2, 1, 1, "", "mid_orange"], [2, 1, 1, "", "mid_red"], [2, 1, 1, "", "mid_rose"], [2, 1, 1, "", "mid_violet"], [2, 1, 1, "", "mid_yellow"], [2, 1, 1, "", "olive"], [2, 1, 1, "", "orange"], [2, 1, 1, "", "red"], [2, 2, 1, "", "rgb"], [2, 2, 1, "", "rgba"], [2, 1, 1, "", "rose"], [2, 1, 1, "", "silver"], [2, 1, 1, "", "violet"], [2, 1, 1, "", "white"], [2, 1, 1, "", "yellow"]], "pynodes.core": [[3, 3, 1, "", "Frame"], [3, 3, 1, "", "Group"], [3, 3, 1, "", "NodeWraper"], [3, 1, 1, "", "Param"], [3, 1, 1, "", "RT"], [3, 3, 1, "", "Script"], [3, 3, 1, "", "Socket"], [3, 3, 1, "", "SocketWraper"], [3, 3, 1, "", "Tree"], [3, 2, 1, "", "convert_param_name"], [3, 2, 1, "", "dispath_tree"], [3, 2, 1, "", "frame"], [3, 2, 1, "", "get_param_name"], [3, 2, 1, "", "new_link"], [3, 2, 1, "", "new_node"], [3, 2, 1, "", "reload"], [3, 2, 1, "", "tree"], [3, 2, 1, "", "update_modifier"]], "pynodes.core.Frame": [[3, 4, 1, "", "bl_idname"]], "pynodes.core.Group": [[3, 5, 1, "", "__call__"], [3, 5, 1, "", "__getitem__"], [3, 5, 1, "", "__setitem__"]], "pynodes.core.NodeWraper": [[3, 5, 1, "", "__setitem__"], [3, 6, 1, "", "color"], [3, 6, 1, "", "inputs"], [3, 6, 1, "", "label"], [3, 6, 1, "", "outputs"], [3, 5, 1, "", "plug_inputs"]], "pynodes.core.Script": [[3, 5, 1, "", "__getitem__"], [3, 5, 1, "", "__setitem__"], [3, 4, 1, "", "bl_idname"], [3, 6, 1, "", "color"], [3, 6, 1, "", "fac"], [3, 6, 1, "", "height"], [3, 6, 1, "", "vector"]], "pynodes.core.Socket": [[3, 6, 1, "", "Boolean"], [3, 6, 1, "", "Collection"], [3, 6, 1, "", "Color"], [3, 6, 1, "", "Curve"], [3, 6, 1, "", "Float"], [3, 6, 1, "", "Geometry"], [3, 6, 1, "", "Image"], [3, 5, 1, "", "Input"], [3, 6, 1, "", "Instances"], [3, 6, 1, "", "Integer"], [3, 6, 1, "", "Material"], [3, 6, 1, "", "Mesh"], [3, 6, 1, "", "Object"], [3, 6, 1, "", "Points"], [3, 6, 1, "", "Shader"], [3, 6, 1, "", "String"], [3, 6, 1, "", "Texture"], [3, 6, 1, "", "Vector"], [3, 6, 1, "", "Volume"], [3, 5, 1, "", "__call__"], [3, 5, 1, "", "__setitem__"], [3, 4, 1, "", "bl_idname"], [3, 5, 1, "", "func_ret_to_tree_output"], [3, 5, 1, "", "link_tree_output"], [3, 6, 1, "", "linked_to_group_output"], [3, 6, 1, "", "name"], [3, 6, 1, "", "node"]], "pynodes.core.SocketWraper": [[3, 6, 1, "", "default_value"]], "pynodes.core.Tree": [[3, 6, 1, "", "cur_frame"], [3, 5, 1, "", "frame"], [3, 6, 1, "", "group_input_node"], [3, 6, 1, "", "group_output_node"], [3, 6, 1, "", "is_embedded"], [3, 5, 1, "", "new_group_node"], [3, 5, 1, "", "new_input"], [3, 5, 1, "", "new_link"], [3, 5, 1, "", "new_node"], [3, 5, 1, "", "new_output"], [3, 4, 1, "", "tree"], [3, 6, 1, "", "tree_output_node"]], "pynodes.datasocks": [[4, 2, 1, "", "AmbientOcclusion"], [4, 3, 1, "", "Angle"], [4, 3, 1, "", "BSDF"], [4, 3, 1, "", "Boolean"], [4, 2, 1, "", "BooleanMath"], [4, 2, 1, "", "BrickTexture"], [4, 2, 1, "", "BrightContrast"], [4, 2, 1, "", "CheckerTexture"], [4, 3, 1, "", "Collection"], [4, 2, 1, "", "CollectionInfo"], [4, 3, 1, "", "Color"], [4, 2, 1, "", "ColorGamma"], [4, 2, 1, "", "ColorRamp"], [4, 2, 1, "", "CombineColor"], [4, 2, 1, "", "CombineXYZ"], [4, 2, 1, "", "Compare"], [4, 2, 1, "", "EnvironmentTexture"], [4, 3, 1, "", "Float"], [4, 2, 1, "", "FloatMath"], [4, 2, 1, "", "GeometryNodeViewer"], [4, 2, 1, "", "GradientTexture"], [4, 2, 1, "", "HueSaturation"], [4, 2, 1, "", "IES_Texture"], [4, 3, 1, "", "Image"], [4, 2, 1, "", "ImageInfo"], [4, 2, 1, "", "ImageTexture"], [4, 2, 1, "", "ImageTextureGeo"], [4, 2, 1, "", "InputBool"], [4, 2, 1, "", "InputColor"], [4, 2, 1, "", "InputFloat"], [4, 2, 1, "", "InputImage"], [4, 2, 1, "", "InputInt"], [4, 2, 1, "", "InputMaterial"], [4, 2, 1, "", "InputPosition"], [4, 2, 1, "", "InputRGB"], [4, 2, 1, "", "InputString"], [4, 2, 1, "", "InputValue"], [4, 2, 1, "", "InputVector"], [4, 3, 1, "", "Integer"], [4, 2, 1, "", "IsViewport"], [4, 2, 1, "", "LightFalloff"], [4, 2, 1, "", "MagicTexture"], [4, 3, 1, "", "Material"], [4, 2, 1, "", "MixColor"], [4, 2, 1, "", "MixFloat"], [4, 2, 1, "", "MixShader"], [4, 2, 1, "", "MixVector"], [4, 2, 1, "", "MusgraveTexture"], [4, 2, 1, "", "NoiseTexture"], [4, 3, 1, "", "Object"], [4, 2, 1, "", "ObjectInfo"], [4, 2, 1, "", "PointDensity"], [4, 2, 1, "", "RandomBoolean"], [4, 2, 1, "", "RandomFloat"], [4, 2, 1, "", "RandomInteger"], [4, 2, 1, "", "RandomVector"], [4, 2, 1, "", "SceneTime"], [4, 2, 1, "", "SelfObject"], [4, 2, 1, "", "SeparateColor"], [4, 3, 1, "", "Shader"], [4, 2, 1, "", "ShaderGeometry"], [4, 2, 1, "", "ShaderNodeBlackbody"], [4, 2, 1, "", "ShaderNodeBump"], [4, 2, 1, "", "ShaderNodeCombineColor"], [4, 2, 1, "", "ShaderNodeDisplacement"], [4, 2, 1, "", "ShaderNodeMapping"], [4, 2, 1, "", "ShaderNodeNormal"], [4, 2, 1, "", "ShaderNodeNormalMap"], [4, 2, 1, "", "ShaderNodeRGBCurve"], [4, 2, 1, "", "ShaderNodeRGBToBW"], [4, 2, 1, "", "ShaderNodeSeparateColor"], [4, 2, 1, "", "ShaderNodeVectorDisplacement"], [4, 2, 1, "", "ShaderNodeVectorTransform"], [4, 2, 1, "", "ShaderNodeWavelength"], [4, 2, 1, "", "ShaderScript"], [4, 2, 1, "", "SkyTexture"], [4, 3, 1, "", "String"], [4, 2, 1, "", "StringToCurves"], [4, 2, 1, "", "Switch"], [4, 3, 1, "", "Texture"], [4, 2, 1, "", "TextureCoord"], [4, 3, 1, "", "Vector"], [4, 2, 1, "", "VectorMath"], [4, 2, 1, "", "ViewBoolean"], [4, 2, 1, "", "ViewColor"], [4, 2, 1, "", "ViewFloat"], [4, 2, 1, "", "ViewInteger"], [4, 2, 1, "", "ViewVector"], [4, 2, 1, "", "VoronoiTexture"], [4, 2, 1, "", "WaveTexture"], [4, 2, 1, "", "WhiteNoiseTexture"]], "pynodes.datasocks.Angle": [[4, 4, 1, "", "bl_idname"]], "pynodes.datasocks.BSDF": [[4, 5, 1, "", "Anisotropic"], [4, 5, 1, "", "Diffuse"], [4, 5, 1, "", "Glass"], [4, 5, 1, "", "Glossy"], [4, 5, 1, "", "Hair"], [4, 5, 1, "", "HairPrincipled"], [4, 5, 1, "", "Principled"], [4, 5, 1, "", "Refraction"], [4, 5, 1, "", "Specular"], [4, 5, 1, "", "Toon"], [4, 5, 1, "", "Translucent"], [4, 5, 1, "", "Transparent"], [4, 5, 1, "", "Velvet"]], "pynodes.datasocks.Boolean": [[4, 5, 1, "", "__add__"], [4, 5, 1, "", "__and__"], [4, 5, 1, "", "__invert__"], [4, 5, 1, "", "__mul__"], [4, 5, 1, "", "__neg__"], [4, 5, 1, "", "__or__"], [4, 4, 1, "", "bl_idname"], [4, 6, 1, "", "false"], [4, 5, 1, "", "imply"], [4, 6, 1, "", "invert"], [4, 5, 1, "", "math"], [4, 5, 1, "", "math_and"], [4, 5, 1, "", "math_or"], [4, 5, 1, "", "nor"], [4, 5, 1, "", "not_and"], [4, 5, 1, "", "not_imply"], [4, 5, 1, "", "substract"], [4, 5, 1, "", "switch"], [4, 6, 1, "", "true"], [4, 5, 1, "", "xnor"], [4, 5, 1, "", "xor"]], "pynodes.datasocks.Collection": [[4, 4, 1, "", "bl_idname"]], "pynodes.datasocks.Color": [[4, 4, 1, "", "bl_idname"], [4, 5, 1, "", "bright_contrast"], [4, 5, 1, "", "gamma"], [4, 5, 1, "", "hue_saturation"], [4, 5, 1, "", "invert"], [4, 5, 1, "", "mix"], [4, 5, 1, "", "normal_map"], [4, 5, 1, "", "rgb_curve"], [4, 5, 1, "", "seperate"], [4, 5, 1, "", "to_background"]], "pynodes.datasocks.Float": [[4, 5, 1, "", "__abs__"], [4, 5, 1, "", "__add__"], [4, 5, 1, "", "__ceil__"], [4, 5, 1, "", "__eq__"], [4, 5, 1, "", "__floor__"], [4, 5, 1, "", "__ge__"], [4, 5, 1, "", "__gt__"], [4, 5, 1, "", "__le__"], [4, 5, 1, "", "__lt__"], [4, 5, 1, "", "__mod__"], [4, 5, 1, "", "__mul__"], [4, 5, 1, "", "__neg__"], [4, 5, 1, "", "__pow__"], [4, 5, 1, "", "__radd__"], [4, 5, 1, "", "__rmul__"], [4, 5, 1, "", "__round__"], [4, 5, 1, "", "__rsub__"], [4, 5, 1, "", "__rtruediv__"], [4, 5, 1, "", "__sub__"], [4, 5, 1, "", "__truediv__"], [4, 5, 1, "", "__trunc__"], [4, 6, 1, "", "absolute"], [4, 5, 1, "", "arccos"], [4, 6, 1, "", "arccosine"], [4, 5, 1, "", "arcsin"], [4, 6, 1, "", "arcsine"], [4, 5, 1, "", "arctan"], [4, 5, 1, "", "arctan2"], [4, 6, 1, "", "arctangent"], [4, 4, 1, "", "bl_idname"], [4, 6, 1, "", "ceil"], [4, 5, 1, "", "clamp"], [4, 5, 1, "", "compare"], [4, 5, 1, "", "cos"], [4, 5, 1, "", "cosh"], [4, 6, 1, "", "cosine"], [4, 5, 1, "", "curve"], [4, 6, 1, "", "degrees"], [4, 6, 1, "", "exponent"], [4, 5, 1, "", "float_curve"], [4, 6, 1, "", "floor"], [4, 6, 1, "", "fract"], [4, 5, 1, "", "greater_than"], [4, 6, 1, "", "hyperbolic_cosine"], [4, 6, 1, "", "hyperbolic_sine"], [4, 6, 1, "", "hyperbolic_tangent"], [4, 6, 1, "", "inverse_sqrt"], [4, 5, 1, "", "less_than"], [4, 6, 1, "", "ln"], [4, 5, 1, "", "log"], [4, 6, 1, "", "log2"], [4, 5, 1, "", "map_range"], [4, 5, 1, "", "math"], [4, 5, 1, "", "maximum"], [4, 5, 1, "", "minimum"], [4, 5, 1, "", "mix"], [4, 5, 1, "", "modulo"], [4, 5, 1, "", "multiply_add"], [4, 5, 1, "", "pingpong"], [4, 5, 1, "", "power"], [4, 6, 1, "", "radians"], [4, 6, 1, "", "round"], [4, 6, 1, "", "sign"], [4, 5, 1, "", "sin"], [4, 6, 1, "", "sine"], [4, 5, 1, "", "sinh"], [4, 5, 1, "", "smooth_maximum"], [4, 5, 1, "", "smooth_minimum"], [4, 5, 1, "", "snap"], [4, 5, 1, "", "sqrt"], [4, 6, 1, "", "square_root"], [4, 5, 1, "", "switch"], [4, 5, 1, "", "tan"], [4, 6, 1, "", "tangent"], [4, 5, 1, "", "tanh"], [4, 5, 1, "", "to_color"], [4, 5, 1, "", "to_integer"], [4, 5, 1, "", "to_normal"], [4, 5, 1, "", "to_string"], [4, 6, 1, "", "trunc"], [4, 5, 1, "", "wrap"]], "pynodes.datasocks.Image": [[4, 4, 1, "", "bl_idname"]], "pynodes.datasocks.Integer": [[4, 5, 1, "", "__eq__"], [4, 5, 1, "", "__ge__"], [4, 5, 1, "", "__gt__"], [4, 5, 1, "", "__le__"], [4, 5, 1, "", "__lt__"], [4, 5, 1, "", "__ne__"], [4, 4, 1, "", "bl_idname"], [4, 5, 1, "", "switch"]], "pynodes.datasocks.Material": [[4, 4, 1, "", "bl_idname"], [4, 6, 1, "", "index"], [4, 5, 1, "", "material_selection"]], "pynodes.datasocks.Object": [[4, 4, 1, "", "bl_idname"], [4, 6, 1, "", "geometry"], [4, 6, 1, "", "location"], [4, 5, 1, "", "object_info"], [4, 6, 1, "", "rotation"], [4, 6, 1, "", "scale"]], "pynodes.datasocks.Shader": [[4, 5, 1, "", "Background"], [4, 5, 1, "", "Emission"], [4, 5, 1, "", "Holdout"], [4, 6, 1, "", "ShaderNodeObjectInfo"], [4, 5, 1, "", "SubsurfaceScattering"], [4, 5, 1, "", "VolumeAbsorption"], [4, 5, 1, "", "VolumePrincipled"], [4, 5, 1, "", "VolumeScatter"], [4, 5, 1, "", "__add__"], [4, 5, 1, "", "add_shader"], [4, 5, 1, "", "attribute"], [4, 5, 1, "", "bevel"], [4, 4, 1, "", "bl_idname"], [4, 6, 1, "", "camera_data"], [4, 5, 1, "", "color_attribute"], [4, 5, 1, "", "fresnel"], [4, 6, 1, "", "geometry"], [4, 6, 1, "", "hair_info"], [4, 5, 1, "", "layer_weight"], [4, 6, 1, "", "light_path"], [4, 5, 1, "", "mix"], [4, 6, 1, "", "particle_info"], [4, 6, 1, "", "point_info"], [4, 5, 1, "", "tangent_radial"], [4, 5, 1, "", "tangent_uv_map"], [4, 5, 1, "", "texture_coord"], [4, 5, 1, "", "to_rgb"], [4, 5, 1, "", "uv_map"], [4, 6, 1, "", "volume_info"], [4, 5, 1, "", "wire_frame"]], "pynodes.datasocks.String": [[4, 4, 1, "", "bl_idname"], [4, 5, 1, "", "join"], [4, 6, 1, "", "length"], [4, 5, 1, "", "replace"], [4, 5, 1, "", "slice"], [4, 6, 1, "", "special_characters"], [4, 5, 1, "", "to_curve"], [4, 5, 1, "", "to_curves"]], "pynodes.datasocks.Texture": [[4, 4, 1, "", "bl_idname"]], "pynodes.datasocks.Vector": [[4, 5, 1, "", "__abs__"], [4, 5, 1, "", "__add__"], [4, 5, 1, "", "__ceil__"], [4, 5, 1, "", "__floor__"], [4, 5, 1, "", "__mod__"], [4, 5, 1, "", "__mul__"], [4, 5, 1, "", "__radd__"], [4, 5, 1, "", "__rsub__"], [4, 5, 1, "", "__sub__"], [4, 5, 1, "", "__truediv__"], [4, 5, 1, "", "absolute"], [4, 5, 1, "", "align_euler_to_vector"], [4, 4, 1, "", "bl_idname"], [4, 5, 1, "", "ceil"], [4, 5, 1, "", "cos"], [4, 5, 1, "", "cross"], [4, 5, 1, "", "distance"], [4, 5, 1, "", "dot"], [4, 5, 1, "", "faceforward"], [4, 5, 1, "", "floor"], [4, 5, 1, "", "fraction"], [4, 6, 1, "", "length"], [4, 5, 1, "", "line_to"], [4, 5, 1, "", "line_towards"], [4, 5, 1, "", "map_range"], [4, 5, 1, "", "mapping"], [4, 5, 1, "", "math"], [4, 5, 1, "", "maximum"], [4, 5, 1, "", "minimum"], [4, 5, 1, "", "mix"], [4, 5, 1, "", "modulo"], [4, 5, 1, "", "multiply_add"], [4, 5, 1, "", "normalize"], [4, 5, 1, "", "project"], [4, 5, 1, "", "reflect"], [4, 5, 1, "", "refract"], [4, 5, 1, "", "rotate"], [4, 5, 1, "", "rotate_around_axis"], [4, 5, 1, "", "rotate_around_euler_xyz"], [4, 5, 1, "", "rotate_around_x_axis"], [4, 5, 1, "", "rotate_around_y_axis"], [4, 5, 1, "", "rotate_around_z_axis"], [4, 5, 1, "", "rotate_local_around_axis_by_angle"], [4, 5, 1, "", "rotate_local_euler"], [4, 5, 1, "", "rotate_object_around_axis_by_angle"], [4, 5, 1, "", "rotate_object_euler"], [4, 5, 1, "", "scale"], [4, 5, 1, "", "separate_xyz"], [4, 5, 1, "", "sin"], [4, 5, 1, "", "snap"], [4, 5, 1, "", "switch"], [4, 5, 1, "", "tangent"], [4, 5, 1, "", "vector_curve"], [4, 5, 1, "", "wrap"], [4, 6, 1, "", "x"], [4, 6, 1, "", "y"], [4, 6, 1, "", "z"]], "pynodes.geosocks": [[5, 2, 1, "", "BezierSegment"], [5, 3, 1, "", "Curve"], [5, 2, 1, "", "CurveArc"], [5, 2, 1, "", "CurveArcPoints"], [5, 2, 1, "", "CurveCircle"], [5, 2, 1, "", "CurveCirclePoints"], [5, 2, 1, "", "CurveLine"], [5, 2, 1, "", "CurveQuadraticBezier"], [5, 2, 1, "", "CurveSpiral"], [5, 2, 1, "", "CurveStar"], [5, 3, 1, "", "Geometry"], [5, 3, 1, "", "Instances"], [5, 2, 1, "", "Kite"], [5, 3, 1, "", "Mesh"], [5, 2, 1, "", "MeshCircle"], [5, 2, 1, "", "MeshCone"], [5, 2, 1, "", "MeshCube"], [5, 2, 1, "", "MeshCylinder"], [5, 2, 1, "", "MeshGrid"], [5, 2, 1, "", "MeshIcoSphere"], [5, 2, 1, "", "MeshLine"], [5, 2, 1, "", "MeshUVSphere"], [5, 2, 1, "", "Parallelogram"], [5, 3, 1, "", "Points"], [5, 2, 1, "", "PointsNode"], [5, 2, 1, "", "Quadrangle"], [5, 2, 1, "", "Rectangle"], [5, 2, 1, "", "Trapezoid"], [5, 3, 1, "", "Volume"], [5, 2, 1, "", "VolumeCube"], [5, 2, 1, "", "join"]], "pynodes.geosocks.Curve": [[5, 6, 1, "", "curve_length"], [5, 5, 1, "", "curve_of_point"], [5, 5, 1, "", "deform_on_surface"], [5, 6, 1, "", "domain_size"], [5, 5, 1, "", "endpoint_selection"], [5, 5, 1, "", "fill_curve"], [5, 6, 1, "", "filled_mesh"], [5, 6, 1, "", "filled_ngons"], [5, 5, 1, "", "fillet_bezier"], [5, 5, 1, "", "fillet_curve"], [5, 5, 1, "", "fillet_poly"], [5, 5, 1, "", "handle_positions"], [5, 5, 1, "", "handle_type_selection"], [5, 5, 1, "", "interpolate_curves"], [5, 6, 1, "", "is_cyclic"], [5, 5, 1, "", "offset_point_in_curve"], [5, 6, 1, "", "parameter"], [5, 5, 1, "", "points_of_curve"], [5, 5, 1, "", "resample"], [5, 5, 1, "", "resample_evaluated"], [5, 5, 1, "", "resample_length"], [5, 6, 1, "", "resolution"], [5, 5, 1, "", "reverse"], [5, 5, 1, "", "sample_boolean"], [5, 5, 1, "", "sample_color"], [5, 5, 1, "", "sample_curve"], [5, 5, 1, "", "sample_float"], [5, 5, 1, "", "sample_integer"], [5, 5, 1, "", "sample_vector"], [5, 5, 1, "", "set_cyclic"], [5, 5, 1, "", "set_handle_positions"], [5, 5, 1, "", "set_handle_type"], [5, 5, 1, "", "set_normal"], [5, 5, 1, "", "set_radius"], [5, 5, 1, "", "set_resolution"], [5, 5, 1, "", "set_spline_type"], [5, 5, 1, "", "set_tilt"], [5, 6, 1, "", "spline_length"], [5, 5, 1, "", "subdivide"], [5, 6, 1, "", "tangent"], [5, 6, 1, "", "tilt"], [5, 5, 1, "", "to_mesh"], [5, 5, 1, "", "to_points"], [5, 5, 1, "", "trim_factor"], [5, 5, 1, "", "trim_length"]], "pynodes.geosocks.Geometry": [[5, 6, 1, "", "ID"], [5, 5, 1, "", "__add__"], [5, 5, 1, "", "__getitem__"], [5, 5, 1, "", "_store_named_attribute"], [5, 5, 1, "", "accumulate_float_on_corners"], [5, 5, 1, "", "accumulate_float_on_curves"], [5, 5, 1, "", "accumulate_float_on_edges"], [5, 5, 1, "", "accumulate_float_on_faces"], [5, 5, 1, "", "accumulate_float_on_instances"], [5, 5, 1, "", "accumulate_float_on_points"], [5, 5, 1, "", "accumulate_integer_on_corners"], [5, 5, 1, "", "accumulate_integer_on_curves"], [5, 5, 1, "", "accumulate_integer_on_edges"], [5, 5, 1, "", "accumulate_integer_on_faces"], [5, 5, 1, "", "accumulate_integer_on_instances"], [5, 5, 1, "", "accumulate_integer_on_points"], [5, 5, 1, "", "accumulate_vector_on_corners"], [5, 5, 1, "", "accumulate_vector_on_curves"], [5, 5, 1, "", "accumulate_vector_on_edges"], [5, 5, 1, "", "accumulate_vector_on_faces"], [5, 5, 1, "", "accumulate_vector_on_instances"], [5, 5, 1, "", "accumulate_vector_on_points"], [5, 4, 1, "", "bl_idname"], [5, 5, 1, "", "blur_color_attribute"], [5, 5, 1, "", "blur_float_attribute"], [5, 5, 1, "", "blur_integer_attribute"], [5, 5, 1, "", "blur_vector_attribute"], [5, 5, 1, "", "bound_box"], [5, 5, 1, "", "capture_boolean_on_corners"], [5, 5, 1, "", "capture_boolean_on_curves"], [5, 5, 1, "", "capture_boolean_on_edges"], [5, 5, 1, "", "capture_boolean_on_faces"], [5, 5, 1, "", "capture_boolean_on_instances"], [5, 5, 1, "", "capture_boolean_on_points"], [5, 5, 1, "", "capture_color_on_corners"], [5, 5, 1, "", "capture_color_on_curves"], [5, 5, 1, "", "capture_color_on_edges"], [5, 5, 1, "", "capture_color_on_faces"], [5, 5, 1, "", "capture_color_on_instances"], [5, 5, 1, "", "capture_color_on_points"], [5, 5, 1, "", "capture_float_on_corners"], [5, 5, 1, "", "capture_float_on_curves"], [5, 5, 1, "", "capture_float_on_edges"], [5, 5, 1, "", "capture_float_on_faces"], [5, 5, 1, "", "capture_float_on_instances"], [5, 5, 1, "", "capture_float_on_points"], [5, 5, 1, "", "capture_integer_on_corners"], [5, 5, 1, "", "capture_integer_on_curves"], [5, 5, 1, "", "capture_integer_on_edges"], [5, 5, 1, "", "capture_integer_on_faces"], [5, 5, 1, "", "capture_integer_on_instances"], [5, 5, 1, "", "capture_integer_on_points"], [5, 5, 1, "", "capture_vector_on_corners"], [5, 5, 1, "", "capture_vector_on_curves"], [5, 5, 1, "", "capture_vector_on_edges"], [5, 5, 1, "", "capture_vector_on_faces"], [5, 5, 1, "", "capture_vector_on_instances"], [5, 5, 1, "", "capture_vector_on_points"], [5, 5, 1, "", "convex_hull"], [5, 5, 1, "", "delete"], [5, 5, 1, "", "domain_size"], [5, 5, 1, "", "duplicate_elements"], [5, 5, 1, "", "evaluate_boolean_at_index_on_corners"], [5, 5, 1, "", "evaluate_boolean_at_index_on_curves"], [5, 5, 1, "", "evaluate_boolean_at_index_on_edges"], [5, 5, 1, "", "evaluate_boolean_at_index_on_faces"], [5, 5, 1, "", "evaluate_boolean_at_index_on_instances"], [5, 5, 1, "", "evaluate_boolean_at_index_on_points"], [5, 5, 1, "", "evaluate_boolean_on_corners"], [5, 5, 1, "", "evaluate_boolean_on_curves"], [5, 5, 1, "", "evaluate_boolean_on_edges"], [5, 5, 1, "", "evaluate_boolean_on_faces"], [5, 5, 1, "", "evaluate_boolean_on_instances"], [5, 5, 1, "", "evaluate_boolean_on_points"], [5, 5, 1, "", "evaluate_color_at_index_on_corners"], [5, 5, 1, "", "evaluate_color_at_index_on_curves"], [5, 5, 1, "", "evaluate_color_at_index_on_edges"], [5, 5, 1, "", "evaluate_color_at_index_on_faces"], [5, 5, 1, "", "evaluate_color_at_index_on_instances"], [5, 5, 1, "", "evaluate_color_at_index_on_points"], [5, 5, 1, "", "evaluate_color_on_corners"], [5, 5, 1, "", "evaluate_color_on_curves"], [5, 5, 1, "", "evaluate_color_on_edges"], [5, 5, 1, "", "evaluate_color_on_faces"], [5, 5, 1, "", "evaluate_color_on_instances"], [5, 5, 1, "", "evaluate_color_on_points"], [5, 5, 1, "", "evaluate_float_at_index_on_corners"], [5, 5, 1, "", "evaluate_float_at_index_on_curves"], [5, 5, 1, "", "evaluate_float_at_index_on_edges"], [5, 5, 1, "", "evaluate_float_at_index_on_faces"], [5, 5, 1, "", "evaluate_float_at_index_on_instances"], [5, 5, 1, "", "evaluate_float_at_index_on_points"], [5, 5, 1, "", "evaluate_float_on_corners"], [5, 5, 1, "", "evaluate_float_on_curves"], [5, 5, 1, "", "evaluate_float_on_edges"], [5, 5, 1, "", "evaluate_float_on_faces"], [5, 5, 1, "", "evaluate_float_on_instances"], [5, 5, 1, "", "evaluate_float_on_points"], [5, 5, 1, "", "evaluate_integer_at_index_on_corners"], [5, 5, 1, "", "evaluate_integer_at_index_on_curves"], [5, 5, 1, "", "evaluate_integer_at_index_on_edges"], [5, 5, 1, "", "evaluate_integer_at_index_on_faces"], [5, 5, 1, "", "evaluate_integer_at_index_on_instances"], [5, 5, 1, "", "evaluate_integer_at_index_on_points"], [5, 5, 1, "", "evaluate_integer_on_corners"], [5, 5, 1, "", "evaluate_integer_on_curves"], [5, 5, 1, "", "evaluate_integer_on_edges"], [5, 5, 1, "", "evaluate_integer_on_faces"], [5, 5, 1, "", "evaluate_integer_on_instances"], [5, 5, 1, "", "evaluate_integer_on_points"], [5, 5, 1, "", "evaluate_vector_at_index_on_corners"], [5, 5, 1, "", "evaluate_vector_at_index_on_curves"], [5, 5, 1, "", "evaluate_vector_at_index_on_edges"], [5, 5, 1, "", "evaluate_vector_at_index_on_faces"], [5, 5, 1, "", "evaluate_vector_at_index_on_instances"], [5, 5, 1, "", "evaluate_vector_at_index_on_points"], [5, 5, 1, "", "evaluate_vector_on_corners"], [5, 5, 1, "", "evaluate_vector_on_curves"], [5, 5, 1, "", "evaluate_vector_on_edges"], [5, 5, 1, "", "evaluate_vector_on_faces"], [5, 5, 1, "", "evaluate_vector_on_instances"], [5, 5, 1, "", "evaluate_vector_on_points"], [5, 5, 1, "", "float_statistic_on_corners"], [5, 5, 1, "", "float_statistic_on_curves"], [5, 5, 1, "", "float_statistic_on_edges"], [5, 5, 1, "", "float_statistic_on_faces"], [5, 5, 1, "", "float_statistic_on_instances"], [5, 5, 1, "", "float_statistic_on_points"], [5, 6, 1, "", "index"], [5, 5, 1, "", "join"], [5, 5, 1, "", "join_to_instances"], [5, 5, 1, "", "merge_by_distance"], [5, 5, 1, "", "named_attribute_boolean"], [5, 5, 1, "", "named_attribute_color"], [5, 5, 1, "", "named_attribute_float"], [5, 5, 1, "", "named_attribute_integer"], [5, 5, 1, "", "named_attribute_vector"], [5, 6, 1, "", "nornal"], [5, 5, 1, "", "on_points"], [5, 6, 1, "", "position"], [5, 5, 1, "", "proximity"], [5, 6, 1, "", "radius"], [5, 5, 1, "", "raycast_boolean"], [5, 5, 1, "", "raycast_color"], [5, 5, 1, "", "raycast_float"], [5, 5, 1, "", "raycast_integer"], [5, 5, 1, "", "raycast_vector"], [5, 5, 1, "", "remove_attribute"], [5, 5, 1, "", "replace_material"], [5, 5, 1, "", "sample_boolean_index"], [5, 5, 1, "", "sample_color_index"], [5, 5, 1, "", "sample_float_index"], [5, 5, 1, "", "sample_index"], [5, 5, 1, "", "sample_integer_index"], [5, 5, 1, "", "sample_nearest"], [5, 5, 1, "", "sample_vector_index"], [5, 5, 1, "", "select"], [5, 5, 1, "", "select_curves"], [5, 5, 1, "", "select_edges"], [5, 5, 1, "", "select_faces"], [5, 5, 1, "", "select_instances"], [5, 5, 1, "", "select_points"], [5, 6, 1, "", "selection"], [5, 5, 1, "", "separate"], [5, 5, 1, "", "separate_components"], [5, 5, 1, "", "separate_curves"], [5, 5, 1, "", "separate_edges"], [5, 5, 1, "", "separate_faces"], [5, 5, 1, "", "separate_instances"], [5, 5, 1, "", "set_id"], [5, 5, 1, "", "set_material"], [5, 5, 1, "", "set_material_index"], [5, 5, 1, "", "set_position"], [5, 5, 1, "", "store_named_attribute"], [5, 5, 1, "", "switch"], [5, 5, 1, "", "transform"], [5, 5, 1, "", "vector_statistic_on_corners"], [5, 5, 1, "", "vector_statistic_on_curves"], [5, 5, 1, "", "vector_statistic_on_edges"], [5, 5, 1, "", "vector_statistic_on_faces"], [5, 5, 1, "", "vector_statistic_on_instances"], [5, 5, 1, "", "vector_statistic_on_points"]], "pynodes.geosocks.Instances": [[5, 6, 1, "", "domain_size"], [5, 5, 1, "", "realize_instances"], [5, 5, 1, "", "rotate_instances"], [5, 6, 1, "", "rotation"], [5, 6, 1, "", "scale"], [5, 5, 1, "", "scale_elements"], [5, 5, 1, "", "scale_instances"], [5, 5, 1, "", "separate"], [5, 5, 1, "", "to_points"], [5, 5, 1, "", "translate_instances"]], "pynodes.geosocks.Mesh": [[5, 5, 1, "", "corners_of_face"], [5, 5, 1, "", "corners_of_vertex"], [5, 5, 1, "", "distribute_points_on_faces"], [5, 6, 1, "", "domain_size"], [5, 5, 1, "", "dual_mesh"], [5, 6, 1, "", "edge_angle"], [5, 6, 1, "", "edge_neighbors"], [5, 5, 1, "", "edge_paths_to_curves"], [5, 5, 1, "", "edge_paths_to_selection"], [5, 6, 1, "", "edge_vertices"], [5, 5, 1, "", "edges_of_corner"], [5, 5, 1, "", "edges_of_vertex"], [5, 5, 1, "", "edges_to_face_groups"], [5, 5, 1, "", "extrude"], [5, 5, 1, "", "extrude_edges"], [5, 5, 1, "", "extrude_faces"], [5, 5, 1, "", "extrude_vertices"], [5, 6, 1, "", "face_area"], [5, 5, 1, "", "face_is_planar"], [5, 6, 1, "", "face_neighbors"], [5, 5, 1, "", "face_of_corner"], [5, 5, 1, "", "faceset_boundaries"], [5, 5, 1, "", "flip_faces"], [5, 6, 1, "", "is_shade_smooth"], [5, 5, 1, "", "merge_by_distance"], [5, 5, 1, "", "mesh_difference"], [5, 5, 1, "", "mesh_intersect"], [5, 6, 1, "", "mesh_island"], [5, 5, 1, "", "mesh_union"], [5, 5, 1, "", "nearest_surface"], [5, 5, 1, "", "nearest_surface_boolean"], [5, 5, 1, "", "nearest_surface_color"], [5, 5, 1, "", "nearest_surface_float"], [5, 5, 1, "", "nearest_surface_integer"], [5, 5, 1, "", "nearest_surface_vector"], [5, 5, 1, "", "offset_corner_in_face"], [5, 5, 1, "", "pack_uv_islands"], [5, 5, 1, "", "sample_uv_surface_boolean"], [5, 5, 1, "", "sample_uv_surface_color"], [5, 5, 1, "", "sample_uv_surface_float"], [5, 5, 1, "", "sample_uv_surface_integer"], [5, 5, 1, "", "sample_uv_surface_vector"], [5, 5, 1, "", "scale_elements"], [5, 5, 1, "", "set_shade_smooth"], [5, 5, 1, "", "shortest_edge_paths"], [5, 5, 1, "", "split_edges"], [5, 5, 1, "", "subdivide_mesh"], [5, 5, 1, "", "subdivision_surface"], [5, 5, 1, "", "to_curve"], [5, 5, 1, "", "to_points"], [5, 5, 1, "", "to_volume"], [5, 5, 1, "", "triangulate"], [5, 5, 1, "", "uv_unwrap"], [5, 6, 1, "", "vertex_neighbors"], [5, 5, 1, "", "vertex_of_corner"]], "pynodes.geosocks.Points": [[5, 6, 1, "", "domain_size"], [5, 5, 1, "", "merge_by_distance"], [5, 5, 1, "", "set_radius"], [5, 5, 1, "", "to_vertices"], [5, 5, 1, "", "to_volume"]], "pynodes.geosocks.Volume": [[5, 5, 1, "", "distribute_points_grid"], [5, 5, 1, "", "distribute_points_random"], [5, 5, 1, "", "to_mesh"]], "pynodes.main": [[6, 3, 1, "", "NA_OT_ArrangeNodesOp"], [6, 3, 1, "", "NA_OT_NodeButton"], [6, 3, 1, "", "NA_OT_NodeButton2"], [6, 3, 1, "", "NA_OT_NodeButtonOdd"], [6, 3, 1, "", "NA_PT_NodePanel"], [6, 3, 1, "", "PurgeOrphanRecursive"], [6, 2, 1, "", "abs_node_location"], [6, 2, 1, "", "get_active_tree"], [6, 2, 1, "", "get_first_enabled_output"], [6, 2, 1, "", "get_group_output_node"], [6, 2, 1, "", "get_nodes_from_category"], [6, 2, 1, "", "is_visible_socket"], [6, 2, 1, "", "node_mid_pt"], [6, 2, 1, "", "nodemargin"], [6, 2, 1, "", "nodes_arrange"], [6, 2, 1, "", "nodes_center"], [6, 2, 1, "", "nodes_iterate"], [6, 2, 1, "", "nodes_odd"], [6, 2, 1, "", "nodetree_get"], [6, 2, 1, "", "outputnode_search"], [6, 2, 1, "", "register"], [6, 2, 1, "", "unregister"], [6, 3, 1, "", "values"]], "pynodes.main.NA_OT_ArrangeNodesOp": [[6, 4, 1, "", "bl_idname"], [6, 4, 1, "", "bl_label"], [6, 5, 1, "", "execute"], [6, 4, 1, "", "margin_x"], [6, 4, 1, "", "margin_y"], [6, 4, 1, "", "mat_name"], [6, 5, 1, "", "nodemargin2"]], "pynodes.main.NA_OT_NodeButton": [[6, 4, 1, "", "bl_idname"], [6, 4, 1, "", "bl_label"], [6, 5, 1, "", "execute"], [6, 5, 1, "", "invoke"]], "pynodes.main.NA_OT_NodeButton2": [[6, 4, 1, "", "bl_idname"], [6, 4, 1, "", "bl_label"], [6, 5, 1, "", "execute"]], "pynodes.main.NA_OT_NodeButtonOdd": [[6, 4, 1, "", "bl_idname"], [6, 4, 1, "", "bl_label"], [6, 5, 1, "", "execute"]], "pynodes.main.NA_PT_NodePanel": [[6, 4, 1, "", "bl_category"], [6, 4, 1, "", "bl_label"], [6, 4, 1, "", "bl_region_type"], [6, 4, 1, "", "bl_space_type"], [6, 5, 1, "", "draw"]], "pynodes.main.PurgeOrphanRecursive": [[6, 4, 1, "", "bl_idname"], [6, 4, 1, "", "bl_label"], [6, 5, 1, "", "execute"]], "pynodes.main.values": [[6, 4, 1, "", "average_y"], [6, 4, 1, "", "margin_x"], [6, 4, 1, "", "margin_y"], [6, 4, 1, "", "mat_name"], [6, 4, 1, "", "x_last"]], "pynodes.nodes": [[7, 2, 1, "", "FunctionNodeAlignEulerToVector"], [7, 2, 1, "", "FunctionNodeBooleanMath"], [7, 2, 1, "", "FunctionNodeCombineColor"], [7, 2, 1, "", "FunctionNodeCompare"], [7, 2, 1, "", "FunctionNodeFloatToInt"], [7, 2, 1, "", "FunctionNodeInputBool"], [7, 2, 1, "", "FunctionNodeInputColor"], [7, 2, 1, "", "FunctionNodeInputInt"], [7, 2, 1, "", "FunctionNodeInputSpecialCharacters"], [7, 2, 1, "", "FunctionNodeInputString"], [7, 2, 1, "", "FunctionNodeInputVector"], [7, 2, 1, "", "FunctionNodeRandomValue"], [7, 2, 1, "", "FunctionNodeReplaceString"], [7, 2, 1, "", "FunctionNodeRotateEuler"], [7, 2, 1, "", "FunctionNodeSeparateColor"], [7, 2, 1, "", "FunctionNodeSliceString"], [7, 2, 1, "", "FunctionNodeStringLength"], [7, 2, 1, "", "FunctionNodeValueToString"], [7, 2, 1, "", "GeometryNodeAccumulateField"], [7, 2, 1, "", "GeometryNodeAttributeDomainSize"], [7, 2, 1, "", "GeometryNodeAttributeStatistic"], [7, 2, 1, "", "GeometryNodeBlurAttribute"], [7, 2, 1, "", "GeometryNodeBoundBox"], [7, 2, 1, "", "GeometryNodeCaptureAttribute"], [7, 2, 1, "", "GeometryNodeCollectionInfo"], [7, 2, 1, "", "GeometryNodeConvexHull"], [7, 2, 1, "", "GeometryNodeCornersOfFace"], [7, 2, 1, "", "GeometryNodeCornersOfVertex"], [7, 2, 1, "", "GeometryNodeCurveArc"], [7, 2, 1, "", "GeometryNodeCurveEndpointSelection"], [7, 2, 1, "", "GeometryNodeCurveHandleTypeSelection"], [7, 2, 1, "", "GeometryNodeCurveLength"], [7, 2, 1, "", "GeometryNodeCurveOfPoint"], [7, 2, 1, "", "GeometryNodeCurvePrimitiveBezierSegment"], [7, 2, 1, "", "GeometryNodeCurvePrimitiveCircle"], [7, 2, 1, "", "GeometryNodeCurvePrimitiveLine"], [7, 2, 1, "", "GeometryNodeCurvePrimitiveQuadrilateral"], [7, 2, 1, "", "GeometryNodeCurveQuadraticBezier"], [7, 2, 1, "", "GeometryNodeCurveSetHandles"], [7, 2, 1, "", "GeometryNodeCurveSpiral"], [7, 2, 1, "", "GeometryNodeCurveSplineType"], [7, 2, 1, "", "GeometryNodeCurveStar"], [7, 2, 1, "", "GeometryNodeCurveToMesh"], [7, 2, 1, "", "GeometryNodeCurveToPoints"], [7, 2, 1, "", "GeometryNodeDeformCurvesOnSurface"], [7, 2, 1, "", "GeometryNodeDeleteGeometry"], [7, 2, 1, "", "GeometryNodeDistributePointsInVolume"], [7, 2, 1, "", "GeometryNodeDistributePointsOnFaces"], [7, 2, 1, "", "GeometryNodeDualMesh"], [7, 2, 1, "", "GeometryNodeDuplicateElements"], [7, 2, 1, "", "GeometryNodeEdgePathsToCurves"], [7, 2, 1, "", "GeometryNodeEdgePathsToSelection"], [7, 2, 1, "", "GeometryNodeEdgesOfCorner"], [7, 2, 1, "", "GeometryNodeEdgesOfVertex"], [7, 2, 1, "", "GeometryNodeEdgesToFaceGroups"], [7, 2, 1, "", "GeometryNodeExtrudeMesh"], [7, 2, 1, "", "GeometryNodeFaceOfCorner"], [7, 2, 1, "", "GeometryNodeFieldAtIndex"], [7, 2, 1, "", "GeometryNodeFieldOnDomain"], [7, 2, 1, "", "GeometryNodeFillCurve"], [7, 2, 1, "", "GeometryNodeFilletCurve"], [7, 2, 1, "", "GeometryNodeFlipFaces"], [7, 2, 1, "", "GeometryNodeGeometryToInstance"], [7, 2, 1, "", "GeometryNodeImageInfo"], [7, 2, 1, "", "GeometryNodeImageTexture"], [7, 2, 1, "", "GeometryNodeInputCurveHandlePositions"], [7, 2, 1, "", "GeometryNodeInputCurveTilt"], [7, 2, 1, "", "GeometryNodeInputID"], [7, 2, 1, "", "GeometryNodeInputImage"], [7, 2, 1, "", "GeometryNodeInputIndex"], [7, 2, 1, "", "GeometryNodeInputInstanceRotation"], [7, 2, 1, "", "GeometryNodeInputInstanceScale"], [7, 2, 1, "", "GeometryNodeInputMaterial"], [7, 2, 1, "", "GeometryNodeInputMaterialIndex"], [7, 2, 1, "", "GeometryNodeInputMeshEdgeAngle"], [7, 2, 1, "", "GeometryNodeInputMeshEdgeNeighbors"], [7, 2, 1, "", "GeometryNodeInputMeshEdgeVertices"], [7, 2, 1, "", "GeometryNodeInputMeshFaceArea"], [7, 2, 1, "", "GeometryNodeInputMeshFaceIsPlanar"], [7, 2, 1, "", "GeometryNodeInputMeshFaceNeighbors"], [7, 2, 1, "", "GeometryNodeInputMeshIsland"], [7, 2, 1, "", "GeometryNodeInputMeshVertexNeighbors"], [7, 2, 1, "", "GeometryNodeInputNamedAttribute"], [7, 2, 1, "", "GeometryNodeInputNormal"], [7, 2, 1, "", "GeometryNodeInputPosition"], [7, 2, 1, "", "GeometryNodeInputRadius"], [7, 2, 1, "", "GeometryNodeInputSceneTime"], [7, 2, 1, "", "GeometryNodeInputShadeSmooth"], [7, 2, 1, "", "GeometryNodeInputShortestEdgePaths"], [7, 2, 1, "", "GeometryNodeInputSplineCyclic"], [7, 2, 1, "", "GeometryNodeInputSplineResolution"], [7, 2, 1, "", "GeometryNodeInputTangent"], [7, 2, 1, "", "GeometryNodeInstanceOnPoints"], [7, 2, 1, "", "GeometryNodeInstancesToPoints"], [7, 2, 1, "", "GeometryNodeInterpolateCurves"], [7, 2, 1, "", "GeometryNodeIsViewport"], [7, 2, 1, "", "GeometryNodeJoinGeometry"], [7, 2, 1, "", "GeometryNodeMaterialSelection"], [7, 2, 1, "", "GeometryNodeMergeByDistance"], [7, 2, 1, "", "GeometryNodeMeshBoolean"], [7, 2, 1, "", "GeometryNodeMeshCircle"], [7, 2, 1, "", "GeometryNodeMeshCone"], [7, 2, 1, "", "GeometryNodeMeshCube"], [7, 2, 1, "", "GeometryNodeMeshCylinder"], [7, 2, 1, "", "GeometryNodeMeshFaceSetBoundaries"], [7, 2, 1, "", "GeometryNodeMeshGrid"], [7, 2, 1, "", "GeometryNodeMeshIcoSphere"], [7, 2, 1, "", "GeometryNodeMeshLine"], [7, 2, 1, "", "GeometryNodeMeshToCurve"], [7, 2, 1, "", "GeometryNodeMeshToPoints"], [7, 2, 1, "", "GeometryNodeMeshToVolume"], [7, 2, 1, "", "GeometryNodeMeshUVSphere"], [7, 2, 1, "", "GeometryNodeObjectInfo"], [7, 2, 1, "", "GeometryNodeOffsetCornerInFace"], [7, 2, 1, "", "GeometryNodeOffsetPointInCurve"], [7, 2, 1, "", "GeometryNodePoints"], [7, 2, 1, "", "GeometryNodePointsOfCurve"], [7, 2, 1, "", "GeometryNodePointsToVertices"], [7, 2, 1, "", "GeometryNodePointsToVolume"], [7, 2, 1, "", "GeometryNodeProximity"], [7, 2, 1, "", "GeometryNodeRaycast"], [7, 2, 1, "", "GeometryNodeRealizeInstances"], [7, 2, 1, "", "GeometryNodeRemoveAttribute"], [7, 2, 1, "", "GeometryNodeReplaceMaterial"], [7, 2, 1, "", "GeometryNodeResampleCurve"], [7, 2, 1, "", "GeometryNodeReverseCurve"], [7, 2, 1, "", "GeometryNodeRotateInstances"], [7, 2, 1, "", "GeometryNodeSampleCurve"], [7, 2, 1, "", "GeometryNodeSampleIndex"], [7, 2, 1, "", "GeometryNodeSampleNearest"], [7, 2, 1, "", "GeometryNodeSampleNearestSurface"], [7, 2, 1, "", "GeometryNodeSampleUVSurface"], [7, 2, 1, "", "GeometryNodeScaleElements"], [7, 2, 1, "", "GeometryNodeScaleInstances"], [7, 2, 1, "", "GeometryNodeSelfObject"], [7, 2, 1, "", "GeometryNodeSeparateComponents"], [7, 2, 1, "", "GeometryNodeSeparateGeometry"], [7, 2, 1, "", "GeometryNodeSetCurveHandlePositions"], [7, 2, 1, "", "GeometryNodeSetCurveNormal"], [7, 2, 1, "", "GeometryNodeSetCurveRadius"], [7, 2, 1, "", "GeometryNodeSetCurveTilt"], [7, 2, 1, "", "GeometryNodeSetID"], [7, 2, 1, "", "GeometryNodeSetMaterial"], [7, 2, 1, "", "GeometryNodeSetMaterialIndex"], [7, 2, 1, "", "GeometryNodeSetPointRadius"], [7, 2, 1, "", "GeometryNodeSetPosition"], [7, 2, 1, "", "GeometryNodeSetShadeSmooth"], [7, 2, 1, "", "GeometryNodeSetSplineCyclic"], [7, 2, 1, "", "GeometryNodeSetSplineResolution"], [7, 2, 1, "", "GeometryNodeSplineLength"], [7, 2, 1, "", "GeometryNodeSplineParameter"], [7, 2, 1, "", "GeometryNodeSplitEdges"], [7, 2, 1, "", "GeometryNodeStoreNamedAttribute"], [7, 2, 1, "", "GeometryNodeStringJoin"], [7, 2, 1, "", "GeometryNodeStringToCurves"], [7, 2, 1, "", "GeometryNodeSubdivideCurve"], [7, 2, 1, "", "GeometryNodeSubdivideMesh"], [7, 2, 1, "", "GeometryNodeSubdivisionSurface"], [7, 2, 1, "", "GeometryNodeSwitch"], [7, 2, 1, "", "GeometryNodeTransform"], [7, 2, 1, "", "GeometryNodeTranslateInstances"], [7, 2, 1, "", "GeometryNodeTriangulate"], [7, 2, 1, "", "GeometryNodeTrimCurve"], [7, 2, 1, "", "GeometryNodeUVPackIslands"], [7, 2, 1, "", "GeometryNodeUVUnwrap"], [7, 2, 1, "", "GeometryNodeVertexOfCorner"], [7, 2, 1, "", "GeometryNodeViewer"], [7, 2, 1, "", "GeometryNodeVolumeCube"], [7, 2, 1, "", "GeometryNodeVolumeToMesh"], [7, 2, 1, "", "ShaderNodeAddShader"], [7, 2, 1, "", "ShaderNodeAmbientOcclusion"], [7, 2, 1, "", "ShaderNodeAttribute"], [7, 2, 1, "", "ShaderNodeBackground"], [7, 2, 1, "", "ShaderNodeBevel"], [7, 2, 1, "", "ShaderNodeBlackbody"], [7, 2, 1, "", "ShaderNodeBrightContrast"], [7, 2, 1, "", "ShaderNodeBsdfAnisotropic"], [7, 2, 1, "", "ShaderNodeBsdfDiffuse"], [7, 2, 1, "", "ShaderNodeBsdfGlass"], [7, 2, 1, "", "ShaderNodeBsdfGlossy"], [7, 2, 1, "", "ShaderNodeBsdfHair"], [7, 2, 1, "", "ShaderNodeBsdfHairPrincipled"], [7, 2, 1, "", "ShaderNodeBsdfPrincipled"], [7, 2, 1, "", "ShaderNodeBsdfRefraction"], [7, 2, 1, "", "ShaderNodeBsdfToon"], [7, 2, 1, "", "ShaderNodeBsdfTranslucent"], [7, 2, 1, "", "ShaderNodeBsdfTransparent"], [7, 2, 1, "", "ShaderNodeBsdfVelvet"], [7, 2, 1, "", "ShaderNodeBump"], [7, 2, 1, "", "ShaderNodeCameraData"], [7, 2, 1, "", "ShaderNodeClamp"], [7, 2, 1, "", "ShaderNodeCombineColor"], [7, 2, 1, "", "ShaderNodeCombineXYZ"], [7, 2, 1, "", "ShaderNodeDisplacement"], [7, 2, 1, "", "ShaderNodeEeveeSpecular"], [7, 2, 1, "", "ShaderNodeEmission"], [7, 2, 1, "", "ShaderNodeFloatCurve"], [7, 2, 1, "", "ShaderNodeFresnel"], [7, 2, 1, "", "ShaderNodeGamma"], [7, 2, 1, "", "ShaderNodeHairInfo"], [7, 2, 1, "", "ShaderNodeHoldout"], [7, 2, 1, "", "ShaderNodeHueSaturation"], [7, 2, 1, "", "ShaderNodeInvert"], [7, 2, 1, "", "ShaderNodeLayerWeight"], [7, 2, 1, "", "ShaderNodeLightFalloff"], [7, 2, 1, "", "ShaderNodeLightPath"], [7, 2, 1, "", "ShaderNodeMapRange"], [7, 2, 1, "", "ShaderNodeMapping"], [7, 2, 1, "", "ShaderNodeMath"], [7, 2, 1, "", "ShaderNodeMix"], [7, 2, 1, "", "ShaderNodeMixShader"], [7, 2, 1, "", "ShaderNodeNewGeometry"], [7, 2, 1, "", "ShaderNodeNormal"], [7, 2, 1, "", "ShaderNodeNormalMap"], [7, 2, 1, "", "ShaderNodeObjectInfo"], [7, 2, 1, "", "ShaderNodeOutputAOV"], [7, 2, 1, "", "ShaderNodeOutputLight"], [7, 2, 1, "", "ShaderNodeOutputMaterial"], [7, 2, 1, "", "ShaderNodeOutputWorld"], [7, 2, 1, "", "ShaderNodeParticleInfo"], [7, 2, 1, "", "ShaderNodePointInfo"], [7, 2, 1, "", "ShaderNodeRGB"], [7, 2, 1, "", "ShaderNodeRGBCurve"], [7, 2, 1, "", "ShaderNodeRGBToBW"], [7, 2, 1, "", "ShaderNodeScript"], [7, 2, 1, "", "ShaderNodeSeparateColor"], [7, 2, 1, "", "ShaderNodeSeparateXYZ"], [7, 2, 1, "", "ShaderNodeShaderToRGB"], [7, 2, 1, "", "ShaderNodeSubsurfaceScattering"], [7, 2, 1, "", "ShaderNodeTangent"], [7, 2, 1, "", "ShaderNodeTexBrick"], [7, 2, 1, "", "ShaderNodeTexChecker"], [7, 2, 1, "", "ShaderNodeTexCoord"], [7, 2, 1, "", "ShaderNodeTexEnvironment"], [7, 2, 1, "", "ShaderNodeTexGradient"], [7, 2, 1, "", "ShaderNodeTexIES"], [7, 2, 1, "", "ShaderNodeTexImage"], [7, 2, 1, "", "ShaderNodeTexMagic"], [7, 2, 1, "", "ShaderNodeTexMusgrave"], [7, 2, 1, "", "ShaderNodeTexNoise"], [7, 2, 1, "", "ShaderNodeTexPointDensity"], [7, 2, 1, "", "ShaderNodeTexSky"], [7, 2, 1, "", "ShaderNodeTexVoronoi"], [7, 2, 1, "", "ShaderNodeTexWave"], [7, 2, 1, "", "ShaderNodeTexWhiteNoise"], [7, 2, 1, "", "ShaderNodeUVMap"], [7, 2, 1, "", "ShaderNodeValToRGB"], [7, 2, 1, "", "ShaderNodeValue"], [7, 2, 1, "", "ShaderNodeVectorCurve"], [7, 2, 1, "", "ShaderNodeVectorDisplacement"], [7, 2, 1, "", "ShaderNodeVectorMath"], [7, 2, 1, "", "ShaderNodeVectorRotate"], [7, 2, 1, "", "ShaderNodeVectorTransform"], [7, 2, 1, "", "ShaderNodeVertexColor"], [7, 2, 1, "", "ShaderNodeVolumeAbsorption"], [7, 2, 1, "", "ShaderNodeVolumeInfo"], [7, 2, 1, "", "ShaderNodeVolumePrincipled"], [7, 2, 1, "", "ShaderNodeVolumeScatter"], [7, 2, 1, "", "ShaderNodeWavelength"], [7, 2, 1, "", "ShaderNodeWireframe"]], "pynodes.scene": [[8, 3, 1, "", "Key"], [8, 3, 1, "", "Mat"], [8, 3, 1, "", "Mod"], [8, 3, 1, "", "O"], [8, 3, 1, "", "ObjType"], [8, 3, 1, "", "Tree"]], "pynodes.scene.Key": [[8, 5, 1, "", "__eq__"], [8, 5, 1, "", "__hash__"]], "pynodes.scene.Mat": [[8, 4, 1, "", "slots"]], "pynodes.scene.Mod": [[8, 4, 1, "", "bevel"], [8, 4, 1, "", "geometry_nodes"], [8, 4, 1, "", "subdivision"]], "pynodes.scene.O": [[8, 4, 1, "", "circle"], [8, 4, 1, "", "cone"], [8, 4, 1, "", "cube"], [8, 4, 1, "", "ico_sphere"], [8, 4, 1, "", "monkey"], [8, 4, 1, "", "nurbs_path"], [8, 4, 1, "", "plane"]], "pynodes.scene.ObjType": [[8, 5, 1, "", "__matmul__"]], "pynodes.scene.Tree": [[8, 5, 1, "", "__getitem__"], [8, 5, 1, "", "load"], [8, 5, 1, "", "parse_mat_slots"], [8, 5, 1, "", "parse_modifier"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"], "6": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 1, 2, 3, 4, 5, 6, 7, 8], "refer": 0, "pynod": [1, 2, 3, 4, 5, 6, 7, 8, 9], "submodul": 1, "packag": 1, "content": [1, 2, 3, 4, 5, 6, 7, 8], "function": [1, 2, 3, 4, 5, 6, 7], "data": [1, 2, 3], "color": 2, "modul": [2, 3, 4, 5, 6, 7, 8], "core": 3, "class": [3, 4, 5, 6, 8], "datasock": 4, "path": [4, 5], "output": [4, 5, 7], "properti": [4, 5], "geosock": 5, "main": 6, "node": [7, 9], "input": 7, "scene": 8, "blender": 9, "support": 9, "all": 9, "kind": 9, "tree": 9, "\u5feb\u901f\u5165\u95e8": [], "\u76ee\u6807": 11, "\u83b7\u53d6\u516c\u5f0f": 11, "\u7b2c\u4e00\u4e2a\u8282\u70b9\u6811": 11, "\u6ce8\u610f": 11, "\u7531\u5750\u6807\u751f\u6210\u66f2\u7ebf": 11, "\u53c2\u6570\u9ed8\u8ba4\u503c": 11, "\u7531\u66f2\u7ebf\u751f\u6210\u7f51\u683c\u9762": 11, "\u63d0\u793a": 11, "\u573a\u666f\u7ba1\u7406": 11, "\u53ef\u9009": 11, "\u5b8c\u6574\u4ee3\u7801": 11, "\u8bf4\u660e": [], "\u5173\u4e8e\u6a21\u5757\u7684\u540d\u5b57": 10, "\u5148\u5907\u6761\u4ef6": 10, "\u57fa\u672c\u7406\u5ff5": 10, "introduct": 10, "quick": 11, "start": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "pynodes": [[1, "module-pynodes"]], "Submodules": [[1, "submodules"]], "Package Contents": [[1, "package-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"]], "Data": [[1, "data"], [2, "data"], [3, "data"]], "API": [[1, "api"], [2, "api"], [3, "api"], [4, "api"], [5, "api"], [6, "api"], [7, "api"], [8, "api"]], "pynodes.colors": [[2, "module-pynodes.colors"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"]], "pynodes.core": [[3, "module-pynodes.core"]], "Classes": [[3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"]], "pynodes.datasocks": [[4, "module-pynodes.datasocks"]], "Path": [[4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [4, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"], [5, "path"]], "Outputs:": [[4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [4, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [5, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"], [7, "outputs"]], "Properties:": [[4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [5, "properties"], [5, "properties"]], "Properties": [[4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [4, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"], [5, "properties"]], "pynodes.geosocks": [[5, "module-pynodes.geosocks"]], "pynodes.main": [[6, "module-pynodes.main"]], "pynodes.nodes": [[7, "module-pynodes.nodes"]], "Inputs:": [[7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"], [7, "inputs"]], "pynodes.scene": [[8, "module-pynodes.scene"]], "Pynodes for Blender support all kinds of tree nodes": [[9, "pynodes-for-blender-support-all-kinds-of-tree-nodes"]], "Introduction": [[10, "introduction"]], "\u5173\u4e8e\u6a21\u5757\u7684\u540d\u5b57": [[10, null]], "\u5148\u5907\u6761\u4ef6": [[10, null]], "\u57fa\u672c\u7406\u5ff5": [[10, null]], "Quick Start": [[11, "quick-start"]], "\u76ee\u6807": [[11, null]], "\u83b7\u53d6\u516c\u5f0f": [[11, "id1"]], "\u7b2c\u4e00\u4e2a\u8282\u70b9\u6811": [[11, "id2"]], "\u6ce8\u610f": [[11, null], [11, null]], "\u7531\u5750\u6807\u751f\u6210\u66f2\u7ebf": [[11, "id3"]], "\u53c2\u6570\u9ed8\u8ba4\u503c": [[11, null]], "\u7531\u66f2\u7ebf\u751f\u6210\u7f51\u683c\u9762": [[11, "id4"]], "\u63d0\u793a": [[11, null]], "\u573a\u666f\u7ba1\u7406\uff08\u53ef\u9009\uff09": [[11, "id5"]], "\u5b8c\u6574\u4ee3\u7801": [[11, "id6"]]}, "indexentries": {"bl_info (in module pynodes)": [[1, "pynodes.bl_info"]], "cos (in module pynodes)": [[1, "pynodes.cos"]], "module": [[1, "module-pynodes"], [2, "module-pynodes.colors"], [3, "module-pynodes.core"], [4, "module-pynodes.datasocks"], [5, "module-pynodes.geosocks"], [6, "module-pynodes.main"], [7, "module-pynodes.nodes"], [8, "module-pynodes.scene"]], "pynodes": [[1, "module-pynodes"]], "register() (in module pynodes)": [[1, "pynodes.register"]], "sin (in module pynodes)": [[1, "pynodes.sin"]], "tan (in module pynodes)": [[1, "pynodes.tan"]], "unregister() (in module pynodes)": [[1, "pynodes.unregister"]], "azure (in module pynodes.colors)": [[2, "pynodes.colors.azure"]], "black (in module pynodes.colors)": [[2, "pynodes.colors.black"]], "blue (in module pynodes.colors)": [[2, "pynodes.colors.blue"]], "color_palettes (in module pynodes.colors)": [[2, "pynodes.colors.color_palettes"]], "convert_srgb_to_linear_rgb() (in module pynodes.colors)": [[2, "pynodes.colors.convert_srgb_to_linear_rgb"]], "cyan (in module pynodes.colors)": [[2, "pynodes.colors.cyan"]], "dark_azure (in module pynodes.colors)": [[2, "pynodes.colors.dark_azure"]], "dark_blue (in module pynodes.colors)": [[2, "pynodes.colors.dark_blue"]], "dark_cyan (in module pynodes.colors)": [[2, "pynodes.colors.dark_cyan"]], "dark_gray (in module pynodes.colors)": [[2, "pynodes.colors.dark_gray"]], "dark_green (in module pynodes.colors)": [[2, "pynodes.colors.dark_green"]], "dark_lime (in module pynodes.colors)": [[2, "pynodes.colors.dark_lime"]], "dark_magenta (in module pynodes.colors)": [[2, "pynodes.colors.dark_magenta"]], "dark_olive (in module pynodes.colors)": [[2, "pynodes.colors.dark_olive"]], "dark_orange (in module pynodes.colors)": [[2, "pynodes.colors.dark_orange"]], "dark_red (in module pynodes.colors)": [[2, "pynodes.colors.dark_red"]], "dark_rose (in module pynodes.colors)": [[2, "pynodes.colors.dark_rose"]], "dark_violet (in module pynodes.colors)": [[2, "pynodes.colors.dark_violet"]], "dark_yellow (in module pynodes.colors)": [[2, "pynodes.colors.dark_yellow"]], "gray (in module pynodes.colors)": [[2, "pynodes.colors.gray"]], "green (in module pynodes.colors)": [[2, "pynodes.colors.green"]], "hex_color_to_rgb() (in module pynodes.colors)": [[2, "pynodes.colors.hex_color_to_rgb"]], "hex_color_to_rgba() (in module pynodes.colors)": [[2, "pynodes.colors.hex_color_to_rgba"]], "light_azure (in module pynodes.colors)": [[2, "pynodes.colors.light_azure"]], "light_blue (in module pynodes.colors)": [[2, "pynodes.colors.light_blue"]], "light_cyan (in module pynodes.colors)": [[2, "pynodes.colors.light_cyan"]], "light_gray (in module pynodes.colors)": [[2, "pynodes.colors.light_gray"]], "light_green (in module pynodes.colors)": [[2, "pynodes.colors.light_green"]], "light_lime (in module pynodes.colors)": [[2, "pynodes.colors.light_lime"]], "light_magenta (in module pynodes.colors)": [[2, "pynodes.colors.light_magenta"]], "light_olive (in module pynodes.colors)": [[2, "pynodes.colors.light_olive"]], "light_orange (in module pynodes.colors)": [[2, "pynodes.colors.light_orange"]], "light_red (in module pynodes.colors)": [[2, "pynodes.colors.light_red"]], "light_rose (in module pynodes.colors)": [[2, "pynodes.colors.light_rose"]], "light_violet (in module pynodes.colors)": [[2, "pynodes.colors.light_violet"]], "light_yellow (in module pynodes.colors)": [[2, "pynodes.colors.light_yellow"]], "lime (in module pynodes.colors)": [[2, "pynodes.colors.lime"]], "magenta (in module pynodes.colors)": [[2, "pynodes.colors.magenta"]], "mid_azure (in module pynodes.colors)": [[2, "pynodes.colors.mid_azure"]], "mid_blue (in module pynodes.colors)": [[2, "pynodes.colors.mid_blue"]], "mid_cyan (in module pynodes.colors)": [[2, "pynodes.colors.mid_cyan"]], "mid_green (in module pynodes.colors)": [[2, "pynodes.colors.mid_green"]], "mid_lime (in module pynodes.colors)": [[2, "pynodes.colors.mid_lime"]], "mid_magenta (in module pynodes.colors)": [[2, "pynodes.colors.mid_magenta"]], "mid_olive (in module pynodes.colors)": [[2, "pynodes.colors.mid_olive"]], "mid_orange (in module pynodes.colors)": [[2, "pynodes.colors.mid_orange"]], "mid_red (in module pynodes.colors)": [[2, "pynodes.colors.mid_red"]], "mid_rose (in module pynodes.colors)": [[2, "pynodes.colors.mid_rose"]], "mid_violet (in module pynodes.colors)": [[2, "pynodes.colors.mid_violet"]], "mid_yellow (in module pynodes.colors)": [[2, "pynodes.colors.mid_yellow"]], "olive (in module pynodes.colors)": [[2, "pynodes.colors.olive"]], "orange (in module pynodes.colors)": [[2, "pynodes.colors.orange"]], "pynodes.colors": [[2, "module-pynodes.colors"]], "red (in module pynodes.colors)": [[2, "pynodes.colors.red"]], "rgb() (in module pynodes.colors)": [[2, "pynodes.colors.rgb"]], "rgba() (in module pynodes.colors)": [[2, "pynodes.colors.rgba"]], "rose (in module pynodes.colors)": [[2, "pynodes.colors.rose"]], "silver (in module pynodes.colors)": [[2, "pynodes.colors.silver"]], "violet (in module pynodes.colors)": [[2, "pynodes.colors.violet"]], "white (in module pynodes.colors)": [[2, "pynodes.colors.white"]], "yellow (in module pynodes.colors)": [[2, "pynodes.colors.yellow"]], "boolean (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Boolean"]], "collection (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Collection"]], "color (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Color"]], "curve (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Curve"]], "float (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Float"]], "frame (class in pynodes.core)": [[3, "pynodes.core.Frame"]], "geometry (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Geometry"]], "group (class in pynodes.core)": [[3, "pynodes.core.Group"]], "image (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Image"]], "input() (pynodes.core.socket class method)": [[3, "pynodes.core.Socket.Input"]], "instances (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Instances"]], "integer (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Integer"]], "material (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Material"]], "mesh (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Mesh"]], "nodewraper (class in pynodes.core)": [[3, "pynodes.core.NodeWraper"]], "object (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Object"]], "param (in module pynodes.core)": [[3, "pynodes.core.Param"]], "points (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Points"]], "rt (in module pynodes.core)": [[3, "pynodes.core.RT"]], "script (class in pynodes.core)": [[3, "pynodes.core.Script"]], "shader (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Shader"]], "socket (class in pynodes.core)": [[3, "pynodes.core.Socket"]], "socketwraper (class in pynodes.core)": [[3, "pynodes.core.SocketWraper"]], "string (pynodes.core.socket property)": [[3, "pynodes.core.Socket.String"]], "texture (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Texture"]], "tree (class in pynodes.core)": [[3, "pynodes.core.Tree"]], "vector (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Vector"]], "volume (pynodes.core.socket property)": [[3, "pynodes.core.Socket.Volume"]], "__call__() (pynodes.core.group method)": [[3, "pynodes.core.Group.__call__"]], "__call__() (pynodes.core.socket method)": [[3, "pynodes.core.Socket.__call__"]], "__getitem__() (pynodes.core.group method)": [[3, "pynodes.core.Group.__getitem__"]], "__getitem__() (pynodes.core.script method)": [[3, "pynodes.core.Script.__getitem__"]], "__setitem__() (pynodes.core.group method)": [[3, "pynodes.core.Group.__setitem__"]], "__setitem__() (pynodes.core.nodewraper method)": [[3, "pynodes.core.NodeWraper.__setitem__"]], "__setitem__() (pynodes.core.script method)": [[3, "pynodes.core.Script.__setitem__"]], "__setitem__() (pynodes.core.socket method)": [[3, "pynodes.core.Socket.__setitem__"]], "bl_idname (pynodes.core.frame attribute)": [[3, "pynodes.core.Frame.bl_idname"]], "bl_idname (pynodes.core.script attribute)": [[3, "pynodes.core.Script.bl_idname"]], "bl_idname (pynodes.core.socket attribute)": [[3, "pynodes.core.Socket.bl_idname"]], "color (pynodes.core.nodewraper property)": [[3, "pynodes.core.NodeWraper.color"]], "color (pynodes.core.script property)": [[3, "pynodes.core.Script.color"]], "convert_param_name() (in module pynodes.core)": [[3, "pynodes.core.convert_param_name"]], "cur_frame (pynodes.core.tree property)": [[3, "pynodes.core.Tree.cur_frame"]], "default_value (pynodes.core.socketwraper property)": [[3, "pynodes.core.SocketWraper.default_value"]], "dispath_tree() (in module pynodes.core)": [[3, "pynodes.core.dispath_tree"]], "fac (pynodes.core.script property)": [[3, "pynodes.core.Script.fac"]], "frame() (in module pynodes.core)": [[3, "pynodes.core.frame"]], "frame() (pynodes.core.tree method)": [[3, "pynodes.core.Tree.frame"]], "func_ret_to_tree_output() (pynodes.core.socket method)": [[3, "pynodes.core.Socket.func_ret_to_tree_output"]], "get_param_name() (in module pynodes.core)": [[3, "pynodes.core.get_param_name"]], "group_input_node (pynodes.core.tree property)": [[3, "pynodes.core.Tree.group_input_node"]], "group_output_node (pynodes.core.tree property)": [[3, "pynodes.core.Tree.group_output_node"]], "height (pynodes.core.script property)": [[3, "pynodes.core.Script.height"]], "inputs (pynodes.core.nodewraper property)": [[3, "pynodes.core.NodeWraper.inputs"]], "is_embedded (pynodes.core.tree property)": [[3, "pynodes.core.Tree.is_embedded"]], "label (pynodes.core.nodewraper property)": [[3, "pynodes.core.NodeWraper.label"]], "link_tree_output() (pynodes.core.socket method)": [[3, "pynodes.core.Socket.link_tree_output"]], "linked_to_group_output (pynodes.core.socket property)": [[3, "pynodes.core.Socket.linked_to_group_output"]], "name (pynodes.core.socket property)": [[3, "pynodes.core.Socket.name"]], "new_group_node() (pynodes.core.tree method)": [[3, "pynodes.core.Tree.new_group_node"]], "new_input() (pynodes.core.tree method)": [[3, "pynodes.core.Tree.new_input"]], "new_link() (in module pynodes.core)": [[3, "pynodes.core.new_link"]], "new_link() (pynodes.core.tree method)": [[3, "pynodes.core.Tree.new_link"]], "new_node() (in module pynodes.core)": [[3, "pynodes.core.new_node"]], "new_node() (pynodes.core.tree method)": [[3, "pynodes.core.Tree.new_node"]], "new_output() (pynodes.core.tree method)": [[3, "pynodes.core.Tree.new_output"]], "node (pynodes.core.socket property)": [[3, "pynodes.core.Socket.node"]], "outputs (pynodes.core.nodewraper property)": [[3, "pynodes.core.NodeWraper.outputs"]], "plug_inputs() (pynodes.core.nodewraper method)": [[3, "pynodes.core.NodeWraper.plug_inputs"]], "pynodes.core": [[3, "module-pynodes.core"]], "reload() (in module pynodes.core)": [[3, "pynodes.core.reload"]], "tree (pynodes.core.tree attribute)": [[3, "pynodes.core.Tree.tree"]], "tree() (in module pynodes.core)": [[3, "pynodes.core.tree"]], "tree_output_node (pynodes.core.tree property)": [[3, "pynodes.core.Tree.tree_output_node"]], "update_modifier() (in module pynodes.core)": [[3, "pynodes.core.update_modifier"]], "vector (pynodes.core.script property)": [[3, "pynodes.core.Script.vector"]], "ambientocclusion() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.AmbientOcclusion"]], "angle (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Angle"]], "anisotropic() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Anisotropic"]], "bsdf (class in pynodes.datasocks)": [[4, "pynodes.datasocks.BSDF"]], "background() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.Background"]], "boolean (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Boolean"]], "booleanmath() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.BooleanMath"]], "bricktexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.BrickTexture"]], "brightcontrast() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.BrightContrast"]], "checkertexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.CheckerTexture"]], "collection (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Collection"]], "collectioninfo() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.CollectionInfo"]], "color (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Color"]], "colorgamma() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ColorGamma"]], "colorramp() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ColorRamp"]], "combinecolor() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.CombineColor"]], "combinexyz() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.CombineXYZ"]], "compare() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.Compare"]], "diffuse() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Diffuse"]], "emission() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.Emission"]], "environmenttexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.EnvironmentTexture"]], "float (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Float"]], "floatmath() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.FloatMath"]], "geometrynodeviewer() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.GeometryNodeViewer"]], "glass() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Glass"]], "glossy() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Glossy"]], "gradienttexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.GradientTexture"]], "hair() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Hair"]], "hairprincipled() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.HairPrincipled"]], "holdout() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.Holdout"]], "huesaturation() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.HueSaturation"]], "ies_texture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.IES_Texture"]], "image (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Image"]], "imageinfo() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ImageInfo"]], "imagetexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ImageTexture"]], "imagetexturegeo() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ImageTextureGeo"]], "inputbool() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputBool"]], "inputcolor() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputColor"]], "inputfloat() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputFloat"]], "inputimage() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputImage"]], "inputint() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputInt"]], "inputmaterial() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputMaterial"]], "inputposition() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputPosition"]], "inputrgb() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputRGB"]], "inputstring() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputString"]], "inputvalue() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputValue"]], "inputvector() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.InputVector"]], "integer (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Integer"]], "isviewport() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.IsViewport"]], "lightfalloff() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.LightFalloff"]], "magictexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.MagicTexture"]], "material (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Material"]], "mixcolor() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.MixColor"]], "mixfloat() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.MixFloat"]], "mixshader() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.MixShader"]], "mixvector() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.MixVector"]], "musgravetexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.MusgraveTexture"]], "noisetexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.NoiseTexture"]], "object (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Object"]], "objectinfo() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ObjectInfo"]], "pointdensity() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.PointDensity"]], "principled() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Principled"]], "randomboolean() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.RandomBoolean"]], "randomfloat() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.RandomFloat"]], "randominteger() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.RandomInteger"]], "randomvector() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.RandomVector"]], "refraction() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Refraction"]], "scenetime() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.SceneTime"]], "selfobject() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.SelfObject"]], "separatecolor() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.SeparateColor"]], "shader (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Shader"]], "shadergeometry() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderGeometry"]], "shadernodeblackbody() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeBlackbody"]], "shadernodebump() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeBump"]], "shadernodecombinecolor() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeCombineColor"]], "shadernodedisplacement() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeDisplacement"]], "shadernodemapping() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeMapping"]], "shadernodenormal() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeNormal"]], "shadernodenormalmap() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeNormalMap"]], "shadernodeobjectinfo (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.ShaderNodeObjectInfo"]], "shadernodergbcurve() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeRGBCurve"]], "shadernodergbtobw() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeRGBToBW"]], "shadernodeseparatecolor() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeSeparateColor"]], "shadernodevectordisplacement() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeVectorDisplacement"]], "shadernodevectortransform() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeVectorTransform"]], "shadernodewavelength() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderNodeWavelength"]], "shaderscript() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ShaderScript"]], "skytexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.SkyTexture"]], "specular() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Specular"]], "string (class in pynodes.datasocks)": [[4, "pynodes.datasocks.String"]], "stringtocurves() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.StringToCurves"]], "subsurfacescattering() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.SubsurfaceScattering"]], "switch() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.Switch"]], "texture (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Texture"]], "texturecoord() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.TextureCoord"]], "toon() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Toon"]], "translucent() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Translucent"]], "transparent() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Transparent"]], "vector (class in pynodes.datasocks)": [[4, "pynodes.datasocks.Vector"]], "vectormath() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.VectorMath"]], "velvet() (pynodes.datasocks.bsdf static method)": [[4, "pynodes.datasocks.BSDF.Velvet"]], "viewboolean() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ViewBoolean"]], "viewcolor() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ViewColor"]], "viewfloat() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ViewFloat"]], "viewinteger() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ViewInteger"]], "viewvector() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.ViewVector"]], "volumeabsorption() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.VolumeAbsorption"]], "volumeprincipled() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.VolumePrincipled"]], "volumescatter() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.VolumeScatter"]], "voronoitexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.VoronoiTexture"]], "wavetexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.WaveTexture"]], "whitenoisetexture() (in module pynodes.datasocks)": [[4, "pynodes.datasocks.WhiteNoiseTexture"]], "__abs__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__abs__"]], "__abs__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__abs__"]], "__add__() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.__add__"]], "__add__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__add__"]], "__add__() (pynodes.datasocks.shader method)": [[4, "pynodes.datasocks.Shader.__add__"]], "__add__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__add__"]], "__and__() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.__and__"]], "__ceil__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__ceil__"]], "__ceil__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__ceil__"]], "__eq__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__eq__"]], "__eq__() (pynodes.datasocks.integer method)": [[4, "pynodes.datasocks.Integer.__eq__"]], "__floor__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__floor__"]], "__floor__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__floor__"]], "__ge__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__ge__"]], "__ge__() (pynodes.datasocks.integer method)": [[4, "pynodes.datasocks.Integer.__ge__"]], "__gt__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__gt__"]], "__gt__() (pynodes.datasocks.integer method)": [[4, "pynodes.datasocks.Integer.__gt__"]], "__invert__() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.__invert__"]], "__le__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__le__"]], "__le__() (pynodes.datasocks.integer method)": [[4, "pynodes.datasocks.Integer.__le__"]], "__lt__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__lt__"]], "__lt__() (pynodes.datasocks.integer method)": [[4, "pynodes.datasocks.Integer.__lt__"]], "__mod__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__mod__"]], "__mod__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__mod__"]], "__mul__() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.__mul__"]], "__mul__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__mul__"]], "__mul__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__mul__"]], "__ne__() (pynodes.datasocks.integer method)": [[4, "pynodes.datasocks.Integer.__ne__"]], "__neg__() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.__neg__"]], "__neg__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__neg__"]], "__or__() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.__or__"]], "__pow__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__pow__"]], "__radd__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__radd__"]], "__radd__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__radd__"]], "__rmul__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__rmul__"]], "__round__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__round__"]], "__rsub__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__rsub__"]], "__rsub__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__rsub__"]], "__rtruediv__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__rtruediv__"]], "__sub__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__sub__"]], "__sub__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__sub__"]], "__truediv__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__truediv__"]], "__truediv__() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.__truediv__"]], "__trunc__() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.__trunc__"]], "absolute (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.absolute"]], "absolute() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.absolute"]], "add_shader() (pynodes.datasocks.shader method)": [[4, "pynodes.datasocks.Shader.add_shader"]], "align_euler_to_vector() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.align_euler_to_vector"]], "arccos() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.arccos"]], "arccosine (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.arccosine"]], "arcsin() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.arcsin"]], "arcsine (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.arcsine"]], "arctan() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.arctan"]], "arctan2() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.arctan2"]], "arctangent (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.arctangent"]], "attribute() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.attribute"]], "bevel() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.bevel"]], "bl_idname (pynodes.datasocks.angle attribute)": [[4, "pynodes.datasocks.Angle.bl_idname"]], "bl_idname (pynodes.datasocks.boolean attribute)": [[4, "pynodes.datasocks.Boolean.bl_idname"]], "bl_idname (pynodes.datasocks.collection attribute)": [[4, "pynodes.datasocks.Collection.bl_idname"]], "bl_idname (pynodes.datasocks.color attribute)": [[4, "pynodes.datasocks.Color.bl_idname"]], "bl_idname (pynodes.datasocks.float attribute)": [[4, "pynodes.datasocks.Float.bl_idname"]], "bl_idname (pynodes.datasocks.image attribute)": [[4, "pynodes.datasocks.Image.bl_idname"]], "bl_idname (pynodes.datasocks.integer attribute)": [[4, "pynodes.datasocks.Integer.bl_idname"]], "bl_idname (pynodes.datasocks.material attribute)": [[4, "pynodes.datasocks.Material.bl_idname"]], "bl_idname (pynodes.datasocks.object attribute)": [[4, "pynodes.datasocks.Object.bl_idname"]], "bl_idname (pynodes.datasocks.shader attribute)": [[4, "pynodes.datasocks.Shader.bl_idname"]], "bl_idname (pynodes.datasocks.string attribute)": [[4, "pynodes.datasocks.String.bl_idname"]], "bl_idname (pynodes.datasocks.texture attribute)": [[4, "pynodes.datasocks.Texture.bl_idname"]], "bl_idname (pynodes.datasocks.vector attribute)": [[4, "pynodes.datasocks.Vector.bl_idname"]], "bright_contrast() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.bright_contrast"]], "camera_data (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.camera_data"]], "ceil (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.ceil"]], "ceil() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.ceil"]], "clamp() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.clamp"]], "color_attribute() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.color_attribute"]], "compare() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.compare"]], "cos() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.cos"]], "cos() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.cos"]], "cosh() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.cosh"]], "cosine (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.cosine"]], "cross() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.cross"]], "curve() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.curve"]], "degrees (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.degrees"]], "distance() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.distance"]], "dot() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.dot"]], "exponent (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.exponent"]], "faceforward() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.faceforward"]], "false (pynodes.datasocks.boolean property)": [[4, "pynodes.datasocks.Boolean.false"]], "float_curve() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.float_curve"]], "floor (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.floor"]], "floor() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.floor"]], "fract (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.fract"]], "fraction() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.fraction"]], "fresnel() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.fresnel"]], "gamma() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.gamma"]], "geometry (pynodes.datasocks.object property)": [[4, "pynodes.datasocks.Object.geometry"]], "geometry (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.geometry"]], "greater_than() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.greater_than"]], "hair_info (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.hair_info"]], "hue_saturation() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.hue_saturation"]], "hyperbolic_cosine (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.hyperbolic_cosine"]], "hyperbolic_sine (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.hyperbolic_sine"]], "hyperbolic_tangent (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.hyperbolic_tangent"]], "imply() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.imply"]], "index (pynodes.datasocks.material property)": [[4, "pynodes.datasocks.Material.index"]], "inverse_sqrt (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.inverse_sqrt"]], "invert (pynodes.datasocks.boolean property)": [[4, "pynodes.datasocks.Boolean.invert"]], "invert() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.invert"]], "join() (pynodes.datasocks.string method)": [[4, "pynodes.datasocks.String.join"]], "layer_weight() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.layer_weight"]], "length (pynodes.datasocks.string property)": [[4, "pynodes.datasocks.String.length"]], "length (pynodes.datasocks.vector property)": [[4, "pynodes.datasocks.Vector.length"]], "less_than() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.less_than"]], "light_path (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.light_path"]], "line_to() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.line_to"]], "line_towards() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.line_towards"]], "ln (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.ln"]], "location (pynodes.datasocks.object property)": [[4, "pynodes.datasocks.Object.location"]], "log() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.log"]], "log2 (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.log2"]], "map_range() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.map_range"]], "map_range() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.map_range"]], "mapping() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.mapping"]], "material_selection() (pynodes.datasocks.material method)": [[4, "pynodes.datasocks.Material.material_selection"]], "math() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.math"]], "math() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.math"]], "math() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.math"]], "math_and() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.math_and"]], "math_or() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.math_or"]], "maximum() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.maximum"]], "maximum() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.maximum"]], "minimum() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.minimum"]], "minimum() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.minimum"]], "mix() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.mix"]], "mix() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.mix"]], "mix() (pynodes.datasocks.shader method)": [[4, "pynodes.datasocks.Shader.mix"]], "mix() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.mix"]], "modulo() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.modulo"]], "modulo() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.modulo"]], "multiply_add() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.multiply_add"]], "multiply_add() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.multiply_add"]], "nor() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.nor"]], "normal_map() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.normal_map"]], "normalize() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.normalize"]], "not_and() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.not_and"]], "not_imply() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.not_imply"]], "object_info() (pynodes.datasocks.object method)": [[4, "pynodes.datasocks.Object.object_info"]], "particle_info (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.particle_info"]], "pingpong() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.pingpong"]], "point_info (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.point_info"]], "power() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.power"]], "project() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.project"]], "pynodes.datasocks": [[4, "module-pynodes.datasocks"]], "radians (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.radians"]], "reflect() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.reflect"]], "refract() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.refract"]], "replace() (pynodes.datasocks.string method)": [[4, "pynodes.datasocks.String.replace"]], "rgb_curve() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.rgb_curve"]], "rotate() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate"]], "rotate_around_axis() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_around_axis"]], "rotate_around_euler_xyz() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_around_euler_xyz"]], "rotate_around_x_axis() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_around_x_axis"]], "rotate_around_y_axis() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_around_y_axis"]], "rotate_around_z_axis() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_around_z_axis"]], "rotate_local_around_axis_by_angle() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_local_around_axis_by_angle"]], "rotate_local_euler() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_local_euler"]], "rotate_object_around_axis_by_angle() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_object_around_axis_by_angle"]], "rotate_object_euler() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.rotate_object_euler"]], "rotation (pynodes.datasocks.object property)": [[4, "pynodes.datasocks.Object.rotation"]], "round (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.round"]], "scale (pynodes.datasocks.object property)": [[4, "pynodes.datasocks.Object.scale"]], "scale() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.scale"]], "separate_xyz() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.separate_xyz"]], "seperate() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.seperate"]], "sign (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.sign"]], "sin() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.sin"]], "sin() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.sin"]], "sine (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.sine"]], "sinh() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.sinh"]], "slice() (pynodes.datasocks.string method)": [[4, "pynodes.datasocks.String.slice"]], "smooth_maximum() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.smooth_maximum"]], "smooth_minimum() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.smooth_minimum"]], "snap() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.snap"]], "snap() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.snap"]], "special_characters (pynodes.datasocks.string property)": [[4, "pynodes.datasocks.String.special_characters"]], "sqrt() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.sqrt"]], "square_root (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.square_root"]], "substract() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.substract"]], "switch() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.switch"]], "switch() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.switch"]], "switch() (pynodes.datasocks.integer method)": [[4, "pynodes.datasocks.Integer.switch"]], "switch() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.switch"]], "tan() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.tan"]], "tangent (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.tangent"]], "tangent() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.tangent"]], "tangent_radial() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.tangent_radial"]], "tangent_uv_map() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.tangent_uv_map"]], "tanh() (pynodes.datasocks.float class method)": [[4, "pynodes.datasocks.Float.tanh"]], "texture_coord() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.texture_coord"]], "to_background() (pynodes.datasocks.color method)": [[4, "pynodes.datasocks.Color.to_background"]], "to_color() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.to_color"]], "to_curve() (pynodes.datasocks.string method)": [[4, "pynodes.datasocks.String.to_curve"]], "to_curves() (pynodes.datasocks.string method)": [[4, "pynodes.datasocks.String.to_curves"]], "to_integer() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.to_integer"]], "to_normal() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.to_normal"]], "to_rgb() (pynodes.datasocks.shader method)": [[4, "pynodes.datasocks.Shader.to_rgb"]], "to_string() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.to_string"]], "true (pynodes.datasocks.boolean property)": [[4, "pynodes.datasocks.Boolean.true"]], "trunc (pynodes.datasocks.float property)": [[4, "pynodes.datasocks.Float.trunc"]], "uv_map() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.uv_map"]], "vector_curve() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.vector_curve"]], "volume_info (pynodes.datasocks.shader property)": [[4, "pynodes.datasocks.Shader.volume_info"]], "wire_frame() (pynodes.datasocks.shader static method)": [[4, "pynodes.datasocks.Shader.wire_frame"]], "wrap() (pynodes.datasocks.float method)": [[4, "pynodes.datasocks.Float.wrap"]], "wrap() (pynodes.datasocks.vector method)": [[4, "pynodes.datasocks.Vector.wrap"]], "x (pynodes.datasocks.vector property)": [[4, "pynodes.datasocks.Vector.x"]], "xnor() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.xnor"]], "xor() (pynodes.datasocks.boolean method)": [[4, "pynodes.datasocks.Boolean.xor"]], "y (pynodes.datasocks.vector property)": [[4, "pynodes.datasocks.Vector.y"]], "z (pynodes.datasocks.vector property)": [[4, "pynodes.datasocks.Vector.z"]], "beziersegment() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.BezierSegment"]], "curve (class in pynodes.geosocks)": [[5, "pynodes.geosocks.Curve"]], "curvearc() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveArc"]], "curvearcpoints() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveArcPoints"]], "curvecircle() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveCircle"]], "curvecirclepoints() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveCirclePoints"]], "curveline() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveLine"]], "curvequadraticbezier() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveQuadraticBezier"]], "curvespiral() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveSpiral"]], "curvestar() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.CurveStar"]], "geometry (class in pynodes.geosocks)": [[5, "pynodes.geosocks.Geometry"]], "id (pynodes.geosocks.geometry property)": [[5, "pynodes.geosocks.Geometry.ID"]], "instances (class in pynodes.geosocks)": [[5, "pynodes.geosocks.Instances"]], "kite() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.Kite"]], "mesh (class in pynodes.geosocks)": [[5, "pynodes.geosocks.Mesh"]], "meshcircle() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshCircle"]], "meshcone() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshCone"]], "meshcube() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshCube"]], "meshcylinder() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshCylinder"]], "meshgrid() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshGrid"]], "meshicosphere() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshIcoSphere"]], "meshline() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshLine"]], "meshuvsphere() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.MeshUVSphere"]], "parallelogram() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.Parallelogram"]], "points (class in pynodes.geosocks)": [[5, "pynodes.geosocks.Points"]], "pointsnode() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.PointsNode"]], "quadrangle() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.Quadrangle"]], "rectangle() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.Rectangle"]], "trapezoid() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.Trapezoid"]], "volume (class in pynodes.geosocks)": [[5, "pynodes.geosocks.Volume"]], "volumecube() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.VolumeCube"]], "__add__() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.__add__"]], "__getitem__() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.__getitem__"]], "_store_named_attribute() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry._store_named_attribute"]], "accumulate_float_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_float_on_corners"]], "accumulate_float_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_float_on_curves"]], "accumulate_float_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_float_on_edges"]], "accumulate_float_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_float_on_faces"]], "accumulate_float_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_float_on_instances"]], "accumulate_float_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_float_on_points"]], "accumulate_integer_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_integer_on_corners"]], "accumulate_integer_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_integer_on_curves"]], "accumulate_integer_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_integer_on_edges"]], "accumulate_integer_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_integer_on_faces"]], "accumulate_integer_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_integer_on_instances"]], "accumulate_integer_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_integer_on_points"]], "accumulate_vector_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_vector_on_corners"]], "accumulate_vector_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_vector_on_curves"]], "accumulate_vector_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_vector_on_edges"]], "accumulate_vector_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_vector_on_faces"]], "accumulate_vector_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_vector_on_instances"]], "accumulate_vector_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.accumulate_vector_on_points"]], "bl_idname (pynodes.geosocks.geometry attribute)": [[5, "pynodes.geosocks.Geometry.bl_idname"]], "blur_color_attribute() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.blur_color_attribute"]], "blur_float_attribute() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.blur_float_attribute"]], "blur_integer_attribute() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.blur_integer_attribute"]], "blur_vector_attribute() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.blur_vector_attribute"]], "bound_box() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.bound_box"]], "capture_boolean_on_corners() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_boolean_on_corners"]], "capture_boolean_on_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_boolean_on_curves"]], "capture_boolean_on_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_boolean_on_edges"]], "capture_boolean_on_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_boolean_on_faces"]], "capture_boolean_on_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_boolean_on_instances"]], "capture_boolean_on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_boolean_on_points"]], "capture_color_on_corners() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_color_on_corners"]], "capture_color_on_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_color_on_curves"]], "capture_color_on_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_color_on_edges"]], "capture_color_on_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_color_on_faces"]], "capture_color_on_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_color_on_instances"]], "capture_color_on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_color_on_points"]], "capture_float_on_corners() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_float_on_corners"]], "capture_float_on_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_float_on_curves"]], "capture_float_on_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_float_on_edges"]], "capture_float_on_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_float_on_faces"]], "capture_float_on_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_float_on_instances"]], "capture_float_on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_float_on_points"]], "capture_integer_on_corners() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_integer_on_corners"]], "capture_integer_on_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_integer_on_curves"]], "capture_integer_on_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_integer_on_edges"]], "capture_integer_on_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_integer_on_faces"]], "capture_integer_on_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_integer_on_instances"]], "capture_integer_on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_integer_on_points"]], "capture_vector_on_corners() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_vector_on_corners"]], "capture_vector_on_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_vector_on_curves"]], "capture_vector_on_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_vector_on_edges"]], "capture_vector_on_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_vector_on_faces"]], "capture_vector_on_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_vector_on_instances"]], "capture_vector_on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.capture_vector_on_points"]], "convex_hull() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.convex_hull"]], "corners_of_face() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.corners_of_face"]], "corners_of_vertex() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.corners_of_vertex"]], "curve_length (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.curve_length"]], "curve_of_point() (pynodes.geosocks.curve static method)": [[5, "pynodes.geosocks.Curve.curve_of_point"]], "deform_on_surface() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.deform_on_surface"]], "delete() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.delete"]], "distribute_points_grid() (pynodes.geosocks.volume method)": [[5, "pynodes.geosocks.Volume.distribute_points_grid"]], "distribute_points_on_faces() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.distribute_points_on_faces"]], "distribute_points_random() (pynodes.geosocks.volume method)": [[5, "pynodes.geosocks.Volume.distribute_points_random"]], "domain_size (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.domain_size"]], "domain_size (pynodes.geosocks.instances property)": [[5, "pynodes.geosocks.Instances.domain_size"]], "domain_size (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.domain_size"]], "domain_size (pynodes.geosocks.points property)": [[5, "pynodes.geosocks.Points.domain_size"]], "domain_size() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.domain_size"]], "dual_mesh() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.dual_mesh"]], "duplicate_elements() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.duplicate_elements"]], "edge_angle (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.edge_angle"]], "edge_neighbors (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.edge_neighbors"]], "edge_paths_to_curves() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.edge_paths_to_curves"]], "edge_paths_to_selection() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.edge_paths_to_selection"]], "edge_vertices (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.edge_vertices"]], "edges_of_corner() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.edges_of_corner"]], "edges_of_vertex() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.edges_of_vertex"]], "edges_to_face_groups() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.edges_to_face_groups"]], "endpoint_selection() (pynodes.geosocks.curve static method)": [[5, "pynodes.geosocks.Curve.endpoint_selection"]], "evaluate_boolean_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_corners"]], "evaluate_boolean_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_curves"]], "evaluate_boolean_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_edges"]], "evaluate_boolean_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_faces"]], "evaluate_boolean_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_instances"]], "evaluate_boolean_at_index_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_at_index_on_points"]], "evaluate_boolean_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_on_corners"]], "evaluate_boolean_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_on_curves"]], "evaluate_boolean_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_on_edges"]], "evaluate_boolean_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_on_faces"]], "evaluate_boolean_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_on_instances"]], "evaluate_boolean_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_boolean_on_points"]], "evaluate_color_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_corners"]], "evaluate_color_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_curves"]], "evaluate_color_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_edges"]], "evaluate_color_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_faces"]], "evaluate_color_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_instances"]], "evaluate_color_at_index_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_at_index_on_points"]], "evaluate_color_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_on_corners"]], "evaluate_color_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_on_curves"]], "evaluate_color_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_on_edges"]], "evaluate_color_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_on_faces"]], "evaluate_color_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_on_instances"]], "evaluate_color_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_color_on_points"]], "evaluate_float_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_corners"]], "evaluate_float_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_curves"]], "evaluate_float_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_edges"]], "evaluate_float_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_faces"]], "evaluate_float_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_instances"]], "evaluate_float_at_index_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_at_index_on_points"]], "evaluate_float_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_on_corners"]], "evaluate_float_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_on_curves"]], "evaluate_float_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_on_edges"]], "evaluate_float_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_on_faces"]], "evaluate_float_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_on_instances"]], "evaluate_float_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_float_on_points"]], "evaluate_integer_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_corners"]], "evaluate_integer_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_curves"]], "evaluate_integer_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_edges"]], "evaluate_integer_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_faces"]], "evaluate_integer_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_instances"]], "evaluate_integer_at_index_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_at_index_on_points"]], "evaluate_integer_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_on_corners"]], "evaluate_integer_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_on_curves"]], "evaluate_integer_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_on_edges"]], "evaluate_integer_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_on_faces"]], "evaluate_integer_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_on_instances"]], "evaluate_integer_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_integer_on_points"]], "evaluate_vector_at_index_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_corners"]], "evaluate_vector_at_index_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_curves"]], "evaluate_vector_at_index_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_edges"]], "evaluate_vector_at_index_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_faces"]], "evaluate_vector_at_index_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_instances"]], "evaluate_vector_at_index_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_at_index_on_points"]], "evaluate_vector_on_corners() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_on_corners"]], "evaluate_vector_on_curves() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_on_curves"]], "evaluate_vector_on_edges() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_on_edges"]], "evaluate_vector_on_faces() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_on_faces"]], "evaluate_vector_on_instances() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_on_instances"]], "evaluate_vector_on_points() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.evaluate_vector_on_points"]], "extrude() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.extrude"]], "extrude_edges() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.extrude_edges"]], "extrude_faces() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.extrude_faces"]], "extrude_vertices() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.extrude_vertices"]], "face_area (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.face_area"]], "face_is_planar() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.face_is_planar"]], "face_neighbors (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.face_neighbors"]], "face_of_corner() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.face_of_corner"]], "faceset_boundaries() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.faceset_boundaries"]], "fill_curve() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.fill_curve"]], "filled_mesh (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.filled_mesh"]], "filled_ngons (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.filled_ngons"]], "fillet_bezier() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.fillet_bezier"]], "fillet_curve() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.fillet_curve"]], "fillet_poly() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.fillet_poly"]], "flip_faces() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.flip_faces"]], "float_statistic_on_corners() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.float_statistic_on_corners"]], "float_statistic_on_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.float_statistic_on_curves"]], "float_statistic_on_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.float_statistic_on_edges"]], "float_statistic_on_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.float_statistic_on_faces"]], "float_statistic_on_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.float_statistic_on_instances"]], "float_statistic_on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.float_statistic_on_points"]], "handle_positions() (pynodes.geosocks.curve static method)": [[5, "pynodes.geosocks.Curve.handle_positions"]], "handle_type_selection() (pynodes.geosocks.curve static method)": [[5, "pynodes.geosocks.Curve.handle_type_selection"]], "index (pynodes.geosocks.geometry property)": [[5, "pynodes.geosocks.Geometry.index"]], "interpolate_curves() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.interpolate_curves"]], "is_cyclic (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.is_cyclic"]], "is_shade_smooth (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.is_shade_smooth"]], "join() (in module pynodes.geosocks)": [[5, "pynodes.geosocks.join"]], "join() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.join"]], "join_to_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.join_to_instances"]], "merge_by_distance() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.merge_by_distance"]], "merge_by_distance() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.merge_by_distance"]], "merge_by_distance() (pynodes.geosocks.points method)": [[5, "pynodes.geosocks.Points.merge_by_distance"]], "mesh_difference() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.mesh_difference"]], "mesh_intersect() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.mesh_intersect"]], "mesh_island (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.mesh_island"]], "mesh_union() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.mesh_union"]], "named_attribute_boolean() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.named_attribute_boolean"]], "named_attribute_color() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.named_attribute_color"]], "named_attribute_float() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.named_attribute_float"]], "named_attribute_integer() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.named_attribute_integer"]], "named_attribute_vector() (pynodes.geosocks.geometry static method)": [[5, "pynodes.geosocks.Geometry.named_attribute_vector"]], "nearest_surface() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.nearest_surface"]], "nearest_surface_boolean() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.nearest_surface_boolean"]], "nearest_surface_color() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.nearest_surface_color"]], "nearest_surface_float() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.nearest_surface_float"]], "nearest_surface_integer() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.nearest_surface_integer"]], "nearest_surface_vector() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.nearest_surface_vector"]], "nornal (pynodes.geosocks.geometry property)": [[5, "pynodes.geosocks.Geometry.nornal"]], "offset_corner_in_face() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.offset_corner_in_face"]], "offset_point_in_curve() (pynodes.geosocks.curve static method)": [[5, "pynodes.geosocks.Curve.offset_point_in_curve"]], "on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.on_points"]], "pack_uv_islands() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.pack_uv_islands"]], "parameter (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.parameter"]], "points_of_curve() (pynodes.geosocks.curve static method)": [[5, "pynodes.geosocks.Curve.points_of_curve"]], "position (pynodes.geosocks.geometry property)": [[5, "pynodes.geosocks.Geometry.position"]], "proximity() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.proximity"]], "pynodes.geosocks": [[5, "module-pynodes.geosocks"]], "radius (pynodes.geosocks.geometry property)": [[5, "pynodes.geosocks.Geometry.radius"]], "raycast_boolean() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.raycast_boolean"]], "raycast_color() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.raycast_color"]], "raycast_float() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.raycast_float"]], "raycast_integer() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.raycast_integer"]], "raycast_vector() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.raycast_vector"]], "realize_instances() (pynodes.geosocks.instances method)": [[5, "pynodes.geosocks.Instances.realize_instances"]], "remove_attribute() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.remove_attribute"]], "replace_material() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.replace_material"]], "resample() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.resample"]], "resample_evaluated() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.resample_evaluated"]], "resample_length() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.resample_length"]], "resolution (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.resolution"]], "reverse() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.reverse"]], "rotate_instances() (pynodes.geosocks.instances method)": [[5, "pynodes.geosocks.Instances.rotate_instances"]], "rotation (pynodes.geosocks.instances property)": [[5, "pynodes.geosocks.Instances.rotation"]], "sample_boolean() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.sample_boolean"]], "sample_boolean_index() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.sample_boolean_index"]], "sample_color() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.sample_color"]], "sample_color_index() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.sample_color_index"]], "sample_curve() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.sample_curve"]], "sample_float() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.sample_float"]], "sample_float_index() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.sample_float_index"]], "sample_index() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.sample_index"]], "sample_integer() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.sample_integer"]], "sample_integer_index() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.sample_integer_index"]], "sample_nearest() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.sample_nearest"]], "sample_uv_surface_boolean() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.sample_uv_surface_boolean"]], "sample_uv_surface_color() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.sample_uv_surface_color"]], "sample_uv_surface_float() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.sample_uv_surface_float"]], "sample_uv_surface_integer() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.sample_uv_surface_integer"]], "sample_uv_surface_vector() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.sample_uv_surface_vector"]], "sample_vector() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.sample_vector"]], "sample_vector_index() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.sample_vector_index"]], "scale (pynodes.geosocks.instances property)": [[5, "pynodes.geosocks.Instances.scale"]], "scale_elements() (pynodes.geosocks.instances method)": [[5, "pynodes.geosocks.Instances.scale_elements"]], "scale_elements() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.scale_elements"]], "scale_instances() (pynodes.geosocks.instances method)": [[5, "pynodes.geosocks.Instances.scale_instances"]], "select() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.select"]], "select_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.select_curves"]], "select_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.select_edges"]], "select_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.select_faces"]], "select_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.select_instances"]], "select_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.select_points"]], "selection (pynodes.geosocks.geometry property)": [[5, "pynodes.geosocks.Geometry.selection"]], "separate() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.separate"]], "separate() (pynodes.geosocks.instances method)": [[5, "pynodes.geosocks.Instances.separate"]], "separate_components() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.separate_components"]], "separate_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.separate_curves"]], "separate_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.separate_edges"]], "separate_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.separate_faces"]], "separate_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.separate_instances"]], "set_cyclic() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_cyclic"]], "set_handle_positions() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_handle_positions"]], "set_handle_type() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_handle_type"]], "set_id() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.set_id"]], "set_material() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.set_material"]], "set_material_index() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.set_material_index"]], "set_normal() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_normal"]], "set_position() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.set_position"]], "set_radius() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_radius"]], "set_radius() (pynodes.geosocks.points method)": [[5, "pynodes.geosocks.Points.set_radius"]], "set_resolution() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_resolution"]], "set_shade_smooth() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.set_shade_smooth"]], "set_spline_type() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_spline_type"]], "set_tilt() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.set_tilt"]], "shortest_edge_paths() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.shortest_edge_paths"]], "spline_length (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.spline_length"]], "split_edges() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.split_edges"]], "store_named_attribute() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.store_named_attribute"]], "subdivide() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.subdivide"]], "subdivide_mesh() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.subdivide_mesh"]], "subdivision_surface() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.subdivision_surface"]], "switch() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.switch"]], "tangent (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.tangent"]], "tilt (pynodes.geosocks.curve property)": [[5, "pynodes.geosocks.Curve.tilt"]], "to_curve() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.to_curve"]], "to_mesh() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.to_mesh"]], "to_mesh() (pynodes.geosocks.volume method)": [[5, "pynodes.geosocks.Volume.to_mesh"]], "to_points() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.to_points"]], "to_points() (pynodes.geosocks.instances method)": [[5, "pynodes.geosocks.Instances.to_points"]], "to_points() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.to_points"]], "to_vertices() (pynodes.geosocks.points method)": [[5, "pynodes.geosocks.Points.to_vertices"]], "to_volume() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.to_volume"]], "to_volume() (pynodes.geosocks.points method)": [[5, "pynodes.geosocks.Points.to_volume"]], "transform() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.transform"]], "translate_instances() (pynodes.geosocks.instances method)": [[5, "pynodes.geosocks.Instances.translate_instances"]], "triangulate() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.triangulate"]], "trim_factor() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.trim_factor"]], "trim_length() (pynodes.geosocks.curve method)": [[5, "pynodes.geosocks.Curve.trim_length"]], "uv_unwrap() (pynodes.geosocks.mesh method)": [[5, "pynodes.geosocks.Mesh.uv_unwrap"]], "vector_statistic_on_corners() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.vector_statistic_on_corners"]], "vector_statistic_on_curves() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.vector_statistic_on_curves"]], "vector_statistic_on_edges() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.vector_statistic_on_edges"]], "vector_statistic_on_faces() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.vector_statistic_on_faces"]], "vector_statistic_on_instances() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.vector_statistic_on_instances"]], "vector_statistic_on_points() (pynodes.geosocks.geometry method)": [[5, "pynodes.geosocks.Geometry.vector_statistic_on_points"]], "vertex_neighbors (pynodes.geosocks.mesh property)": [[5, "pynodes.geosocks.Mesh.vertex_neighbors"]], "vertex_of_corner() (pynodes.geosocks.mesh static method)": [[5, "pynodes.geosocks.Mesh.vertex_of_corner"]], "na_ot_arrangenodesop (class in pynodes.main)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp"]], "na_ot_nodebutton (class in pynodes.main)": [[6, "pynodes.main.NA_OT_NodeButton"]], "na_ot_nodebutton2 (class in pynodes.main)": [[6, "pynodes.main.NA_OT_NodeButton2"]], "na_ot_nodebuttonodd (class in pynodes.main)": [[6, "pynodes.main.NA_OT_NodeButtonOdd"]], "na_pt_nodepanel (class in pynodes.main)": [[6, "pynodes.main.NA_PT_NodePanel"]], "purgeorphanrecursive (class in pynodes.main)": [[6, "pynodes.main.PurgeOrphanRecursive"]], "abs_node_location() (in module pynodes.main)": [[6, "pynodes.main.abs_node_location"]], "average_y (pynodes.main.values attribute)": [[6, "pynodes.main.values.average_y"]], "bl_category (pynodes.main.na_pt_nodepanel attribute)": [[6, "pynodes.main.NA_PT_NodePanel.bl_category"]], "bl_idname (pynodes.main.na_ot_arrangenodesop attribute)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp.bl_idname"]], "bl_idname (pynodes.main.na_ot_nodebutton attribute)": [[6, "pynodes.main.NA_OT_NodeButton.bl_idname"]], "bl_idname (pynodes.main.na_ot_nodebutton2 attribute)": [[6, "pynodes.main.NA_OT_NodeButton2.bl_idname"]], "bl_idname (pynodes.main.na_ot_nodebuttonodd attribute)": [[6, "pynodes.main.NA_OT_NodeButtonOdd.bl_idname"]], "bl_idname (pynodes.main.purgeorphanrecursive attribute)": [[6, "pynodes.main.PurgeOrphanRecursive.bl_idname"]], "bl_label (pynodes.main.na_ot_arrangenodesop attribute)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp.bl_label"]], "bl_label (pynodes.main.na_ot_nodebutton attribute)": [[6, "pynodes.main.NA_OT_NodeButton.bl_label"]], "bl_label (pynodes.main.na_ot_nodebutton2 attribute)": [[6, "pynodes.main.NA_OT_NodeButton2.bl_label"]], "bl_label (pynodes.main.na_ot_nodebuttonodd attribute)": [[6, "pynodes.main.NA_OT_NodeButtonOdd.bl_label"]], "bl_label (pynodes.main.na_pt_nodepanel attribute)": [[6, "pynodes.main.NA_PT_NodePanel.bl_label"]], "bl_label (pynodes.main.purgeorphanrecursive attribute)": [[6, "pynodes.main.PurgeOrphanRecursive.bl_label"]], "bl_region_type (pynodes.main.na_pt_nodepanel attribute)": [[6, "pynodes.main.NA_PT_NodePanel.bl_region_type"]], "bl_space_type (pynodes.main.na_pt_nodepanel attribute)": [[6, "pynodes.main.NA_PT_NodePanel.bl_space_type"]], "draw() (pynodes.main.na_pt_nodepanel method)": [[6, "pynodes.main.NA_PT_NodePanel.draw"]], "execute() (pynodes.main.na_ot_arrangenodesop method)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp.execute"]], "execute() (pynodes.main.na_ot_nodebutton method)": [[6, "pynodes.main.NA_OT_NodeButton.execute"]], "execute() (pynodes.main.na_ot_nodebutton2 method)": [[6, "pynodes.main.NA_OT_NodeButton2.execute"]], "execute() (pynodes.main.na_ot_nodebuttonodd method)": [[6, "pynodes.main.NA_OT_NodeButtonOdd.execute"]], "execute() (pynodes.main.purgeorphanrecursive method)": [[6, "pynodes.main.PurgeOrphanRecursive.execute"]], "get_active_tree() (in module pynodes.main)": [[6, "pynodes.main.get_active_tree"]], "get_first_enabled_output() (in module pynodes.main)": [[6, "pynodes.main.get_first_enabled_output"]], "get_group_output_node() (in module pynodes.main)": [[6, "pynodes.main.get_group_output_node"]], "get_nodes_from_category() (in module pynodes.main)": [[6, "pynodes.main.get_nodes_from_category"]], "invoke() (pynodes.main.na_ot_nodebutton method)": [[6, "pynodes.main.NA_OT_NodeButton.invoke"]], "is_visible_socket() (in module pynodes.main)": [[6, "pynodes.main.is_visible_socket"]], "margin_x (pynodes.main.na_ot_arrangenodesop attribute)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp.margin_x"]], "margin_x (pynodes.main.values attribute)": [[6, "pynodes.main.values.margin_x"]], "margin_y (pynodes.main.na_ot_arrangenodesop attribute)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp.margin_y"]], "margin_y (pynodes.main.values attribute)": [[6, "pynodes.main.values.margin_y"]], "mat_name (pynodes.main.na_ot_arrangenodesop attribute)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp.mat_name"]], "mat_name (pynodes.main.values attribute)": [[6, "pynodes.main.values.mat_name"]], "node_mid_pt() (in module pynodes.main)": [[6, "pynodes.main.node_mid_pt"]], "nodemargin() (in module pynodes.main)": [[6, "pynodes.main.nodemargin"]], "nodemargin2() (pynodes.main.na_ot_arrangenodesop method)": [[6, "pynodes.main.NA_OT_ArrangeNodesOp.nodemargin2"]], "nodes_arrange() (in module pynodes.main)": [[6, "pynodes.main.nodes_arrange"]], "nodes_center() (in module pynodes.main)": [[6, "pynodes.main.nodes_center"]], "nodes_iterate() (in module pynodes.main)": [[6, "pynodes.main.nodes_iterate"]], "nodes_odd() (in module pynodes.main)": [[6, "pynodes.main.nodes_odd"]], "nodetree_get() (in module pynodes.main)": [[6, "pynodes.main.nodetree_get"]], "outputnode_search() (in module pynodes.main)": [[6, "pynodes.main.outputnode_search"]], "pynodes.main": [[6, "module-pynodes.main"]], "register() (in module pynodes.main)": [[6, "pynodes.main.register"]], "unregister() (in module pynodes.main)": [[6, "pynodes.main.unregister"]], "values (class in pynodes.main)": [[6, "pynodes.main.values"]], "x_last (pynodes.main.values attribute)": [[6, "pynodes.main.values.x_last"]], "functionnodealigneulertovector() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeAlignEulerToVector"]], "functionnodebooleanmath() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeBooleanMath"]], "functionnodecombinecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeCombineColor"]], "functionnodecompare() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeCompare"]], "functionnodefloattoint() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeFloatToInt"]], "functionnodeinputbool() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputBool"]], "functionnodeinputcolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputColor"]], "functionnodeinputint() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputInt"]], "functionnodeinputspecialcharacters() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputSpecialCharacters"]], "functionnodeinputstring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputString"]], "functionnodeinputvector() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeInputVector"]], "functionnoderandomvalue() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeRandomValue"]], "functionnodereplacestring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeReplaceString"]], "functionnoderotateeuler() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeRotateEuler"]], "functionnodeseparatecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeSeparateColor"]], "functionnodeslicestring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeSliceString"]], "functionnodestringlength() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeStringLength"]], "functionnodevaluetostring() (in module pynodes.nodes)": [[7, "pynodes.nodes.FunctionNodeValueToString"]], "geometrynodeaccumulatefield() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeAccumulateField"]], "geometrynodeattributedomainsize() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeAttributeDomainSize"]], "geometrynodeattributestatistic() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeAttributeStatistic"]], "geometrynodeblurattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeBlurAttribute"]], "geometrynodeboundbox() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeBoundBox"]], "geometrynodecaptureattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCaptureAttribute"]], "geometrynodecollectioninfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCollectionInfo"]], "geometrynodeconvexhull() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeConvexHull"]], "geometrynodecornersofface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCornersOfFace"]], "geometrynodecornersofvertex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCornersOfVertex"]], "geometrynodecurvearc() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveArc"]], "geometrynodecurveendpointselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveEndpointSelection"]], "geometrynodecurvehandletypeselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveHandleTypeSelection"]], "geometrynodecurvelength() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveLength"]], "geometrynodecurveofpoint() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveOfPoint"]], "geometrynodecurveprimitivebeziersegment() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveBezierSegment"]], "geometrynodecurveprimitivecircle() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveCircle"]], "geometrynodecurveprimitiveline() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveLine"]], "geometrynodecurveprimitivequadrilateral() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurvePrimitiveQuadrilateral"]], "geometrynodecurvequadraticbezier() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveQuadraticBezier"]], "geometrynodecurvesethandles() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveSetHandles"]], "geometrynodecurvespiral() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveSpiral"]], "geometrynodecurvesplinetype() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveSplineType"]], "geometrynodecurvestar() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveStar"]], "geometrynodecurvetomesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveToMesh"]], "geometrynodecurvetopoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeCurveToPoints"]], "geometrynodedeformcurvesonsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDeformCurvesOnSurface"]], "geometrynodedeletegeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDeleteGeometry"]], "geometrynodedistributepointsinvolume() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDistributePointsInVolume"]], "geometrynodedistributepointsonfaces() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDistributePointsOnFaces"]], "geometrynodedualmesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDualMesh"]], "geometrynodeduplicateelements() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeDuplicateElements"]], "geometrynodeedgepathstocurves() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgePathsToCurves"]], "geometrynodeedgepathstoselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgePathsToSelection"]], "geometrynodeedgesofcorner() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgesOfCorner"]], "geometrynodeedgesofvertex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgesOfVertex"]], "geometrynodeedgestofacegroups() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeEdgesToFaceGroups"]], "geometrynodeextrudemesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeExtrudeMesh"]], "geometrynodefaceofcorner() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFaceOfCorner"]], "geometrynodefieldatindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFieldAtIndex"]], "geometrynodefieldondomain() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFieldOnDomain"]], "geometrynodefillcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFillCurve"]], "geometrynodefilletcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFilletCurve"]], "geometrynodeflipfaces() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeFlipFaces"]], "geometrynodegeometrytoinstance() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeGeometryToInstance"]], "geometrynodeimageinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeImageInfo"]], "geometrynodeimagetexture() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeImageTexture"]], "geometrynodeinputcurvehandlepositions() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputCurveHandlePositions"]], "geometrynodeinputcurvetilt() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputCurveTilt"]], "geometrynodeinputid() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputID"]], "geometrynodeinputimage() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputImage"]], "geometrynodeinputindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputIndex"]], "geometrynodeinputinstancerotation() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputInstanceRotation"]], "geometrynodeinputinstancescale() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputInstanceScale"]], "geometrynodeinputmaterial() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMaterial"]], "geometrynodeinputmaterialindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMaterialIndex"]], "geometrynodeinputmeshedgeangle() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshEdgeAngle"]], "geometrynodeinputmeshedgeneighbors() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshEdgeNeighbors"]], "geometrynodeinputmeshedgevertices() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshEdgeVertices"]], "geometrynodeinputmeshfacearea() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshFaceArea"]], "geometrynodeinputmeshfaceisplanar() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshFaceIsPlanar"]], "geometrynodeinputmeshfaceneighbors() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshFaceNeighbors"]], "geometrynodeinputmeshisland() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshIsland"]], "geometrynodeinputmeshvertexneighbors() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputMeshVertexNeighbors"]], "geometrynodeinputnamedattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputNamedAttribute"]], "geometrynodeinputnormal() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputNormal"]], "geometrynodeinputposition() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputPosition"]], "geometrynodeinputradius() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputRadius"]], "geometrynodeinputscenetime() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputSceneTime"]], "geometrynodeinputshadesmooth() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputShadeSmooth"]], "geometrynodeinputshortestedgepaths() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputShortestEdgePaths"]], "geometrynodeinputsplinecyclic() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputSplineCyclic"]], "geometrynodeinputsplineresolution() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputSplineResolution"]], "geometrynodeinputtangent() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInputTangent"]], "geometrynodeinstanceonpoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInstanceOnPoints"]], "geometrynodeinstancestopoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInstancesToPoints"]], "geometrynodeinterpolatecurves() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeInterpolateCurves"]], "geometrynodeisviewport() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeIsViewport"]], "geometrynodejoingeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeJoinGeometry"]], "geometrynodematerialselection() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMaterialSelection"]], "geometrynodemergebydistance() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMergeByDistance"]], "geometrynodemeshboolean() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshBoolean"]], "geometrynodemeshcircle() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCircle"]], "geometrynodemeshcone() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCone"]], "geometrynodemeshcube() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCube"]], "geometrynodemeshcylinder() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshCylinder"]], "geometrynodemeshfacesetboundaries() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshFaceSetBoundaries"]], "geometrynodemeshgrid() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshGrid"]], "geometrynodemeshicosphere() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshIcoSphere"]], "geometrynodemeshline() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshLine"]], "geometrynodemeshtocurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshToCurve"]], "geometrynodemeshtopoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshToPoints"]], "geometrynodemeshtovolume() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshToVolume"]], "geometrynodemeshuvsphere() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeMeshUVSphere"]], "geometrynodeobjectinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeObjectInfo"]], "geometrynodeoffsetcornerinface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeOffsetCornerInFace"]], "geometrynodeoffsetpointincurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeOffsetPointInCurve"]], "geometrynodepoints() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePoints"]], "geometrynodepointsofcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePointsOfCurve"]], "geometrynodepointstovertices() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePointsToVertices"]], "geometrynodepointstovolume() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodePointsToVolume"]], "geometrynodeproximity() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeProximity"]], "geometrynoderaycast() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRaycast"]], "geometrynoderealizeinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRealizeInstances"]], "geometrynoderemoveattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRemoveAttribute"]], "geometrynodereplacematerial() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeReplaceMaterial"]], "geometrynoderesamplecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeResampleCurve"]], "geometrynodereversecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeReverseCurve"]], "geometrynoderotateinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeRotateInstances"]], "geometrynodesamplecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleCurve"]], "geometrynodesampleindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleIndex"]], "geometrynodesamplenearest() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleNearest"]], "geometrynodesamplenearestsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleNearestSurface"]], "geometrynodesampleuvsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSampleUVSurface"]], "geometrynodescaleelements() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeScaleElements"]], "geometrynodescaleinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeScaleInstances"]], "geometrynodeselfobject() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSelfObject"]], "geometrynodeseparatecomponents() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSeparateComponents"]], "geometrynodeseparategeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSeparateGeometry"]], "geometrynodesetcurvehandlepositions() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveHandlePositions"]], "geometrynodesetcurvenormal() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveNormal"]], "geometrynodesetcurveradius() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveRadius"]], "geometrynodesetcurvetilt() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetCurveTilt"]], "geometrynodesetid() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetID"]], "geometrynodesetmaterial() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetMaterial"]], "geometrynodesetmaterialindex() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetMaterialIndex"]], "geometrynodesetpointradius() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetPointRadius"]], "geometrynodesetposition() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetPosition"]], "geometrynodesetshadesmooth() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetShadeSmooth"]], "geometrynodesetsplinecyclic() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetSplineCyclic"]], "geometrynodesetsplineresolution() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSetSplineResolution"]], "geometrynodesplinelength() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSplineLength"]], "geometrynodesplineparameter() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSplineParameter"]], "geometrynodesplitedges() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSplitEdges"]], "geometrynodestorenamedattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeStoreNamedAttribute"]], "geometrynodestringjoin() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeStringJoin"]], "geometrynodestringtocurves() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeStringToCurves"]], "geometrynodesubdividecurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSubdivideCurve"]], "geometrynodesubdividemesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSubdivideMesh"]], "geometrynodesubdivisionsurface() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSubdivisionSurface"]], "geometrynodeswitch() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeSwitch"]], "geometrynodetransform() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTransform"]], "geometrynodetranslateinstances() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTranslateInstances"]], "geometrynodetriangulate() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTriangulate"]], "geometrynodetrimcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeTrimCurve"]], "geometrynodeuvpackislands() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeUVPackIslands"]], "geometrynodeuvunwrap() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeUVUnwrap"]], "geometrynodevertexofcorner() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeVertexOfCorner"]], "geometrynodeviewer() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeViewer"]], "geometrynodevolumecube() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeVolumeCube"]], "geometrynodevolumetomesh() (in module pynodes.nodes)": [[7, "pynodes.nodes.GeometryNodeVolumeToMesh"]], "shadernodeaddshader() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeAddShader"]], "shadernodeambientocclusion() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeAmbientOcclusion"]], "shadernodeattribute() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeAttribute"]], "shadernodebackground() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBackground"]], "shadernodebevel() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBevel"]], "shadernodeblackbody() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBlackbody"]], "shadernodebrightcontrast() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBrightContrast"]], "shadernodebsdfanisotropic() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfAnisotropic"]], "shadernodebsdfdiffuse() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfDiffuse"]], "shadernodebsdfglass() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfGlass"]], "shadernodebsdfglossy() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfGlossy"]], "shadernodebsdfhair() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfHair"]], "shadernodebsdfhairprincipled() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfHairPrincipled"]], "shadernodebsdfprincipled() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfPrincipled"]], "shadernodebsdfrefraction() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfRefraction"]], "shadernodebsdftoon() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfToon"]], "shadernodebsdftranslucent() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfTranslucent"]], "shadernodebsdftransparent() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfTransparent"]], "shadernodebsdfvelvet() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBsdfVelvet"]], "shadernodebump() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeBump"]], "shadernodecameradata() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeCameraData"]], "shadernodeclamp() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeClamp"]], "shadernodecombinecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeCombineColor"]], "shadernodecombinexyz() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeCombineXYZ"]], "shadernodedisplacement() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeDisplacement"]], "shadernodeeeveespecular() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeEeveeSpecular"]], "shadernodeemission() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeEmission"]], "shadernodefloatcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeFloatCurve"]], "shadernodefresnel() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeFresnel"]], "shadernodegamma() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeGamma"]], "shadernodehairinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeHairInfo"]], "shadernodeholdout() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeHoldout"]], "shadernodehuesaturation() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeHueSaturation"]], "shadernodeinvert() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeInvert"]], "shadernodelayerweight() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeLayerWeight"]], "shadernodelightfalloff() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeLightFalloff"]], "shadernodelightpath() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeLightPath"]], "shadernodemaprange() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMapRange"]], "shadernodemapping() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMapping"]], "shadernodemath() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMath"]], "shadernodemix() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMix"]], "shadernodemixshader() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeMixShader"]], "shadernodenewgeometry() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeNewGeometry"]], "shadernodenormal() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeNormal"]], "shadernodenormalmap() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeNormalMap"]], "shadernodeobjectinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeObjectInfo"]], "shadernodeoutputaov() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputAOV"]], "shadernodeoutputlight() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputLight"]], "shadernodeoutputmaterial() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputMaterial"]], "shadernodeoutputworld() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeOutputWorld"]], "shadernodeparticleinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeParticleInfo"]], "shadernodepointinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodePointInfo"]], "shadernodergb() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeRGB"]], "shadernodergbcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeRGBCurve"]], "shadernodergbtobw() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeRGBToBW"]], "shadernodescript() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeScript"]], "shadernodeseparatecolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeSeparateColor"]], "shadernodeseparatexyz() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeSeparateXYZ"]], "shadernodeshadertorgb() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeShaderToRGB"]], "shadernodesubsurfacescattering() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeSubsurfaceScattering"]], "shadernodetangent() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTangent"]], "shadernodetexbrick() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexBrick"]], "shadernodetexchecker() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexChecker"]], "shadernodetexcoord() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexCoord"]], "shadernodetexenvironment() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexEnvironment"]], "shadernodetexgradient() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexGradient"]], "shadernodetexies() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexIES"]], "shadernodeteximage() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexImage"]], "shadernodetexmagic() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexMagic"]], "shadernodetexmusgrave() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexMusgrave"]], "shadernodetexnoise() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexNoise"]], "shadernodetexpointdensity() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexPointDensity"]], "shadernodetexsky() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexSky"]], "shadernodetexvoronoi() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexVoronoi"]], "shadernodetexwave() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexWave"]], "shadernodetexwhitenoise() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeTexWhiteNoise"]], "shadernodeuvmap() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeUVMap"]], "shadernodevaltorgb() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeValToRGB"]], "shadernodevalue() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeValue"]], "shadernodevectorcurve() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorCurve"]], "shadernodevectordisplacement() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorDisplacement"]], "shadernodevectormath() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorMath"]], "shadernodevectorrotate() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorRotate"]], "shadernodevectortransform() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVectorTransform"]], "shadernodevertexcolor() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVertexColor"]], "shadernodevolumeabsorption() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumeAbsorption"]], "shadernodevolumeinfo() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumeInfo"]], "shadernodevolumeprincipled() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumePrincipled"]], "shadernodevolumescatter() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeVolumeScatter"]], "shadernodewavelength() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeWavelength"]], "shadernodewireframe() (in module pynodes.nodes)": [[7, "pynodes.nodes.ShaderNodeWireframe"]], "pynodes.nodes": [[7, "module-pynodes.nodes"]], "key (class in pynodes.scene)": [[8, "pynodes.scene.Key"]], "mat (class in pynodes.scene)": [[8, "pynodes.scene.Mat"]], "mod (class in pynodes.scene)": [[8, "pynodes.scene.Mod"]], "o (class in pynodes.scene)": [[8, "pynodes.scene.O"]], "objtype (class in pynodes.scene)": [[8, "pynodes.scene.ObjType"]], "tree (class in pynodes.scene)": [[8, "pynodes.scene.Tree"]], "__eq__() (pynodes.scene.key method)": [[8, "pynodes.scene.Key.__eq__"]], "__getitem__() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.__getitem__"]], "__hash__() (pynodes.scene.key method)": [[8, "pynodes.scene.Key.__hash__"]], "__matmul__() (pynodes.scene.objtype method)": [[8, "pynodes.scene.ObjType.__matmul__"]], "bevel (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.bevel"]], "circle (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.circle"]], "cone (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.cone"]], "cube (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.cube"]], "geometry_nodes (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.geometry_nodes"]], "ico_sphere (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.ico_sphere"]], "load() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.load"]], "monkey (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.monkey"]], "nurbs_path (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.nurbs_path"]], "parse_mat_slots() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.parse_mat_slots"]], "parse_modifier() (pynodes.scene.tree method)": [[8, "pynodes.scene.Tree.parse_modifier"]], "plane (pynodes.scene.o attribute)": [[8, "pynodes.scene.O.plane"]], "pynodes.scene": [[8, "module-pynodes.scene"]], "slots (pynodes.scene.mat attribute)": [[8, "pynodes.scene.Mat.slots"]], "subdivision (pynodes.scene.mod attribute)": [[8, "pynodes.scene.Mod.subdivision"]]}})